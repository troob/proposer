
===Proposer===


===Read Teams Current Rosters===

Setting: Read New Teams after trades and aquisitions

Input: game_teams = [(away team, home team), ...] = [('nyk', 'bkn')]

Output: all_teams_rosters = {team:[players],... = {'nyk':['jalen brunson',...],...


===Generate All Players Props===

Settings: find/read new data, read certain seasons and time periods, irregular play time and other vars

Input: default = all players in upcoming games today
Input: players_names = [p1, ...] = ['jalen brunson', ...]
Input: game_teams = [(away team, home team), ...] = [('nyk', 'bkn'), ...]
Input: teams_current_rosters = {team:[players],..., {'nyk': [jalen brunson, ...], ...}

Output: all_players_props = [{strategy x:{player:p1,...},...},...]


===Read All Players ESPN IDs===

Input: players_names: [p1, ...] = ['jalen brunson', ...]

Output: all_players_espn_ids = {player:id, ...} = {'jalen brunson': '3934672', ...}


===Read All Players Teams===

Input: all_players_espn_ids = {player:id, ...} = {'jalen brunson': '3934672', ...}

Output: all_players_teams = {player:{year:{team:{GP:gp, MIN:min},... = {'bam adebayo': {'2018': {'mia': {'GP':69, 'MIN':30.2}, ...


===Read All Players Season Logs===

Settings: read x seasons prev, init year of interest

Input: players_names = [p1, ...] = ['jalen brunson', ...]
Input: all_players_espn_ids = {player:id, ...} = {'jalen brunson': '3934672', ...}
Input: all_players_teams = {player:{year:{team:{gp:gp, min:min},... = {'bam adebayo': {'2018': {'mia': {GP:69, MIN:30}, ...

Output: all_players_season_logs = {player:{year:{stat name:{game idx:stat val, ... = {'jalen brunson': {'2024': {'Player': {'0': 'jalen brunson', ...


===Warning: No JSON File: data/game logs/cur/colin castleton 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/prev/colin castleton prev logs.json===


Warning: Colin Castleton did NOT play season 2023!


===Warning: No JSON File: data/game logs/cur/max christie 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/cur/anthony davis 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/cur/alex fudge 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/prev/alex fudge prev logs.json===


Warning: Alex Fudge did NOT play season 2023!


===Warning: No JSON File: data/game logs/cur/rui hachimura 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/cur/jaxson hayes 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/cur/d'moi hodge 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/prev/d'moi hodge prev logs.json===


Warning: D'Moi Hodge did NOT play season 2023!


===Warning: No JSON File: data/game logs/cur/jalen hood schifino 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/prev/jalen hood schifino prev logs.json===


Warning: Jalen Hood Schifino did NOT play season 2023!


===Warning: No JSON File: data/game logs/cur/lebron james 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/cur/maxwell lewis 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/prev/maxwell lewis prev logs.json===


Warning: Maxwell Lewis did NOT play season 2023!


===Warning: No JSON File: data/game logs/cur/skylar mays 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/cur/taurean prince 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/cur/austin reaves 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/cur/cam reddish 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/cur/d'angelo russell 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/cur/jarred vanderbilt 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/cur/gabe vincent 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/cur/dylan windler 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/cur/christian wood 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/cur/amari bailey 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/prev/amari bailey prev logs.json===


Warning: Amari Bailey did NOT play season 2023!


===Warning: No JSON File: data/game logs/cur/lamelo ball 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/cur/leaky black 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/prev/leaky black prev logs.json===


Warning: Leaky Black did NOT play season 2023!


===Warning: No JSON File: data/game logs/cur/james bouknight 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/cur/miles bridges 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/prev/miles bridges prev logs.json===


Warning: Miles Bridges did NOT play season 2023!


===Warning: No JSON File: data/game logs/cur/gordon hayward 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/cur/kyle lowry 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/cur/cody martin 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/cur/bryce mcgowens 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/cur/nathan mensah 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/prev/nathan mensah prev logs.json===


Warning: Nathan Mensah did NOT play season 2023!


===Warning: No JSON File: data/game logs/cur/brandon miller 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/prev/brandon miller prev logs.json===


Warning: Brandon Miller did NOT play season 2023!


===Warning: No JSON File: data/game logs/cur/frank ntilikina 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/cur/nick richards 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/cur/ish smith 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/cur/nick smith jr 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/prev/nick smith jr prev logs.json===


Warning: Nick Smith Jr did NOT play season 2023!


===Warning: No JSON File: data/game logs/cur/jt thor 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/cur/pj washington 2024 game log 02-05-24.json===


===Warning: No JSON File: data/game logs/cur/mark williams 2024 game log 02-05-24.json===


===Read All Players Positions===

Input: all_players_espn_ids = {player:id, ...} = {'jalen brunson': '3934672', ...}

Output: all_players_positions = {player:position, ...} = {'jalen brunson': 'pg', ...}

===Read All Games Info===

Input: all_players_season_logs = {player:{year:{stat name:{game idx:stat val, ... = {'jalen brunson': {'2024': {'Player': {'0': 'jalen brunson', ...

Output: all_games_info = {year:{game key:{city:c, time of day:tod, audience:a, ...


===Read Game ESPN ID======

Input: game_key = away home date = lal nyk 2/3/2024
search_string: lal+lakers+nyk+knicks+feb+3+2024+nba+espn+box+score
game_espn_id: 401585329

===Read Game ESPN ID======

Input: game_key = away home date = ind cha 2/4/2024
search_string: ind+pacers+cha+hornets+feb+4+2024+nba+espn+box+score
game_espn_id: 401585335

===FIND PLAYERS===


===Read All Teams Rosters===

Setting: Read New Teams after trades and aquisitions

Input: teams = [t1, ...] = ['nyk', 'bkn',...]

Output: all_teams_rosters = {team:[players],... = {'nyk':['jalen brunson',...],...


===Read All Box Scores===

Setting: season years = ['2024', '2023']
Setting: season part = regular
Setting: read new game ids = True

Input: all_players_season_logs = {player:{year:{stat name:{game idx:stat val, ... = {'jalen brunson': {'2024': {'Player': {'0': 'jalen brunson', ...
Input: all_players_teams = {player:{year:{team:{GP:gp, MIN:min},... = {'bam adebayo': {'2018': {'mia': {'GP':69, 'MIN':30}, ...

Output: all_box_scores = {year:{game key:{away:{starters:{player:play time,...},bench:{...}},home:{...}},... = {'2024': {'mem okc 12/18/2023': {'away': {'starters': {'J Jackson Jr PF':30, ...}, 'bench': {...}}, 'home': ...


===Read Game ESPN ID======

Input: game_key = away home date = lal nyk 2/3/2024
found game key saved
game_espn_id: 401585329

===Read Game Box Scores: LAL NYK 2/3/2024, Max Christie===

game_box_scores_dict: {'away': {'starters': {'A Davis PF': '36', 'R Hachimura PF': '19', 'L James SF': '40', 'D Russell PG': '27', 'A Reaves SG': '39'}, 'bench': {'T Prince PF': '33', 'C Wood F': '7', 'J Hayes C': '13', 'M Christie G': '26'}}, 'home': {'starters': {'P Achiuwa PF': '42', 'I Hartenstein C': '33', 'J Brunson PG': '45', 'J Hart SG': '42', 'D DiVincenzo SG': '40'}, 'bench': {'J Sims C': '15', 'D Skapintsev C': '0', 'M Flynn PG': '3', 'M McBride PG': '20', 'D Jeffries SG': '0', 'J Martin G': '0'}}}

===Read Game ESPN ID======

Input: game_key = away home date = ind cha 2/4/2024
found game key saved
game_espn_id: 401585335

===Read Game Box Scores: IND CHA 2/4/2024, Leaky Black===

game_box_scores_dict: {'away': {'starters': {'P Siakam PF': '35', 'A Nesmith SF': '34', 'M Turner C': '26', 'A Nembhard PG': '27', 'T Haliburton PG': '20'}, 'bench': {'O Toppin PF': '11', 'J Smith PF': '20', 'J Walker F': '2', 'I Jackson SF': '2', 'TJ McConnell PG': '21', 'B Hield SG': '12', 'K Brown SG': '2', 'B Mathurin SG': '27', 'B Sheppard G': '2'}}, 'home': {'starters': {'B Miller F': '38', 'M Bridges SF': '38', 'N Richards C': '33', 'I Smith PG': '26', 'B McGowens G': '16'}, 'bench': {'PJ Washington PF': '32', 'L Black F': '19', 'J Thor F': '10', 'N Mensah C': '2', 'J Bouknight SG': '2', 'N Smith Jr G': '25'}}}

===Read All Players Abbrevs===

Input: all_box_scores = {year:{game key:{away:{starters:[],bench:[]},home:{starters:[],bench:[]}},... = {'2024': {'mem okc 12/18/2023': {'away': {'starters': ['J Jackson Jr PF', ...], 'bench': ['S Aldama PF', ...]}, 'home': ...
Input: all_players_teams = {player:{year:{team:{GP:gp, MIN:min},... = {'bam adebayo': {'2018': {'mia': {GP:69, MIN:30}, ...
Input: rosters = {team:roster, ... = {'nyk': [jalen brunson, ...], ...
Input: Current Year bc only accurate roster.

Output: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-MEM': 'jaren jackson jr',...


===Read Year Players Abbrevs: 2024===

Input: year_box_scores = {game key:{away:{starters:[],bench:[]},home:{starters:[],bench:[]}},... = {'mem okc 12/18/2023': {'away': {'starters': ['J Jackson Jr PF', ...], 'bench': ['S Aldama PF', ...]}, 'home': ...
Input: all_players_teams = {player:{year:{team:{GP:gp, MIN:min},... = {'bam adebayo': {'2018': {'mia': {GP:69, MIN:30}, ...
Input: init_year_players_abbrevs = {player:abbrev, ... = 
Input: rosters = {team:roster, ... = {'nyk': [jalen brunson, ...], ...
Input: Current Year bc only accurate roster.

Output: year_players_abbrevs = {player abbrev-team abbrev:player, ... =  {'J Jackson Jr PF-MEM': 'jaren jackson jr',...

name not saved J Christopher SG-uta
name not saved T Gibson F-wsh
name not saved X Cooks G-wsh
name not saved I Roby F-nyk
name not saved N Knight F-nyk
name not saved W Gabriel F-bos
name not saved D Steward G-bos
name not saved D Finney Smith PF-cle
name not saved C Johnson SF-cle
name not saved M Bridges SF-cle
name not saved N Claxton C-cle
name not saved S Dinwiddie PG-cle
name not saved R O'Neale PF-cle
name not saved T Watford PF-cle
name not saved H Giles III F-cle
name not saved D Smith Jr PG-cle
name not saved C Thomas SG-cle
name not saved L Walker IV G-cle
name not saved D Wade PF-bkn
name not saved I Okoro SF-bkn
name not saved J Allen C-bkn
name not saved D Mitchell SG-bkn
name not saved M Strus SG-bkn
name not saved G Niang SF-bkn
name not saved T Thompson C-bkn
name not saved C LeVert SG-bkn
name not saved S Merrill SG-bkn
name not saved M Bridges SF-lal
name not saved N Claxton C-lal
name not saved S Dinwiddie PG-lal
name not saved B Simmons PG-lal
name not saved C Thomas SG-lal
name not saved D Finney Smith PF-lal
name not saved R O'Neale PF-lal
name not saved D Bazley PF-lal
name not saved T Watford PF-lal
name not saved H Giles III F-lal
name not saved J Wilson F-lal
name not saved N Clowney F-lal
name not saved D Sharpe C-lal
name not saved D Smith Jr PG-lal
name not saved A Brooks G-lal
name not saved L Walker IV G-lal
name not saved A Davis PF-bkn
name not saved T Prince PF-bkn
name not saved L James SF-bkn
name not saved D Russell PG-bkn
name not saved A Reaves SG-bkn
name not saved R Hachimura PF-bkn
name not saved C Wood F-bkn
name not saved M Lewis F-bkn
name not saved A Fudge F-bkn
name not saved J Hayes C-bkn
name not saved C Castleton C-bkn
name not saved G Vincent PG-bkn
name not saved B Hamilton G-bkn
name not saved M Christie G-bkn
name not saved D Hodge G-bkn
name not saved J Hood Schifino G-bkn
name not saved G Conditt IV F-por
name not saved K Knox II SF-por
name not saved K Durant PF-bkn
name not saved D Eubanks PF-bkn
name not saved B Beal SG-bkn
name not saved G Allen SG-bkn
name not saved D Booker SG-bkn
name not saved C Metu PF-bkn
name not saved K Bates Diop SF-bkn
name not saved J Okogie SF-bkn
name not saved N Little SF-bkn
name not saved U Azubuike C-bkn
name not saved B Bol C-bkn
name not saved S Lee G-bkn
name not saved J Goodwin G-bkn
name not saved J Nurkic C-bkn
name not saved E Gordon SG-bkn
name not saved Y Watanabe SF-bkn
name not saved J Green PF-den
name not saved B Brown SF-den
name not saved J Harris SF-bkn
name not saved S Curry SG-bkn
name not saved A Thompson F-bkn
name not saved B Bogdanovic SF-bkn
name not saved I Stewart C-bkn
name not saved C Cunningham PG-bkn
name not saved J Ivey PG-bkn
name not saved M Bagley III PF-bkn
name not saved K Knox II SF-bkn
name not saved A Burks SG-bkn
name not saved M Sasser G-bkn
name not saved C Johnson SF-det
name not saved M Bridges SF-det
name not saved N Claxton C-det
name not saved S Dinwiddie PG-det
name not saved C Thomas SG-det
name not saved D Finney Smith PF-det
name not saved R O'Neale PF-det
name not saved T Watford PF-det
name not saved H Giles III F-det
name not saved J Wilson F-det
name not saved D Sharpe C-det
name not saved D Smith Jr PG-det
name not saved Tillman Sr F-mem
name not saved M Norris F-atl
name not saved D Days F-hou
name not saved T Hudgins G-hou
name not saved L Robbins C-nop
name not saved L Nolley II G-nop
name not saved E Sumner PG-cha
name not saved D Duke Jr G-phi
name not saved M Maker C-tor
name not saved M Gueye F-tor
name not saved C Jones G-chi
name not saved Q Jackson G-chi
name not saved M Heidegger G-chi
name not saved J Powell G-cle
name not saved J Porter C-det
name not saved M Bagley III PF-okc
name not saved A Thompson F-okc
name not saved I Stewart C-okc
name not saved K Hayes PG-okc
name not saved A Burks SG-okc
name not saved T Evbuomwan F-okc
name not saved J Harris SF-okc
name not saved J Wiseman C-okc
name not saved J Ivey PG-okc
name not saved S Umude G-okc
name not saved M Sasser G-okc
name not saved M Cazalon G-okc
name not saved C Holmgren PF-det
name not saved Jal Williams F-det
name not saved S Gilgeous Alexander PG-det
name not saved J Giddey SG-det
name not saved L Dort G-det
name not saved L Waters III F-det
name not saved J Robinson Earl F-det
name not saved O Dieng F-det
name not saved K Williams SF-det
name not saved O Sarr C-det
name not saved I Joe SG-det
name not saved V Micic G-det
name not saved C Wallace G-det
name not saved O Moore G-mil
name not saved J Nowell SG-sac
name not saved D Hunter SF-orl
name not saved J Johnson SF-orl
name not saved C Capela C-orl
name not saved T Young PG-orl
name not saved D Murray SG-orl
name not saved B Fernando PF-orl
name not saved O Okongwu PF-orl
name not saved A Griffin F-orl
name not saved S Bey SF-orl
name not saved B Bogdanovic SG-orl
name not saved P Banchero PF-atl
name not saved F Wagner SF-atl
name not saved G Bitadze C-atl
name not saved M Fultz PG-atl
name not saved J Suggs SG-atl
name not saved J Isaac PF-atl
name not saved C Okeke PF-atl
name not saved M Wagner C-atl
name not saved C Anthony PG-atl
name not saved J Ingles SG-atl
name not saved A Black G-atl
name not saved bench-atl
name not saved I Wong G-ind
name not saved S Adams C-mem
name not saved M Mulder G-mem
name not saved S Cooper PG-cle
name not saved J Robinson Earl F-okc
name not saved R Hunter G-cha
name not saved J Jackson Jr PF-mil
name not saved X Tillman F-mil
name not saved Z Williams F-mil
name not saved M Smart PG-mil
name not saved D Bane SG-mil
name not saved S Aldama PF-mil
name not saved I Todd PF-mil
name not saved M Hurt F-mil
name not saved K Lofton Jr F-mil
name not saved J LaRavia F-mil
name not saved D Roddy F-mil
name not saved L Kennard SG-mil
name not saved S Harrison G-mil
name not saved J Gilyard G-mil
name not saved V Williams Jr G-mil
name not saved G Antetokounmpo PF-mem
name not saved K Middleton SF-mem
name not saved B Lopez C-mem
name not saved D Lillard PG-mem
name not saved M Beasley SG-mem
name not saved J Crowder PF-mem
name not saved M Beauchamp F-mem
name not saved T Antetokounmpo SF-mem
name not saved R Lopez C-mem
name not saved C Payne PG-mem
name not saved P Connaughton SG-mem
name not saved A Green G-mem
name not saved A Jackson Jr G-mem
name not saved T Washington Jr G-mem
name not saved J McDaniels PF-sas
name not saved R Gobert C-sas
name not saved K Towns C-sas
name not saved M Conley PG-sas
name not saved A Edwards SG-sas
name not saved K Anderson SF-sas
name not saved N Reid C-sas
name not saved S Milton SG-sas
name not saved N Alexander Walker SG-sas
name not saved Z Collins PF-min
name not saved J Sochan F-min
name not saved K Johnson SF-min
name not saved V Wembanyama C-min
name not saved D Vassell SG-min
name not saved D McDermott SF-min
name not saved C Osman SF-min
name not saved C Bassey C-min
name not saved T Jones PG-min
name not saved M Branham G-min
name not saved B Caboclo F-sas
name not saved J Mor F-sas
name not saved D Tucker G-sas
name not saved Q Weatherspoon G-sas
name not saved D Bacon G-sas
name not saved E Alber F-sas
name not saved Y Atias F-sas
name not saved Y Berman F-sas
name not saved J Ducree F-sas
name not saved O Hai F-sas
name not saved N Missia Dio F-sas
name not saved J Ruiz F-sas
name not saved J Siggers SG-sas
name not saved A Hagans G-sas
name not saved J Poeltl C-sas
name not saved I Roby F-sas
name not saved S Johnson SF-sas
name not saved G Dieng C-sas
name not saved J Richardson SG-sas
name not saved R Langford SG-sas
name not saved K Irving PG-bkn
name not saved P Mills PG-bkn
name not saved E Sumner PG-bkn
name not saved R Williams III C-bos
name not saved M Smart PG-bos
name not saved G Williams PF-bos
name not saved M Brogdon PG-bos
name not saved J McDaniels PF-cha
name not saved M Plumlee C-cha
name not saved D Smith Jr PG-cha
WARNING unknown_names: ['J Christopher SG-uta', 'T Gibson F-wsh', 'X Cooks G-wsh', 'I Roby F-nyk', 'N Knight F-nyk', 'W Gabriel F-bos', 'D Steward G-bos', 'D Finney Smith PF-cle', 'C Johnson SF-cle', 'M Bridges SF-cle', 'N Claxton C-cle', 'S Dinwiddie PG-cle', "R O'Neale PF-cle", 'T Watford PF-cle', 'H Giles III F-cle', 'D Smith Jr PG-cle', 'C Thomas SG-cle', 'L Walker IV G-cle', 'D Wade PF-bkn', 'I Okoro SF-bkn', 'J Allen C-bkn', 'D Mitchell SG-bkn', 'M Strus SG-bkn', 'G Niang SF-bkn', 'T Thompson C-bkn', 'C LeVert SG-bkn', 'S Merrill SG-bkn', 'M Bridges SF-lal', 'N Claxton C-lal', 'S Dinwiddie PG-lal', 'B Simmons PG-lal', 'C Thomas SG-lal', 'D Finney Smith PF-lal', "R O'Neale PF-lal", 'D Bazley PF-lal', 'T Watford PF-lal', 'H Giles III F-lal', 'J Wilson F-lal', 'N Clowney F-lal', 'D Sharpe C-lal', 'D Smith Jr PG-lal', 'A Brooks G-lal', 'L Walker IV G-lal', 'A Davis PF-bkn', 'T Prince PF-bkn', 'L James SF-bkn', 'D Russell PG-bkn', 'A Reaves SG-bkn', 'R Hachimura PF-bkn', 'C Wood F-bkn', 'M Lewis F-bkn', 'A Fudge F-bkn', 'J Hayes C-bkn', 'C Castleton C-bkn', 'G Vincent PG-bkn', 'B Hamilton G-bkn', 'M Christie G-bkn', 'D Hodge G-bkn', 'J Hood Schifino G-bkn', 'G Conditt IV F-por', 'K Knox II SF-por', 'K Durant PF-bkn', 'D Eubanks PF-bkn', 'B Beal SG-bkn', 'G Allen SG-bkn', 'D Booker SG-bkn', 'C Metu PF-bkn', 'K Bates Diop SF-bkn', 'J Okogie SF-bkn', 'N Little SF-bkn', 'U Azubuike C-bkn', 'B Bol C-bkn', 'S Lee G-bkn', 'J Goodwin G-bkn', 'J Nurkic C-bkn', 'E Gordon SG-bkn', 'Y Watanabe SF-bkn', 'J Green PF-den', 'B Brown SF-den', 'J Harris SF-bkn', 'S Curry SG-bkn', 'A Thompson F-bkn', 'B Bogdanovic SF-bkn', 'I Stewart C-bkn', 'C Cunningham PG-bkn', 'J Ivey PG-bkn', 'M Bagley III PF-bkn', 'K Knox II SF-bkn', 'A Burks SG-bkn', 'M Sasser G-bkn', 'C Johnson SF-det', 'M Bridges SF-det', 'N Claxton C-det', 'S Dinwiddie PG-det', 'C Thomas SG-det', 'D Finney Smith PF-det', "R O'Neale PF-det", 'T Watford PF-det', 'H Giles III F-det', 'J Wilson F-det', 'D Sharpe C-det', 'D Smith Jr PG-det', 'Tillman Sr F-mem', 'M Norris F-atl', 'D Days F-hou', 'T Hudgins G-hou', 'L Robbins C-nop', 'L Nolley II G-nop', 'E Sumner PG-cha', 'D Duke Jr G-phi', 'M Maker C-tor', 'M Gueye F-tor', 'C Jones G-chi', 'Q Jackson G-chi', 'M Heidegger G-chi', 'J Powell G-cle', 'J Porter C-det', 'M Bagley III PF-okc', 'A Thompson F-okc', 'I Stewart C-okc', 'K Hayes PG-okc', 'A Burks SG-okc', 'T Evbuomwan F-okc', 'J Harris SF-okc', 'J Wiseman C-okc', 'J Ivey PG-okc', 'S Umude G-okc', 'M Sasser G-okc', 'M Cazalon G-okc', 'C Holmgren PF-det', 'Jal Williams F-det', 'S Gilgeous Alexander PG-det', 'J Giddey SG-det', 'L Dort G-det', 'L Waters III F-det', 'J Robinson Earl F-det', 'O Dieng F-det', 'K Williams SF-det', 'O Sarr C-det', 'I Joe SG-det', 'V Micic G-det', 'C Wallace G-det', 'O Moore G-mil', 'J Nowell SG-sac', 'D Hunter SF-orl', 'J Johnson SF-orl', 'C Capela C-orl', 'T Young PG-orl', 'D Murray SG-orl', 'B Fernando PF-orl', 'O Okongwu PF-orl', 'A Griffin F-orl', 'S Bey SF-orl', 'B Bogdanovic SG-orl', 'P Banchero PF-atl', 'F Wagner SF-atl', 'G Bitadze C-atl', 'M Fultz PG-atl', 'J Suggs SG-atl', 'J Isaac PF-atl', 'C Okeke PF-atl', 'M Wagner C-atl', 'C Anthony PG-atl', 'J Ingles SG-atl', 'A Black G-atl', 'bench-atl', 'I Wong G-ind', 'S Adams C-mem', 'M Mulder G-mem', 'S Cooper PG-cle', 'J Robinson Earl F-okc', 'R Hunter G-cha', 'J Jackson Jr PF-mil', 'X Tillman F-mil', 'Z Williams F-mil', 'M Smart PG-mil', 'D Bane SG-mil', 'S Aldama PF-mil', 'I Todd PF-mil', 'M Hurt F-mil', 'K Lofton Jr F-mil', 'J LaRavia F-mil', 'D Roddy F-mil', 'L Kennard SG-mil', 'S Harrison G-mil', 'J Gilyard G-mil', 'V Williams Jr G-mil', 'G Antetokounmpo PF-mem', 'K Middleton SF-mem', 'B Lopez C-mem', 'D Lillard PG-mem', 'M Beasley SG-mem', 'J Crowder PF-mem', 'M Beauchamp F-mem', 'T Antetokounmpo SF-mem', 'R Lopez C-mem', 'C Payne PG-mem', 'P Connaughton SG-mem', 'A Green G-mem', 'A Jackson Jr G-mem', 'T Washington Jr G-mem', 'J McDaniels PF-sas', 'R Gobert C-sas', 'K Towns C-sas', 'M Conley PG-sas', 'A Edwards SG-sas', 'K Anderson SF-sas', 'N Reid C-sas', 'S Milton SG-sas', 'N Alexander Walker SG-sas', 'Z Collins PF-min', 'J Sochan F-min', 'K Johnson SF-min', 'V Wembanyama C-min', 'D Vassell SG-min', 'D McDermott SF-min', 'C Osman SF-min', 'C Bassey C-min', 'T Jones PG-min', 'M Branham G-min', 'B Caboclo F-sas', 'J Mor F-sas', 'D Tucker G-sas', 'Q Weatherspoon G-sas', 'D Bacon G-sas', 'E Alber F-sas', 'Y Atias F-sas', 'Y Berman F-sas', 'J Ducree F-sas', 'O Hai F-sas', 'N Missia Dio F-sas', 'J Ruiz F-sas', 'J Siggers SG-sas', 'A Hagans G-sas', 'J Poeltl C-sas', 'I Roby F-sas', 'S Johnson SF-sas', 'G Dieng C-sas', 'J Richardson SG-sas', 'R Langford SG-sas', 'K Irving PG-bkn', 'P Mills PG-bkn', 'E Sumner PG-bkn', 'R Williams III C-bos', 'M Smart PG-bos', 'G Williams PF-bos', 'M Brogdon PG-bos', 'J McDaniels PF-cha', 'M Plumlee C-cha', 'D Smith Jr PG-cha']

===Read Year Players Abbrevs: 2023===

Input: year_box_scores = {game key:{away:{starters:[],bench:[]},home:{starters:[],bench:[]}},... = {'mem okc 12/18/2023': {'away': {'starters': ['J Jackson Jr PF', ...], 'bench': ['S Aldama PF', ...]}, 'home': ...
Input: all_players_teams = {player:{year:{team:{GP:gp, MIN:min},... = {'bam adebayo': {'2018': {'mia': {GP:69, MIN:30}, ...
Input: init_year_players_abbrevs = {player:abbrev, ... = 
Input: rosters = {team:roster, ... = {'nyk': [jalen brunson, ...], ...
Input: Current Year bc only accurate roster.

Output: year_players_abbrevs = {player abbrev-team abbrev:player, ... =  {'J Jackson Jr PF-MEM': 'jaren jackson jr',...

name not saved M Carter Williams G-orl
name not saved J Champagnie SF-tor
name not saved G York G-ind
name not saved J Champagnie SF-bos
name not saved K Wallace G-lac
name not saved M Foster Jr F-phi
name not saved X Sneed F-cha
name not saved Dowtin PG-tor
name not saved A Williams G-bkn
name not saved Butler F-por
name not saved D Burton F-sac
name not saved L King SF-phi
name not saved R Gray F-bkn
name not saved J Wieskamp SF-sas
name not saved C Zeller C-uta
name not saved J Butler SG-uta
name not saved Boston SG-lac
name not saved J Scrubb G-orl
name not saved C Moneke F-sac
name not saved P Williams PF-det
name not saved D DeRozan SF-det
name not saved N Vucevic C-det
name not saved Z LaVine SG-det
name not saved A Dosunmu SG-det
name not saved D Terry F-det
name not saved D Jones Jr SF-det
name not saved T Bradley C-det
name not saved M Simonovic C-det
name not saved G Dragic PG-det
name not saved C White PG-det
name not saved A Caruso SG-det
name not saved M Hill G-det
name not saved C Jones G-det
name not saved B Bogdanovic SF-chi
name not saved S Bey SF-chi
name not saved I Stewart C-chi
name not saved J Ivey PG-chi
name not saved K Hayes PG-chi
name not saved I Livers PF-chi
name not saved J Duren C-chi
name not saved A Burks SG-chi
name not saved H Diallo G-chi
name not saved J Bernard G-det
name not saved D Nwaba SF-okc
name not saved A Gaddy G-okc
name not saved F Hunt F-nyk
name not saved J Harris G-nyk
name not saved J McDaniels PF-lac
name not saved D House Jr SF-lac
name not saved P Reed SF-lac
name not saved S Milton SG-lac
name not saved J Springer G-lac
name not saved L King SF-lac
name not saved D Dedmon C-lac
name not saved M Harrell C-lac
name not saved F Korkmaz SG-lac
name not saved M McClung SG-lac
name not saved Y Watanabe SF-phi
name not saved M Bridges SF-phi
name not saved D Sharpe C-phi
name not saved P Mills PG-phi
name not saved C Thomas SG-phi
name not saved R Gray F-phi
name not saved D Smith G-phi
name not saved D Duke Jr G-phi
name not saved A Davis PF-phi
name not saved T Prince PF-phi
name not saved L James SF-phi
name not saved D Russell PG-phi
name not saved M Christie G-phi
name not saved C Wood F-phi
name not saved M Lewis F-phi
name not saved A Fudge F-phi
name not saved J Hayes C-phi
name not saved A Reaves SG-phi
name not saved D Hodge G-phi
name not saved J Hood Schifino G-phi
name not saved N Batum PF-lal
name not saved T Harris PF-lal
name not saved J Embiid C-lal
name not saved T Maxey PG-lal
name not saved D Melton SG-lal
name not saved R Covington PF-lal
name not saved K Martin F-lal
name not saved M Morris Sr SF-lal
name not saved P Reed SF-lal
name not saved F Korkmaz SG-lal
name not saved L Markkanen PF-phx
name not saved E Mobley PF-phx
name not saved J Allen C-phx
name not saved C Sexton PG-phx
name not saved D Garland PG-phx
name not saved K Love PF-phx
name not saved D Wade PF-phx
name not saved L Stevens PF-phx
name not saved C Osman SF-phx
name not saved R Rubio PG-phx
name not saved D Valentine G-phx
name not saved D Windler G-phx
name not saved J Crowder PF-cle
name not saved M Bridges SF-cle
name not saved D Ayton C-cle
name not saved C Paul PG-cle
name not saved D Booker SG-cle
name not saved J Smith PF-cle
name not saved C Johnson SF-cle
name not saved J McGee C-cle
name not saved L Shamet SG-cle
name not saved E Payton G-cle
name not saved D Sabonis PF-lac
name not saved H Barnes SF-lac
name not saved K Murray SF-lac
name not saved D Fox PG-lac
name not saved K Huerter SG-lac
name not saved T Lyles PF-lac
name not saved C Metu PF-lac
name not saved D Mitchell PG-lac
name not saved T Davis SG-lac
name not saved M Monk SG-lac
name not saved P George F-sac
name not saved K Leonard SF-sac
name not saved M Morris Sr SF-sac
name not saved M Plumlee C-sac
name not saved R Westbrook PG-sac
name not saved N Batum PF-sac
name not saved E Gordon SG-sac
name not saved T Mann SG-sac
name not saved N Powell G-sac
name not saved J Bean F-mem
name not saved M Bolden C-mil
name not saved L Vildoza G-mil
WARNING unknown_names: ['M Carter Williams G-orl', 'J Champagnie SF-tor', 'G York G-ind', 'J Champagnie SF-bos', 'K Wallace G-lac', 'M Foster Jr F-phi', 'X Sneed F-cha', 'Dowtin PG-tor', 'A Williams G-bkn', 'Butler F-por', 'D Burton F-sac', 'L King SF-phi', 'R Gray F-bkn', 'J Wieskamp SF-sas', 'C Zeller C-uta', 'J Butler SG-uta', 'Boston SG-lac', 'J Scrubb G-orl', 'C Moneke F-sac', 'P Williams PF-det', 'D DeRozan SF-det', 'N Vucevic C-det', 'Z LaVine SG-det', 'A Dosunmu SG-det', 'D Terry F-det', 'D Jones Jr SF-det', 'T Bradley C-det', 'M Simonovic C-det', 'G Dragic PG-det', 'C White PG-det', 'A Caruso SG-det', 'M Hill G-det', 'C Jones G-det', 'B Bogdanovic SF-chi', 'S Bey SF-chi', 'I Stewart C-chi', 'J Ivey PG-chi', 'K Hayes PG-chi', 'I Livers PF-chi', 'J Duren C-chi', 'A Burks SG-chi', 'H Diallo G-chi', 'J Bernard G-det', 'D Nwaba SF-okc', 'A Gaddy G-okc', 'F Hunt F-nyk', 'J Harris G-nyk', 'J McDaniels PF-lac', 'D House Jr SF-lac', 'P Reed SF-lac', 'S Milton SG-lac', 'J Springer G-lac', 'L King SF-lac', 'D Dedmon C-lac', 'M Harrell C-lac', 'F Korkmaz SG-lac', 'M McClung SG-lac', 'Y Watanabe SF-phi', 'M Bridges SF-phi', 'D Sharpe C-phi', 'P Mills PG-phi', 'C Thomas SG-phi', 'R Gray F-phi', 'D Smith G-phi', 'D Duke Jr G-phi', 'A Davis PF-phi', 'T Prince PF-phi', 'L James SF-phi', 'D Russell PG-phi', 'M Christie G-phi', 'C Wood F-phi', 'M Lewis F-phi', 'A Fudge F-phi', 'J Hayes C-phi', 'A Reaves SG-phi', 'D Hodge G-phi', 'J Hood Schifino G-phi', 'N Batum PF-lal', 'T Harris PF-lal', 'J Embiid C-lal', 'T Maxey PG-lal', 'D Melton SG-lal', 'R Covington PF-lal', 'K Martin F-lal', 'M Morris Sr SF-lal', 'P Reed SF-lal', 'F Korkmaz SG-lal', 'L Markkanen PF-phx', 'E Mobley PF-phx', 'J Allen C-phx', 'C Sexton PG-phx', 'D Garland PG-phx', 'K Love PF-phx', 'D Wade PF-phx', 'L Stevens PF-phx', 'C Osman SF-phx', 'R Rubio PG-phx', 'D Valentine G-phx', 'D Windler G-phx', 'J Crowder PF-cle', 'M Bridges SF-cle', 'D Ayton C-cle', 'C Paul PG-cle', 'D Booker SG-cle', 'J Smith PF-cle', 'C Johnson SF-cle', 'J McGee C-cle', 'L Shamet SG-cle', 'E Payton G-cle', 'D Sabonis PF-lac', 'H Barnes SF-lac', 'K Murray SF-lac', 'D Fox PG-lac', 'K Huerter SG-lac', 'T Lyles PF-lac', 'C Metu PF-lac', 'D Mitchell PG-lac', 'T Davis SG-lac', 'M Monk SG-lac', 'P George F-sac', 'K Leonard SF-sac', 'M Morris Sr SF-sac', 'M Plumlee C-sac', 'R Westbrook PG-sac', 'N Batum PF-sac', 'E Gordon SG-sac', 'T Mann SG-sac', 'N Powell G-sac', 'J Bean F-mem', 'M Bolden C-mil', 'L Vildoza G-mil']

===Read All Teams Players===

Input: all_box_scores = {year:{game key:{away:{starters:{player:play time,...},bench:{...}},home:{...},... = {'2024': {'mem okc 12/18/2023': {'away': {'starters': {'J Jackson Jr PF':30, ...}, 'bench': {...}}, 'home': ...
Input: all_teams_rosters = {team:[players],... = {'nyk':['jalen brunson',...],...
Input: Current Year to get current team to get full name
Input: all_players_teams = {player:{year:{team:{GP:gp, MIN:min},... = {'bam adebayo': {'2018': {'mia': {GP:69, MIN:30}, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-MEM': 'jaren jackson jr',...

Output: all_teams_players = {year:{team:[players], ... = {'2024': {'wsh': ['kyle kuzma', ...


===Read Season Teams Players: 2024===

Input: teams = [teams]
Input: year_box_scores = {game key:{away:{starters:{player:play time,...},bench:{...}},home:{...},... = {'mem okc 12/18/2023': {'away': {'starters': {'J Jackson Jr PF':30, ...}, 'bench': {...}}, 'home': ...
Input: init_all_teams_players = {year:{team:[players],...},... = 
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-MEM': 'jaren jackson jr',...

Output: all_teams_players = {year:{team:[players],...},... = 


===Read Season Teams Players: 2023===

Input: teams = [teams]
Input: year_box_scores = {game key:{away:{starters:{player:play time,...},bench:{...}},home:{...},... = {'mem okc 12/18/2023': {'away': {'starters': {'J Jackson Jr PF':30, ...}, 'bench': {...}}, 'home': ...
Input: init_all_teams_players = {year:{team:[players],...},... = 
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-MEM': 'jaren jackson jr',...

Output: all_teams_players = {year:{team:[players],...},... = 


===Generate All Box Scores===

Input: Current Year to get current teams
Input: init_all_box_scores = {year:{game key:{away:{starters:{player:play time,...},bench:{...}},home:{...}},... = {'2024': {'mem okc 12/18/2023': {'away': {'starters': {'J Jackson Jr PF':30, ...}, 'bench': {...}}, 'home': ...
Input: all_teams_players = {year:{team:[players], ... = {'2024': {'wsh': ['kyle kuzma', ...
Input: teams_current_rosters = {team:roster, ... = {'nyk': [jalen brunson, ...], ...
Input: all_players_teams = {player:{year:{team:{GP:gp, MIN:min},... = {'bam adebayo': {'2018': {'mia': {GP:69, MIN:30}, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-MEM': 'jaren jackson jr',...

Output: gen_all_box_scores = {year:{game key:{away:{starters:{player:play time,...},bench:{...},dnp:{...},out:{...}},home:{...}},... = {'2024': {'mem okc 12/18/2023': {'away': {'starters': {'J Jackson Jr PF':30, ...}, 'bench': {...}}, 'home': ...


===Read All Players Teammates===

Input: all_players_season_logs = {player:{year:{stat name:{game idx:stat val, ... = {'jalen brunson': {'2024': {'Player': {'0': 'jalen brunson', ...
Input: all_box_scores = {year:{game key:{away:{starters:[],bench:[]},home:{starters:[],bench:[]}},... = {'2024': {'mem okc 12/18/2023': {'away': {'starters': ['J Jackson Jr PF', ...], 'bench': ['S Aldama PF', ...]}, 'home': ...

Output: all_players_teammates = {player:{year:[teammates],... = {'jalen brunson': {'2024': ['J Randle PF', ...

Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
init_all_players_playtimes: {'mikal bridges': 35.02, 'nic claxton': 28.28, 'noah clowney': 4.7, 'spencer dinwiddie': 31.21, 'cameron johnson': 28.07, 'keon johnson': 21.0, "royce o'neale": 21.88, 'ben simmons': 19.76, 'dennis smith jr': 19.72, 'cam thomas': 30.96, 'lonnie walker iv': 26.65, 'trendon watford': 10.24, 'nicolas batum': 25.62, 'patrick beverley': 23.83, 'tobias harris': 34.03, 'danuel house jr': 19.05, 'tyrese maxey': 38.16, 'marcus morris sr': 23.43, 'kelly oubre jr': 31.31, 'paul reed': 21.99, 'stephen curry': 35.82, 'draymond green': 32.16, 'trayce jackson davis': 9.66, 'cory joseph': 14.91, 'jonathan kuminga': 35.69, 'kevon looney': 10.88, 'brandin podziemski': 30.11, 'klay thompson': 32.59, 'andrew wiggins': 33.16, 'bogdan bogdanovic': 28.29, 'clint capela': 25.12, 'jalen johnson': 31.73, 'garrison mathews': 16.33, 'patty mills': 0, 'dejounte murray': 34.54, 'onyeka okongwu': 22.38, 'trae young': 36.09, 'harrison barnes': 30.2, 'chris duarte': 10.7, 'keon ellis': 11.37, "de'aaron fox": 35.39, 'kevin huerter': 25.51, 'trey lyles': 19.86, 'davion mitchell': 10.43, 'malik monk': 25.16, 'keegan murray': 32.47, 'domantas sabonis': 35.51, 'jevon carter': 11.89, 'alex caruso': 31.53, 'torrey craig': 22.15, 'demar derozan': 39.29, 'ayo dosunmu': 34.82, 'andre drummond': 15.53, 'nikola vucevic': 34.43, 'coby white': 39.22, 'max christie': 17.08, 'anthony davis': 35.75, 'rui hachimura': 22.89, 'lebron james': 0, 'taurean prince': 31.72, 'austin reaves': 32.65, "d'angelo russell": 33.8, 'christian wood': 17.17, 'precious achiuwa': 36.96, 'og anunoby': 34.88, 'jalen brunson': 36.3, 'donte divincenzo': 34.25, 'evan fournier': 14.55, 'josh hart': 36.81, 'isaiah hartenstein': 27.36, 'giannis antetokounmpo': 37.9, 'malik beasley': 33.79, 'marjon beauchamp': 13.16, 'pat connaughton': 19.24, 'jae crowder': 25.45, 'andre jackson jr': 20.99, 'damian lillard': 36.91, 'brook lopez': 31.89, 'khris middleton': 30.59, 'cameron payne': 13.65, 'bobby portis': 26.83, 'seth curry': 10.71, 'luka doncic': 40.64, 'josh green': 28.76, 'tim hardaway jr': 34.52, 'jaden hardy': 16.05, 'derrick jones jr': 30.45, 'maxi kleber': 17.4, 'dwight powell': 12.29, 'grant williams': 25.53, 'jarrett allen': 28.63, 'darius garland': 24, 'caris levert': 28.76, 'sam merrill': 6.72, 'donovan mitchell': 35.46, 'evan mobley': 24, 'georges niang': 21.85, 'isaac okoro': 22.05, 'craig porter': 6.42, 'max strus': 33.62, 'dean wade': 12.15, 'dominick barlow': 17.94, 'malaki branham': 15.82, 'julian champagnie': 21.01, 'zach collins': 20.43, 'tre jones': 30.52, 'doug mcdermott': 13.99, 'cedi osman': 18.92, 'jeremy sochan': 30.22, 'devin vassell': 33.04, 'victor wembanyama': 27.26, 'blake wesley': 14.3, 'saddiq bey': 27.92, "de'andre hunter": 21.21, 'sasha vezenkov': 12.67, 'keldon johnson': 26.76, 'moses moody': 20.89, 'cole anthony': 19.36, 'paolo banchero': 33.36, 'goga bitadze': 3.52, 'anthony black': 13.78, 'wendell carter jr': 29.84, 'markelle fultz': 27.35, 'gary harris': 19.07, 'caleb houstan': 5.55, 'joe ingles': 15.12, 'jonathan isaac': 16.1, 'chuma okeke': 3.83, 'trevelin queen': 4.11, 'jalen suggs': 26.67, 'franz wagner': 32.92, 'moritz wagner': 15.49, 'bojan bogdanovic': 34.12, 'alec burks': 22.8, 'cade cunningham': 35.35, 'jalen duren': 31.29, 'danilo gallinari': 15.54, 'killian hayes': 14.91, 'jaden ivey': 29.93, 'kevin knox ii': 21.59, 'monte morris': 10.65, 'marcus sasser': 13.91, 'ausar thompson': 18.76, 'james wiseman': 12.21, 'grayson allen': 32.66, 'keita bates diop': 10.53, 'bradley beal': 33.63, 'devin booker': 37.09, 'kevin durant': 37.71, 'drew eubanks': 14.16, 'jordan goodwin': 7.6, 'eric gordon': 27.84, 'nassir little': 9.75, 'theo maledon': 0, 'chimezie metu': 11.53, 'jusuf nurkic': 26.59, 'josh okogie': 14.03, 'yuta watanabe': 6.84, 'deni avdija': 27.54, 'bilal coulibaly': 26.44, 'daniel gafford': 26.28, 'tyus jones': 28.58, 'corey kispert': 28.0, 'jordan poole': 29.28, 'landry shamet': 14.94, 'delon wright': 15.22, 'santi aldama': 26.63, 'tosan evbuomwan': 16.0, 'jacob gilyard': 20.53, 'matt hurt': 13.88, 'gg jackson': 19.83, 'trey jemison': 14.0, 'luke kennard': 25.93, 'john konchar': 22.84, 'scotty pippen jr': 22.59, 'david roddy': 25.49, 'derrick rose': 19.25, 'vince williams jr': 29.23, 'jaylen brown': 32.36, 'sam hauser': 20.92, 'jrue holiday': 37.29, 'al horford': 34.42, 'luke kornet': 15.44, 'kristaps porzingis': 33.43, 'payton pritchard': 23.11, 'neemias queta': 17.74, 'jayson tatum': 37.82, 'derrick white': 36.14, 'tyrese haliburton': 24, 'buddy hield': 22.86, 'isaiah jackson': 13.03, 'bennedict mathurin': 25.42, 'tj mcconnell': 16.49, 'andrew nembhard': 26.8, 'aaron nesmith': 29.35, 'pascal siakam': 34.42, 'jalen smith': 15.68, 'myles turner': 27.38, 'miles bridges': 36.76, 'cody martin': 25.8, 'bryce mcgowens': 20.21, 'nathan mensah': 12.97, 'brandon miller': 31.61, 'nick richards': 28.92, 'ish smith': 23.49, 'nick smith jr': 16.97, 'jt thor': 8.24, 'pj washington': 27.87, 'amir coffey': 13.29, 'paul george': 34.87, 'james harden': 33.13, 'bones hyland': 5.16, 'kawhi leonard': 34.42, 'terance mann': 25.75, 'mason plumlee': 6.89, 'norman powell': 25.44, 'daniel theis': 17.0, 'pj tucker': 14.42, 'russell westbrook': 19.4, 'bam adebayo': 34.27, 'jimmy butler': 34.62, 'jamal cain': 21.8, 'tyler herro': 32.51, 'haywood highsmith': 18.9, 'jaime jaquez jr': 29.06, 'nikola jovic': 14.39, 'kevin love': 16.8, 'caleb martin': 25.74, 'josh richardson': 29.59, 'orlando robinson': 11.41, 'terry rozier': 31.81, 'dillon brooks': 31.23, 'jalen green': 30.25, 'jeff green': 15.28, 'aaron holiday': 16.07, 'alperen sengun': 32.72, 'jabari smith jr': 30.99, "jae'sean tate": 16.72, 'amen thompson': 16.03, 'fred vanvleet': 36.83, 'cam whitmore': 15.86, 'nickeil alexander walker': 19.26, 'kyle anderson': 22.53, 'mike conley': 29.35, 'anthony edwards': 35.26, 'rudy gobert': 33.47, 'jaden mcdaniels': 29.5, 'shake milton': 11.08, 'naz reid': 21.83, 'karl anthony towns': 32.78, 'scottie barnes': 35.18, 'rj barrett': 30.3, 'chris boucher': 13.91, 'bruce brown': 23.77, 'gradey dick': 13.28, 'jordan nwora': 19.14, 'jakob poeltl': 24, 'otto porter jr': 11.52, 'immanuel quickley': 24, 'dennis schroder': 29.02, 'gary trent jr': 28.2, 'thaddeus young': 9.28, 'ousmane dieng': 14.12, 'luguentz dort': 25.34, 'josh giddey': 23.71, 'shai gilgeous alexander': 32.33, 'chet holmgren': 27.42, 'vasilije micic': 12.05, 'cason wallace': 21.71, 'aaron wiggins': 18.07, 'jaylin williams': 18.72, 'kenrich williams': 14.64, 'ochai agbaji': 17.37, 'jordan clarkson': 29.75, 'john collins': 25.44, 'kris dunn': 19.62, 'simone fontecchio': 27.09, 'keyonte george': 22.11, 'taylor hendricks': 4.54, 'talen horton tucker': 10.63, 'walker kessler': 20.62, 'lauri markkanen': 31.67, 'kelly olynyk': 18.33, 'collin sexton': 25.86, 'deandre ayton': 27.81, 'ibou badji': 4.69, 'malcolm brogdon': 34.5, 'toumani camara': 20.05, 'jerami grant': 34.84, 'scoot henderson': 23.6, 'kris murray': 8.01, 'duop reath': 18.52, 'shaedon sharpe': 24, 'anfernee simons': 32.5, 'matisse thybulle': 17.38, 'jabari walker': 24.03, 'christian braun': 16.03, 'kentavious caldwell pope': 29.69, 'aaron gordon': 27.72, 'justin holiday': 6.67, 'reggie jackson': 21.9, 'nikola jokic': 34.17, 'deandre jordan': 10.93, 'jamal murray': 32.22, 'michael porter jr': 34.14, 'julian strawther': 9.24, 'peyton watson': 20.97, 'kyle lowry': 24, 'ivica zubac': 24, 'obi toppin': 0}

===Generate All Current Conditions===

Settings: Find Players

Input: Players of Interest
Input: game_teams = [(away team, home team), ...] = [('nyk', 'bkn'), ...]
Input: all_players_teams = {player:{year:{team:{GP:gp, MIN:min},... = {'bam adebayo': {'2018': {'mia': {GP:69, MIN:30}, ...
Input: teams_current_rosters = {team:[players],..., {'nyk': [jalen brunson, ...], ...}
Input: all_players_season_logs = {player:{year:{stat name:{game idx:stat val, ... = {'jalen brunson': {'2024': {'Player': {'0': 'jalen brunson', ...
Input: Current Year to get current team if not in rosters
Input: all_teams_players = {year:{team:[players], ... = {'2024': {'wsh': ['kyle kuzma', ...

Output: all_current_conditions = {p1:{starters:[s1,...], loc:l1, city:c1, dow:d1, tod:t1,...}, ... = {'nikola jokic': {'loc': 'away', 'out': ['vlatko cancar',...], ...


===Read All Lineups===

Input: all_players_teams = {player:{year:{team:{GP:gp, MIN:min},... = {'bam adebayo': {'2018': {'mia': {GP:69, MIN:30.1}, ...

Output: all_lineups = {'cle': {'starters': ['donovan mitchell', ...

all_lineups: {'lal': {'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood'], 'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'probable': [], 'question': ['anthony davis', 'lebron james'], 'doubt': [], 'dnp': ['colin castleton', 'alex fudge', 'jaxson hayes', "d'moi hodge", 'jalen hood schifino', 'maxwell lewis', 'skylar mays', 'dylan windler']}, 'cha': {'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington'], 'out': ['gordon hayward', 'mark williams'], 'probable': [], 'question': ['lamelo ball', 'cody martin'], 'doubt': [], 'dnp': ['kyle lowry', 'amari bailey', 'leaky black', 'james bouknight', 'frank ntilikina']}}

===Read All Teams Schedules===


Output: all_teams_schedules = {team: {field idx:{'0':field name, game num:field val, ... = {"phx": {"0": {"0": "DATE", "1": "Tue, Oct 24", "2": "Thu, Oct 26", ...


===Read Game ESPN ID======

Input: game_key = away home date = lal cha 02/05/2024
search_string: lal+lakers+cha+hornets+feb+05+2024+nba+espn+box+score
game_espn_id: 401585341

===Convert All Conditions Dicts to Lists===

Input: all_conditions = {p1:{starters:[s1,...], opp starters:[s1,...], loc:l1, city:c1, dow:d1, tod:t1,...}, ... = {'nikola jokic': {'loc': 'away', 'out': ['vlatko cancar',...], ...

Output: all_conditions_dicts = {p1:{loc:away, start:start, prev:5, ...} = {'nikola jokic': {loc:'away', ...
Output: all_game_player_cur_conds = {p1: {teammates: {starters:[],...}, opp: {...}}, ... = 


===Read All Prev Stat Vals===

Input: all_players_season_logs = {player:{year:{stat name:{game idx:stat val, ... = {'jalen brunson': {'2024': {'Player': {'0': 'jalen brunson', ...

Output: all_prev_stat_vals = {player:{stat name:prev val,...}, ... = {'clint capela': {'pts': 6, 'ast': 0, 'reb': 9}}


===Generate All Cur Conds Lists===

Input: all_cur_conds_dicts = {player: {cond_key:cond_val, ... = {'max christie': {'loc': 'away', 'tod': '7:00', 'coverage': 'local', 'city': 'Charlotte NC', 'timelag': '-3 lag', 'dow': 'mon', 'weekend': 'weekday', 'time after': '2 after', 'time before': '3 before', 'former': 'nf', 'opp team': 'cha'}, 'anthony davis': {'loc': 'away', 'tod': '7:00', 'coverage': 'local', 'city': 'Charlotte NC', 'timelag': '-3 lag', 'dow': 'mon', 'weekend': 'weekday', 'time after': '2 after', 'time before': '3 before', 'former': 'nf', 'opp team': 'cha'}, 'rui hachimura': {'loc': 'away', 'tod': '7:00', 'coverage': 'local', 'city': 'Charlotte NC', 'timelag': '-3 lag', 'dow': 'mon', 'weekend': 'weekday', 'time after': '2 after', 'time before': '3 before', 'former': 'nf', 'opp team': 'cha'}, 'lebron james': {'loc': 'away', 'tod': '7:00', 'coverage': 'local', 'city': 'Charlotte NC', 'timelag': '-3 lag', 'dow': 'mon', 'weekend': 'weekday', 'time after': '2 after', 'time before': '3 before', 'former': 'nf', 'opp team': 'cha'}, 'taurean prince': {'loc': 'away', 'tod': '7:00', 'coverage': 'local', 'city': 'Charlotte NC', 'timelag': '-3 lag', 'dow': 'mon', 'weekend': 'weekday', 'time after': '2 after', 'time before': '3 before', 'former': 'nf', 'opp team': 'cha'}, 'austin reaves': {'loc': 'away', 'tod': '7:00', 'coverage': 'local', 'city': 'Charlotte NC', 'timelag': '-3 lag', 'dow': 'mon', 'weekend': 'weekday', 'time after': '2 after', 'time before': '3 before', 'former': 'nf', 'opp team': 'cha'}, 'cam reddish': {'loc': 'away', 'tod': '7:00', 'coverage': 'local', 'city': 'Charlotte NC', 'timelag': '-3 lag', 'dow': 'mon', 'weekend': 'weekday', 'time after': '13 after', 'time before': '3 before', 'former': 'nf', 'opp team': 'cha'}, "d'angelo russell": {'loc': 'away', 'tod': '7:00', 'coverage': 'local', 'city': 'Charlotte NC', 'timelag': '-3 lag', 'dow': 'mon', 'weekend': 'weekday', 'time after': '2 after', 'time before': '3 before', 'former': 'nf', 'opp team': 'cha'}, 'jarred vanderbilt': {'loc': 'away', 'tod': '7:00', 'coverage': 'local', 'city': 'Charlotte NC', 'timelag': '-3 lag', 'dow': 'mon', 'weekend': 'weekday', 'time after': '4 after', 'time before': '3 before', 'former': 'nf', 'opp team': 'cha'}, 'gabe vincent': {'loc': 'away', 'tod': '7:00', 'coverage': 'local', 'city': 'Charlotte NC', 'timelag': '-3 lag', 'dow': 'mon', 'weekend': 'weekday', 'time after': '47 after', 'time before': '3 before', 'former': 'nf', 'opp team': 'cha'}, 'christian wood': {'loc': 'away', 'tod': '7:00', 'coverage': 'local', 'city': 'Charlotte NC', 'timelag': '-3 lag', 'dow': 'mon', 'weekend': 'weekday', 'time after': '2 after', 'time before': '3 before', 'former': 'former', 'opp team': 'cha'}, 'lamelo ball': {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Charlotte NC', 'timelag': '0 lag', 'dow': 'mon', 'weekend': 'weekday', 'time after': '10 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'lal'}, 'miles bridges': {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Charlotte NC', 'timelag': '0 lag', 'dow': 'mon', 'weekend': 'weekday', 'time after': '1 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'lal'}, 'gordon hayward': {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Charlotte NC', 'timelag': '0 lag', 'dow': 'mon', 'weekend': 'weekday', 'time after': '41 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'lal'}, 'kyle lowry': {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Charlotte NC', 'timelag': '0 lag', 'dow': 'mon', 'weekend': 'weekday', 'time after': '15 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'lal'}, 'cody martin': {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Charlotte NC', 'timelag': '0 lag', 'dow': 'mon', 'weekend': 'weekday', 'time after': '3 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'lal'}, 'bryce mcgowens': {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Charlotte NC', 'timelag': '0 lag', 'dow': 'mon', 'weekend': 'weekday', 'time after': '1 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'lal'}, 'nathan mensah': {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Charlotte NC', 'timelag': '0 lag', 'dow': 'mon', 'weekend': 'weekday', 'time after': '1 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'lal'}, 'brandon miller': {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Charlotte NC', 'timelag': '0 lag', 'dow': 'mon', 'weekend': 'weekday', 'time after': '1 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'lal'}, 'nick richards': {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Charlotte NC', 'timelag': '0 lag', 'dow': 'mon', 'weekend': 'weekday', 'time after': '1 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'lal'}, 'ish smith': {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Charlotte NC', 'timelag': '0 lag', 'dow': 'mon', 'weekend': 'weekday', 'time after': '1 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'lal'}, 'nick smith jr': {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Charlotte NC', 'timelag': '0 lag', 'dow': 'mon', 'weekend': 'weekday', 'time after': '1 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'lal'}, 'jt thor': {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Charlotte NC', 'timelag': '0 lag', 'dow': 'mon', 'weekend': 'weekday', 'time after': '1 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'lal'}, 'pj washington': {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Charlotte NC', 'timelag': '0 lag', 'dow': 'mon', 'weekend': 'weekday', 'time after': '1 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'lal'}, 'mark williams': {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Charlotte NC', 'timelag': '0 lag', 'dow': 'mon', 'weekend': 'weekday', 'time after': '59 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'lal'}}
Input: all_game_player_cur_conds = {p1: {teammates: {starters:[],...}, opp: {...}}, ... = {'max christie': {'teammates': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}, 'opp': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}}, 'anthony davis': {'teammates': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}, 'opp': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}}, 'rui hachimura': {'teammates': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}, 'opp': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}}, 'lebron james': {'teammates': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}, 'opp': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}}, 'taurean prince': {'teammates': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}, 'opp': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}}, 'austin reaves': {'teammates': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}, 'opp': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}}, 'cam reddish': {'teammates': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}, 'opp': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}}, "d'angelo russell": {'teammates': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}, 'opp': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}}, 'jarred vanderbilt': {'teammates': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}, 'opp': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}}, 'gabe vincent': {'teammates': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}, 'opp': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}}, 'christian wood': {'teammates': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}, 'opp': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}}, 'lamelo ball': {'teammates': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}, 'opp': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}}, 'miles bridges': {'teammates': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}, 'opp': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}}, 'gordon hayward': {'teammates': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}, 'opp': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}}, 'kyle lowry': {'teammates': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}, 'opp': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}}, 'cody martin': {'teammates': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}, 'opp': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}}, 'bryce mcgowens': {'teammates': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}, 'opp': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}}, 'nathan mensah': {'teammates': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}, 'opp': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}}, 'brandon miller': {'teammates': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}, 'opp': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}}, 'nick richards': {'teammates': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}, 'opp': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}}, 'ish smith': {'teammates': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}, 'opp': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}}, 'nick smith jr': {'teammates': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}, 'opp': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}}, 'jt thor': {'teammates': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}, 'opp': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}}, 'pj washington': {'teammates': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}, 'opp': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}}, 'mark williams': {'teammates': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}, 'opp': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}}}

Output: all_cur_conds_lists = {player:[], ... = {'lebron james': ['all', 'home',...


===Determine All Current GP Conds===

Input: all_game_player_cur_conds = {p1: {teammates: {starters:[],...}, opp: {...}}, ... = {'max christie': {'teammates': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}, 'opp': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}}, 'anthony davis': {'teammates': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}, 'opp': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}}, 'rui hachimura': {'teammates': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}, 'opp': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}}, 'lebron james': {'teammates': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}, 'opp': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}}, 'taurean prince': {'teammates': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}, 'opp': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}}, 'austin reaves': {'teammates': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}, 'opp': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}}, 'cam reddish': {'teammates': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}, 'opp': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}}, "d'angelo russell": {'teammates': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}, 'opp': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}}, 'jarred vanderbilt': {'teammates': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}, 'opp': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}}, 'gabe vincent': {'teammates': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}, 'opp': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}}, 'christian wood': {'teammates': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}, 'opp': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}}, 'lamelo ball': {'teammates': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}, 'opp': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}}, 'miles bridges': {'teammates': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}, 'opp': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}}, 'gordon hayward': {'teammates': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}, 'opp': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}}, 'kyle lowry': {'teammates': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}, 'opp': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}}, 'cody martin': {'teammates': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}, 'opp': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}}, 'bryce mcgowens': {'teammates': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}, 'opp': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}}, 'nathan mensah': {'teammates': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}, 'opp': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}}, 'brandon miller': {'teammates': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}, 'opp': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}}, 'nick richards': {'teammates': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}, 'opp': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}}, 'ish smith': {'teammates': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}, 'opp': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}}, 'nick smith jr': {'teammates': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}, 'opp': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}}, 'jt thor': {'teammates': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}, 'opp': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}}, 'pj washington': {'teammates': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}, 'opp': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}}, 'mark williams': {'teammates': {'out': ['gordon hayward', 'mark williams'], 'starters': ['lamelo ball', 'cody martin', 'brandon miller', 'miles bridges', 'nick richards'], 'bench': ['bryce mcgowens', 'nathan mensah', 'ish smith', 'nick smith jr', 'jt thor', 'pj washington']}, 'opp': {'out': ['cam reddish', 'jarred vanderbilt', 'gabe vincent'], 'starters': ["d'angelo russell", 'austin reaves', 'lebron james', 'rui hachimura', 'anthony davis'], 'bench': ['max christie', 'taurean prince', 'christian wood']}}}

Output: all_cur_conds = ['all','teammates','opp','J Giddey F, C Wallace G,... starters',...]

all_cur_conds_lists: {'max christie': ['all', 'away', '7:00', 'local', 'Charlotte NC', '-3 lag', 'mon', 'weekday', '2 after', '3 before', 'nf', 'cha', 'C Reddish SF out', 'J Vanderbilt PF out', 'G Vincent PG out', 'C Reddish SF, G Vincent PG, J Vanderbilt PF out', 'D Russell PG starters', 'A Reaves SG starters', 'L James SF starters', 'R Hachimura PF starters', 'A Davis PF starters', 'A Davis PF, A Reaves SG, D Russell PG, L James SF, R Hachimura PF starters', 'M Christie G bench', 'T Prince PF bench', 'C Wood F bench', 'C Wood F, M Christie G, T Prince PF bench', 'G Hayward SF opp out', 'M Williams C opp out', 'G Hayward SF, M Williams C opp out', 'L Ball PG opp starters', 'C Martin SF opp starters', 'B Miller F opp starters', 'M Bridges SF opp starters', 'N Richards C opp starters', 'B Miller F, C Martin SF, L Ball PG, M Bridges SF, N Richards C opp starters', 'B McGowens G opp bench', 'N Mensah C opp bench', 'I Smith PG opp bench', 'N Smith Jr G opp bench', 'J Thor F opp bench', 'PJ Washington PF opp bench', 'B McGowens G, I Smith PG, J Thor F, N Mensah C, N Smith Jr G, PJ Washington PF opp bench'], 'anthony davis': ['all', 'away', '7:00', 'local', 'Charlotte NC', '-3 lag', 'mon', 'weekday', '2 after', '3 before', 'nf', 'cha', 'C Reddish SF out', 'J Vanderbilt PF out', 'G Vincent PG out', 'C Reddish SF, G Vincent PG, J Vanderbilt PF out', 'D Russell PG starters', 'A Reaves SG starters', 'L James SF starters', 'R Hachimura PF starters', 'A Davis PF starters', 'A Davis PF, A Reaves SG, D Russell PG, L James SF, R Hachimura PF starters', 'M Christie G bench', 'T Prince PF bench', 'C Wood F bench', 'C Wood F, M Christie G, T Prince PF bench', 'G Hayward SF opp out', 'M Williams C opp out', 'G Hayward SF, M Williams C opp out', 'L Ball PG opp starters', 'C Martin SF opp starters', 'B Miller F opp starters', 'M Bridges SF opp starters', 'N Richards C opp starters', 'B Miller F, C Martin SF, L Ball PG, M Bridges SF, N Richards C opp starters', 'B McGowens G opp bench', 'N Mensah C opp bench', 'I Smith PG opp bench', 'N Smith Jr G opp bench', 'J Thor F opp bench', 'PJ Washington PF opp bench', 'B McGowens G, I Smith PG, J Thor F, N Mensah C, N Smith Jr G, PJ Washington PF opp bench'], 'rui hachimura': ['all', 'away', '7:00', 'local', 'Charlotte NC', '-3 lag', 'mon', 'weekday', '2 after', '3 before', 'nf', 'cha', 'C Reddish SF out', 'J Vanderbilt PF out', 'G Vincent PG out', 'C Reddish SF, G Vincent PG, J Vanderbilt PF out', 'D Russell PG starters', 'A Reaves SG starters', 'L James SF starters', 'R Hachimura PF starters', 'A Davis PF starters', 'A Davis PF, A Reaves SG, D Russell PG, L James SF, R Hachimura PF starters', 'M Christie G bench', 'T Prince PF bench', 'C Wood F bench', 'C Wood F, M Christie G, T Prince PF bench', 'G Hayward SF opp out', 'M Williams C opp out', 'G Hayward SF, M Williams C opp out', 'L Ball PG opp starters', 'C Martin SF opp starters', 'B Miller F opp starters', 'M Bridges SF opp starters', 'N Richards C opp starters', 'B Miller F, C Martin SF, L Ball PG, M Bridges SF, N Richards C opp starters', 'B McGowens G opp bench', 'N Mensah C opp bench', 'I Smith PG opp bench', 'N Smith Jr G opp bench', 'J Thor F opp bench', 'PJ Washington PF opp bench', 'B McGowens G, I Smith PG, J Thor F, N Mensah C, N Smith Jr G, PJ Washington PF opp bench'], 'lebron james': ['all', 'away', '7:00', 'local', 'Charlotte NC', '-3 lag', 'mon', 'weekday', '2 after', '3 before', 'nf', 'cha', 'C Reddish SF out', 'J Vanderbilt PF out', 'G Vincent PG out', 'C Reddish SF, G Vincent PG, J Vanderbilt PF out', 'D Russell PG starters', 'A Reaves SG starters', 'L James SF starters', 'R Hachimura PF starters', 'A Davis PF starters', 'A Davis PF, A Reaves SG, D Russell PG, L James SF, R Hachimura PF starters', 'M Christie G bench', 'T Prince PF bench', 'C Wood F bench', 'C Wood F, M Christie G, T Prince PF bench', 'G Hayward SF opp out', 'M Williams C opp out', 'G Hayward SF, M Williams C opp out', 'L Ball PG opp starters', 'C Martin SF opp starters', 'B Miller F opp starters', 'M Bridges SF opp starters', 'N Richards C opp starters', 'B Miller F, C Martin SF, L Ball PG, M Bridges SF, N Richards C opp starters', 'B McGowens G opp bench', 'N Mensah C opp bench', 'I Smith PG opp bench', 'N Smith Jr G opp bench', 'J Thor F opp bench', 'PJ Washington PF opp bench', 'B McGowens G, I Smith PG, J Thor F, N Mensah C, N Smith Jr G, PJ Washington PF opp bench'], 'taurean prince': ['all', 'away', '7:00', 'local', 'Charlotte NC', '-3 lag', 'mon', 'weekday', '2 after', '3 before', 'nf', 'cha', 'C Reddish SF out', 'J Vanderbilt PF out', 'G Vincent PG out', 'C Reddish SF, G Vincent PG, J Vanderbilt PF out', 'D Russell PG starters', 'A Reaves SG starters', 'L James SF starters', 'R Hachimura PF starters', 'A Davis PF starters', 'A Davis PF, A Reaves SG, D Russell PG, L James SF, R Hachimura PF starters', 'M Christie G bench', 'T Prince PF bench', 'C Wood F bench', 'C Wood F, M Christie G, T Prince PF bench', 'G Hayward SF opp out', 'M Williams C opp out', 'G Hayward SF, M Williams C opp out', 'L Ball PG opp starters', 'C Martin SF opp starters', 'B Miller F opp starters', 'M Bridges SF opp starters', 'N Richards C opp starters', 'B Miller F, C Martin SF, L Ball PG, M Bridges SF, N Richards C opp starters', 'B McGowens G opp bench', 'N Mensah C opp bench', 'I Smith PG opp bench', 'N Smith Jr G opp bench', 'J Thor F opp bench', 'PJ Washington PF opp bench', 'B McGowens G, I Smith PG, J Thor F, N Mensah C, N Smith Jr G, PJ Washington PF opp bench'], 'austin reaves': ['all', 'away', '7:00', 'local', 'Charlotte NC', '-3 lag', 'mon', 'weekday', '2 after', '3 before', 'nf', 'cha', 'C Reddish SF out', 'J Vanderbilt PF out', 'G Vincent PG out', 'C Reddish SF, G Vincent PG, J Vanderbilt PF out', 'D Russell PG starters', 'A Reaves SG starters', 'L James SF starters', 'R Hachimura PF starters', 'A Davis PF starters', 'A Davis PF, A Reaves SG, D Russell PG, L James SF, R Hachimura PF starters', 'M Christie G bench', 'T Prince PF bench', 'C Wood F bench', 'C Wood F, M Christie G, T Prince PF bench', 'G Hayward SF opp out', 'M Williams C opp out', 'G Hayward SF, M Williams C opp out', 'L Ball PG opp starters', 'C Martin SF opp starters', 'B Miller F opp starters', 'M Bridges SF opp starters', 'N Richards C opp starters', 'B Miller F, C Martin SF, L Ball PG, M Bridges SF, N Richards C opp starters', 'B McGowens G opp bench', 'N Mensah C opp bench', 'I Smith PG opp bench', 'N Smith Jr G opp bench', 'J Thor F opp bench', 'PJ Washington PF opp bench', 'B McGowens G, I Smith PG, J Thor F, N Mensah C, N Smith Jr G, PJ Washington PF opp bench'], 'cam reddish': ['all', 'away', '7:00', 'local', 'Charlotte NC', '-3 lag', 'mon', 'weekday', '13 after', '3 before', 'nf', 'cha', 'C Reddish SF out', 'J Vanderbilt PF out', 'G Vincent PG out', 'C Reddish SF, G Vincent PG, J Vanderbilt PF out', 'D Russell PG starters', 'A Reaves SG starters', 'L James SF starters', 'R Hachimura PF starters', 'A Davis PF starters', 'A Davis PF, A Reaves SG, D Russell PG, L James SF, R Hachimura PF starters', 'M Christie G bench', 'T Prince PF bench', 'C Wood F bench', 'C Wood F, M Christie G, T Prince PF bench', 'G Hayward SF opp out', 'M Williams C opp out', 'G Hayward SF, M Williams C opp out', 'L Ball PG opp starters', 'C Martin SF opp starters', 'B Miller F opp starters', 'M Bridges SF opp starters', 'N Richards C opp starters', 'B Miller F, C Martin SF, L Ball PG, M Bridges SF, N Richards C opp starters', 'B McGowens G opp bench', 'N Mensah C opp bench', 'I Smith PG opp bench', 'N Smith Jr G opp bench', 'J Thor F opp bench', 'PJ Washington PF opp bench', 'B McGowens G, I Smith PG, J Thor F, N Mensah C, N Smith Jr G, PJ Washington PF opp bench'], "d'angelo russell": ['all', 'away', '7:00', 'local', 'Charlotte NC', '-3 lag', 'mon', 'weekday', '2 after', '3 before', 'nf', 'cha', 'C Reddish SF out', 'J Vanderbilt PF out', 'G Vincent PG out', 'C Reddish SF, G Vincent PG, J Vanderbilt PF out', 'D Russell PG starters', 'A Reaves SG starters', 'L James SF starters', 'R Hachimura PF starters', 'A Davis PF starters', 'A Davis PF, A Reaves SG, D Russell PG, L James SF, R Hachimura PF starters', 'M Christie G bench', 'T Prince PF bench', 'C Wood F bench', 'C Wood F, M Christie G, T Prince PF bench', 'G Hayward SF opp out', 'M Williams C opp out', 'G Hayward SF, M Williams C opp out', 'L Ball PG opp starters', 'C Martin SF opp starters', 'B Miller F opp starters', 'M Bridges SF opp starters', 'N Richards C opp starters', 'B Miller F, C Martin SF, L Ball PG, M Bridges SF, N Richards C opp starters', 'B McGowens G opp bench', 'N Mensah C opp bench', 'I Smith PG opp bench', 'N Smith Jr G opp bench', 'J Thor F opp bench', 'PJ Washington PF opp bench', 'B McGowens G, I Smith PG, J Thor F, N Mensah C, N Smith Jr G, PJ Washington PF opp bench'], 'jarred vanderbilt': ['all', 'away', '7:00', 'local', 'Charlotte NC', '-3 lag', 'mon', 'weekday', '4 after', '3 before', 'nf', 'cha', 'C Reddish SF out', 'J Vanderbilt PF out', 'G Vincent PG out', 'C Reddish SF, G Vincent PG, J Vanderbilt PF out', 'D Russell PG starters', 'A Reaves SG starters', 'L James SF starters', 'R Hachimura PF starters', 'A Davis PF starters', 'A Davis PF, A Reaves SG, D Russell PG, L James SF, R Hachimura PF starters', 'M Christie G bench', 'T Prince PF bench', 'C Wood F bench', 'C Wood F, M Christie G, T Prince PF bench', 'G Hayward SF opp out', 'M Williams C opp out', 'G Hayward SF, M Williams C opp out', 'L Ball PG opp starters', 'C Martin SF opp starters', 'B Miller F opp starters', 'M Bridges SF opp starters', 'N Richards C opp starters', 'B Miller F, C Martin SF, L Ball PG, M Bridges SF, N Richards C opp starters', 'B McGowens G opp bench', 'N Mensah C opp bench', 'I Smith PG opp bench', 'N Smith Jr G opp bench', 'J Thor F opp bench', 'PJ Washington PF opp bench', 'B McGowens G, I Smith PG, J Thor F, N Mensah C, N Smith Jr G, PJ Washington PF opp bench'], 'gabe vincent': ['all', 'away', '7:00', 'local', 'Charlotte NC', '-3 lag', 'mon', 'weekday', '47 after', '3 before', 'nf', 'cha', 'C Reddish SF out', 'J Vanderbilt PF out', 'G Vincent PG out', 'C Reddish SF, G Vincent PG, J Vanderbilt PF out', 'D Russell PG starters', 'A Reaves SG starters', 'L James SF starters', 'R Hachimura PF starters', 'A Davis PF starters', 'A Davis PF, A Reaves SG, D Russell PG, L James SF, R Hachimura PF starters', 'M Christie G bench', 'T Prince PF bench', 'C Wood F bench', 'C Wood F, M Christie G, T Prince PF bench', 'G Hayward SF opp out', 'M Williams C opp out', 'G Hayward SF, M Williams C opp out', 'L Ball PG opp starters', 'C Martin SF opp starters', 'B Miller F opp starters', 'M Bridges SF opp starters', 'N Richards C opp starters', 'B Miller F, C Martin SF, L Ball PG, M Bridges SF, N Richards C opp starters', 'B McGowens G opp bench', 'N Mensah C opp bench', 'I Smith PG opp bench', 'N Smith Jr G opp bench', 'J Thor F opp bench', 'PJ Washington PF opp bench', 'B McGowens G, I Smith PG, J Thor F, N Mensah C, N Smith Jr G, PJ Washington PF opp bench'], 'christian wood': ['all', 'away', '7:00', 'local', 'Charlotte NC', '-3 lag', 'mon', 'weekday', '2 after', '3 before', 'former', 'cha', 'C Reddish SF out', 'J Vanderbilt PF out', 'G Vincent PG out', 'C Reddish SF, G Vincent PG, J Vanderbilt PF out', 'D Russell PG starters', 'A Reaves SG starters', 'L James SF starters', 'R Hachimura PF starters', 'A Davis PF starters', 'A Davis PF, A Reaves SG, D Russell PG, L James SF, R Hachimura PF starters', 'M Christie G bench', 'T Prince PF bench', 'C Wood F bench', 'C Wood F, M Christie G, T Prince PF bench', 'G Hayward SF opp out', 'M Williams C opp out', 'G Hayward SF, M Williams C opp out', 'L Ball PG opp starters', 'C Martin SF opp starters', 'B Miller F opp starters', 'M Bridges SF opp starters', 'N Richards C opp starters', 'B Miller F, C Martin SF, L Ball PG, M Bridges SF, N Richards C opp starters', 'B McGowens G opp bench', 'N Mensah C opp bench', 'I Smith PG opp bench', 'N Smith Jr G opp bench', 'J Thor F opp bench', 'PJ Washington PF opp bench', 'B McGowens G, I Smith PG, J Thor F, N Mensah C, N Smith Jr G, PJ Washington PF opp bench'], 'lamelo ball': ['all', 'home', '7:00', 'local', 'Charlotte NC', '0 lag', 'mon', 'weekday', '10 after', '2 before', 'nf', 'lal', 'G Hayward SF out', 'M Williams C out', 'G Hayward SF, M Williams C out', 'L Ball PG starters', 'C Martin SF starters', 'B Miller F starters', 'M Bridges SF starters', 'N Richards C starters', 'B Miller F, C Martin SF, L Ball PG, M Bridges SF, N Richards C starters', 'B McGowens G bench', 'N Mensah C bench', 'I Smith PG bench', 'N Smith Jr G bench', 'J Thor F bench', 'PJ Washington PF bench', 'B McGowens G, I Smith PG, J Thor F, N Mensah C, N Smith Jr G, PJ Washington PF bench', 'C Reddish SF opp out', 'J Vanderbilt PF opp out', 'G Vincent PG opp out', 'C Reddish SF, G Vincent PG, J Vanderbilt PF opp out', 'D Russell PG opp starters', 'A Reaves SG opp starters', 'L James SF opp starters', 'R Hachimura PF opp starters', 'A Davis PF opp starters', 'A Davis PF, A Reaves SG, D Russell PG, L James SF, R Hachimura PF opp starters', 'M Christie G opp bench', 'T Prince PF opp bench', 'C Wood F opp bench', 'C Wood F, M Christie G, T Prince PF opp bench'], 'miles bridges': ['all', 'home', '7:00', 'local', 'Charlotte NC', '0 lag', 'mon', 'weekday', '1 after', '2 before', 'nf', 'lal', 'G Hayward SF out', 'M Williams C out', 'G Hayward SF, M Williams C out', 'L Ball PG starters', 'C Martin SF starters', 'B Miller F starters', 'M Bridges SF starters', 'N Richards C starters', 'B Miller F, C Martin SF, L Ball PG, M Bridges SF, N Richards C starters', 'B McGowens G bench', 'N Mensah C bench', 'I Smith PG bench', 'N Smith Jr G bench', 'J Thor F bench', 'PJ Washington PF bench', 'B McGowens G, I Smith PG, J Thor F, N Mensah C, N Smith Jr G, PJ Washington PF bench', 'C Reddish SF opp out', 'J Vanderbilt PF opp out', 'G Vincent PG opp out', 'C Reddish SF, G Vincent PG, J Vanderbilt PF opp out', 'D Russell PG opp starters', 'A Reaves SG opp starters', 'L James SF opp starters', 'R Hachimura PF opp starters', 'A Davis PF opp starters', 'A Davis PF, A Reaves SG, D Russell PG, L James SF, R Hachimura PF opp starters', 'M Christie G opp bench', 'T Prince PF opp bench', 'C Wood F opp bench', 'C Wood F, M Christie G, T Prince PF opp bench'], 'gordon hayward': ['all', 'home', '7:00', 'local', 'Charlotte NC', '0 lag', 'mon', 'weekday', '41 after', '2 before', 'nf', 'lal', 'G Hayward SF out', 'M Williams C out', 'G Hayward SF, M Williams C out', 'L Ball PG starters', 'C Martin SF starters', 'B Miller F starters', 'M Bridges SF starters', 'N Richards C starters', 'B Miller F, C Martin SF, L Ball PG, M Bridges SF, N Richards C starters', 'B McGowens G bench', 'N Mensah C bench', 'I Smith PG bench', 'N Smith Jr G bench', 'J Thor F bench', 'PJ Washington PF bench', 'B McGowens G, I Smith PG, J Thor F, N Mensah C, N Smith Jr G, PJ Washington PF bench', 'C Reddish SF opp out', 'J Vanderbilt PF opp out', 'G Vincent PG opp out', 'C Reddish SF, G Vincent PG, J Vanderbilt PF opp out', 'D Russell PG opp starters', 'A Reaves SG opp starters', 'L James SF opp starters', 'R Hachimura PF opp starters', 'A Davis PF opp starters', 'A Davis PF, A Reaves SG, D Russell PG, L James SF, R Hachimura PF opp starters', 'M Christie G opp bench', 'T Prince PF opp bench', 'C Wood F opp bench', 'C Wood F, M Christie G, T Prince PF opp bench'], 'kyle lowry': ['all', 'home', '7:00', 'local', 'Charlotte NC', '0 lag', 'mon', 'weekday', '15 after', '2 before', 'nf', 'lal', 'G Hayward SF out', 'M Williams C out', 'G Hayward SF, M Williams C out', 'L Ball PG starters', 'C Martin SF starters', 'B Miller F starters', 'M Bridges SF starters', 'N Richards C starters', 'B Miller F, C Martin SF, L Ball PG, M Bridges SF, N Richards C starters', 'B McGowens G bench', 'N Mensah C bench', 'I Smith PG bench', 'N Smith Jr G bench', 'J Thor F bench', 'PJ Washington PF bench', 'B McGowens G, I Smith PG, J Thor F, N Mensah C, N Smith Jr G, PJ Washington PF bench', 'C Reddish SF opp out', 'J Vanderbilt PF opp out', 'G Vincent PG opp out', 'C Reddish SF, G Vincent PG, J Vanderbilt PF opp out', 'D Russell PG opp starters', 'A Reaves SG opp starters', 'L James SF opp starters', 'R Hachimura PF opp starters', 'A Davis PF opp starters', 'A Davis PF, A Reaves SG, D Russell PG, L James SF, R Hachimura PF opp starters', 'M Christie G opp bench', 'T Prince PF opp bench', 'C Wood F opp bench', 'C Wood F, M Christie G, T Prince PF opp bench'], 'cody martin': ['all', 'home', '7:00', 'local', 'Charlotte NC', '0 lag', 'mon', 'weekday', '3 after', '2 before', 'nf', 'lal', 'G Hayward SF out', 'M Williams C out', 'G Hayward SF, M Williams C out', 'L Ball PG starters', 'C Martin SF starters', 'B Miller F starters', 'M Bridges SF starters', 'N Richards C starters', 'B Miller F, C Martin SF, L Ball PG, M Bridges SF, N Richards C starters', 'B McGowens G bench', 'N Mensah C bench', 'I Smith PG bench', 'N Smith Jr G bench', 'J Thor F bench', 'PJ Washington PF bench', 'B McGowens G, I Smith PG, J Thor F, N Mensah C, N Smith Jr G, PJ Washington PF bench', 'C Reddish SF opp out', 'J Vanderbilt PF opp out', 'G Vincent PG opp out', 'C Reddish SF, G Vincent PG, J Vanderbilt PF opp out', 'D Russell PG opp starters', 'A Reaves SG opp starters', 'L James SF opp starters', 'R Hachimura PF opp starters', 'A Davis PF opp starters', 'A Davis PF, A Reaves SG, D Russell PG, L James SF, R Hachimura PF opp starters', 'M Christie G opp bench', 'T Prince PF opp bench', 'C Wood F opp bench', 'C Wood F, M Christie G, T Prince PF opp bench'], 'bryce mcgowens': ['all', 'home', '7:00', 'local', 'Charlotte NC', '0 lag', 'mon', 'weekday', '1 after', '2 before', 'nf', 'lal', 'G Hayward SF out', 'M Williams C out', 'G Hayward SF, M Williams C out', 'L Ball PG starters', 'C Martin SF starters', 'B Miller F starters', 'M Bridges SF starters', 'N Richards C starters', 'B Miller F, C Martin SF, L Ball PG, M Bridges SF, N Richards C starters', 'B McGowens G bench', 'N Mensah C bench', 'I Smith PG bench', 'N Smith Jr G bench', 'J Thor F bench', 'PJ Washington PF bench', 'B McGowens G, I Smith PG, J Thor F, N Mensah C, N Smith Jr G, PJ Washington PF bench', 'C Reddish SF opp out', 'J Vanderbilt PF opp out', 'G Vincent PG opp out', 'C Reddish SF, G Vincent PG, J Vanderbilt PF opp out', 'D Russell PG opp starters', 'A Reaves SG opp starters', 'L James SF opp starters', 'R Hachimura PF opp starters', 'A Davis PF opp starters', 'A Davis PF, A Reaves SG, D Russell PG, L James SF, R Hachimura PF opp starters', 'M Christie G opp bench', 'T Prince PF opp bench', 'C Wood F opp bench', 'C Wood F, M Christie G, T Prince PF opp bench'], 'nathan mensah': ['all', 'home', '7:00', 'local', 'Charlotte NC', '0 lag', 'mon', 'weekday', '1 after', '2 before', 'nf', 'lal', 'G Hayward SF out', 'M Williams C out', 'G Hayward SF, M Williams C out', 'L Ball PG starters', 'C Martin SF starters', 'B Miller F starters', 'M Bridges SF starters', 'N Richards C starters', 'B Miller F, C Martin SF, L Ball PG, M Bridges SF, N Richards C starters', 'B McGowens G bench', 'N Mensah C bench', 'I Smith PG bench', 'N Smith Jr G bench', 'J Thor F bench', 'PJ Washington PF bench', 'B McGowens G, I Smith PG, J Thor F, N Mensah C, N Smith Jr G, PJ Washington PF bench', 'C Reddish SF opp out', 'J Vanderbilt PF opp out', 'G Vincent PG opp out', 'C Reddish SF, G Vincent PG, J Vanderbilt PF opp out', 'D Russell PG opp starters', 'A Reaves SG opp starters', 'L James SF opp starters', 'R Hachimura PF opp starters', 'A Davis PF opp starters', 'A Davis PF, A Reaves SG, D Russell PG, L James SF, R Hachimura PF opp starters', 'M Christie G opp bench', 'T Prince PF opp bench', 'C Wood F opp bench', 'C Wood F, M Christie G, T Prince PF opp bench'], 'brandon miller': ['all', 'home', '7:00', 'local', 'Charlotte NC', '0 lag', 'mon', 'weekday', '1 after', '2 before', 'nf', 'lal', 'G Hayward SF out', 'M Williams C out', 'G Hayward SF, M Williams C out', 'L Ball PG starters', 'C Martin SF starters', 'B Miller F starters', 'M Bridges SF starters', 'N Richards C starters', 'B Miller F, C Martin SF, L Ball PG, M Bridges SF, N Richards C starters', 'B McGowens G bench', 'N Mensah C bench', 'I Smith PG bench', 'N Smith Jr G bench', 'J Thor F bench', 'PJ Washington PF bench', 'B McGowens G, I Smith PG, J Thor F, N Mensah C, N Smith Jr G, PJ Washington PF bench', 'C Reddish SF opp out', 'J Vanderbilt PF opp out', 'G Vincent PG opp out', 'C Reddish SF, G Vincent PG, J Vanderbilt PF opp out', 'D Russell PG opp starters', 'A Reaves SG opp starters', 'L James SF opp starters', 'R Hachimura PF opp starters', 'A Davis PF opp starters', 'A Davis PF, A Reaves SG, D Russell PG, L James SF, R Hachimura PF opp starters', 'M Christie G opp bench', 'T Prince PF opp bench', 'C Wood F opp bench', 'C Wood F, M Christie G, T Prince PF opp bench'], 'nick richards': ['all', 'home', '7:00', 'local', 'Charlotte NC', '0 lag', 'mon', 'weekday', '1 after', '2 before', 'nf', 'lal', 'G Hayward SF out', 'M Williams C out', 'G Hayward SF, M Williams C out', 'L Ball PG starters', 'C Martin SF starters', 'B Miller F starters', 'M Bridges SF starters', 'N Richards C starters', 'B Miller F, C Martin SF, L Ball PG, M Bridges SF, N Richards C starters', 'B McGowens G bench', 'N Mensah C bench', 'I Smith PG bench', 'N Smith Jr G bench', 'J Thor F bench', 'PJ Washington PF bench', 'B McGowens G, I Smith PG, J Thor F, N Mensah C, N Smith Jr G, PJ Washington PF bench', 'C Reddish SF opp out', 'J Vanderbilt PF opp out', 'G Vincent PG opp out', 'C Reddish SF, G Vincent PG, J Vanderbilt PF opp out', 'D Russell PG opp starters', 'A Reaves SG opp starters', 'L James SF opp starters', 'R Hachimura PF opp starters', 'A Davis PF opp starters', 'A Davis PF, A Reaves SG, D Russell PG, L James SF, R Hachimura PF opp starters', 'M Christie G opp bench', 'T Prince PF opp bench', 'C Wood F opp bench', 'C Wood F, M Christie G, T Prince PF opp bench'], 'ish smith': ['all', 'home', '7:00', 'local', 'Charlotte NC', '0 lag', 'mon', 'weekday', '1 after', '2 before', 'nf', 'lal', 'G Hayward SF out', 'M Williams C out', 'G Hayward SF, M Williams C out', 'L Ball PG starters', 'C Martin SF starters', 'B Miller F starters', 'M Bridges SF starters', 'N Richards C starters', 'B Miller F, C Martin SF, L Ball PG, M Bridges SF, N Richards C starters', 'B McGowens G bench', 'N Mensah C bench', 'I Smith PG bench', 'N Smith Jr G bench', 'J Thor F bench', 'PJ Washington PF bench', 'B McGowens G, I Smith PG, J Thor F, N Mensah C, N Smith Jr G, PJ Washington PF bench', 'C Reddish SF opp out', 'J Vanderbilt PF opp out', 'G Vincent PG opp out', 'C Reddish SF, G Vincent PG, J Vanderbilt PF opp out', 'D Russell PG opp starters', 'A Reaves SG opp starters', 'L James SF opp starters', 'R Hachimura PF opp starters', 'A Davis PF opp starters', 'A Davis PF, A Reaves SG, D Russell PG, L James SF, R Hachimura PF opp starters', 'M Christie G opp bench', 'T Prince PF opp bench', 'C Wood F opp bench', 'C Wood F, M Christie G, T Prince PF opp bench'], 'nick smith jr': ['all', 'home', '7:00', 'local', 'Charlotte NC', '0 lag', 'mon', 'weekday', '1 after', '2 before', 'nf', 'lal', 'G Hayward SF out', 'M Williams C out', 'G Hayward SF, M Williams C out', 'L Ball PG starters', 'C Martin SF starters', 'B Miller F starters', 'M Bridges SF starters', 'N Richards C starters', 'B Miller F, C Martin SF, L Ball PG, M Bridges SF, N Richards C starters', 'B McGowens G bench', 'N Mensah C bench', 'I Smith PG bench', 'N Smith Jr G bench', 'J Thor F bench', 'PJ Washington PF bench', 'B McGowens G, I Smith PG, J Thor F, N Mensah C, N Smith Jr G, PJ Washington PF bench', 'C Reddish SF opp out', 'J Vanderbilt PF opp out', 'G Vincent PG opp out', 'C Reddish SF, G Vincent PG, J Vanderbilt PF opp out', 'D Russell PG opp starters', 'A Reaves SG opp starters', 'L James SF opp starters', 'R Hachimura PF opp starters', 'A Davis PF opp starters', 'A Davis PF, A Reaves SG, D Russell PG, L James SF, R Hachimura PF opp starters', 'M Christie G opp bench', 'T Prince PF opp bench', 'C Wood F opp bench', 'C Wood F, M Christie G, T Prince PF opp bench'], 'jt thor': ['all', 'home', '7:00', 'local', 'Charlotte NC', '0 lag', 'mon', 'weekday', '1 after', '2 before', 'nf', 'lal', 'G Hayward SF out', 'M Williams C out', 'G Hayward SF, M Williams C out', 'L Ball PG starters', 'C Martin SF starters', 'B Miller F starters', 'M Bridges SF starters', 'N Richards C starters', 'B Miller F, C Martin SF, L Ball PG, M Bridges SF, N Richards C starters', 'B McGowens G bench', 'N Mensah C bench', 'I Smith PG bench', 'N Smith Jr G bench', 'J Thor F bench', 'PJ Washington PF bench', 'B McGowens G, I Smith PG, J Thor F, N Mensah C, N Smith Jr G, PJ Washington PF bench', 'C Reddish SF opp out', 'J Vanderbilt PF opp out', 'G Vincent PG opp out', 'C Reddish SF, G Vincent PG, J Vanderbilt PF opp out', 'D Russell PG opp starters', 'A Reaves SG opp starters', 'L James SF opp starters', 'R Hachimura PF opp starters', 'A Davis PF opp starters', 'A Davis PF, A Reaves SG, D Russell PG, L James SF, R Hachimura PF opp starters', 'M Christie G opp bench', 'T Prince PF opp bench', 'C Wood F opp bench', 'C Wood F, M Christie G, T Prince PF opp bench'], 'pj washington': ['all', 'home', '7:00', 'local', 'Charlotte NC', '0 lag', 'mon', 'weekday', '1 after', '2 before', 'nf', 'lal', 'G Hayward SF out', 'M Williams C out', 'G Hayward SF, M Williams C out', 'L Ball PG starters', 'C Martin SF starters', 'B Miller F starters', 'M Bridges SF starters', 'N Richards C starters', 'B Miller F, C Martin SF, L Ball PG, M Bridges SF, N Richards C starters', 'B McGowens G bench', 'N Mensah C bench', 'I Smith PG bench', 'N Smith Jr G bench', 'J Thor F bench', 'PJ Washington PF bench', 'B McGowens G, I Smith PG, J Thor F, N Mensah C, N Smith Jr G, PJ Washington PF bench', 'C Reddish SF opp out', 'J Vanderbilt PF opp out', 'G Vincent PG opp out', 'C Reddish SF, G Vincent PG, J Vanderbilt PF opp out', 'D Russell PG opp starters', 'A Reaves SG opp starters', 'L James SF opp starters', 'R Hachimura PF opp starters', 'A Davis PF opp starters', 'A Davis PF, A Reaves SG, D Russell PG, L James SF, R Hachimura PF opp starters', 'M Christie G opp bench', 'T Prince PF opp bench', 'C Wood F opp bench', 'C Wood F, M Christie G, T Prince PF opp bench'], 'mark williams': ['all', 'home', '7:00', 'local', 'Charlotte NC', '0 lag', 'mon', 'weekday', '59 after', '2 before', 'nf', 'lal', 'G Hayward SF out', 'M Williams C out', 'G Hayward SF, M Williams C out', 'L Ball PG starters', 'C Martin SF starters', 'B Miller F starters', 'M Bridges SF starters', 'N Richards C starters', 'B Miller F, C Martin SF, L Ball PG, M Bridges SF, N Richards C starters', 'B McGowens G bench', 'N Mensah C bench', 'I Smith PG bench', 'N Smith Jr G bench', 'J Thor F bench', 'PJ Washington PF bench', 'B McGowens G, I Smith PG, J Thor F, N Mensah C, N Smith Jr G, PJ Washington PF bench', 'C Reddish SF opp out', 'J Vanderbilt PF opp out', 'G Vincent PG opp out', 'C Reddish SF, G Vincent PG, J Vanderbilt PF opp out', 'D Russell PG opp starters', 'A Reaves SG opp starters', 'L James SF opp starters', 'R Hachimura PF opp starters', 'A Davis PF opp starters', 'A Davis PF, A Reaves SG, D Russell PG, L James SF, R Hachimura PF opp starters', 'M Christie G opp bench', 'T Prince PF opp bench', 'C Wood F opp bench', 'C Wood F, M Christie G, T Prince PF opp bench']}

===Determine All Players Cur Avg Playtimes===

Setting: Current Year = 2024

Input: all_players_season_logs = {player:{year:{stat name:{game idx:stat val, ... = {'jalen brunson': {'2024': {'Player': {'0': 'jalen brunson', ...
Input: all_players_teams = {player:{year:{team:{GP:gp, MIN:min},... = {'bam adebayo': {'2018': {'mia': {GP:69, MIN:30}, ...

Output: all_players_cur_avg_playtimes = {player:playtime, ....


===All After Injury Players===

Warning: Double check playtime in lineups reports details!
Lamelo Ball
Kyle Lowry

==============================


===Warning: No JSON File: data/stat dicts/max christie 2024 stat dict 02-05-24.json===


===Warning: No JSON File: data/stat dicts/max christie prev stat dicts.json===


===Generate Player Stat Dict: Max Christie===

Settings: find players, todays date to get day conditions, current year to get changing stat dicts file

Input: Player of Interest
Input: player_season_logs = {year: {stat name: {game idx: stat val, ... = {'2024': {'Player': {'0': 'jalen brunson', ...
Input: all_box_scores = {year:{game key:{away:{starters:[],bench:[]},home:{starters:[],bench:[]}},... = {'2024': {'mem okc 12/18/2023': {'away': {'starters': ['J Jackson Jr PF', ...], 'bench': ['S Aldama PF', ...]}, 'home': ...
Input: player_teams = {year:{team:{GP:gp, MIN:min},... = {'2018': {'mia': {GP:69, MIN:30}, ...
Input: game_teams = [(away team, home team), ...] = [('nyk', 'bkn'), ...]
Input: init_player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = 

Input: player_position = 'position' = sg
Input: player_teammates = {year:[teammates],... = {2024: [J Randle PF, ... = {'2024': ['T Prince PF', 'J Vanderbilt PF', 'J Hayes C', 'D Russell PG', 'A Reaves SG', 'M Christie G', 'R Hachimura PF', 'C Wood F', 'C Castleton C', 'A Fudge F', "d'moi hodge", 'J Hood Schifino G', 'M Lewis F', 'S Mays SG', 'D Windler G', 'A Davis PF', 'L James SF', 'C Reddish SF', 'G Vincent PG'], '2023': ['A Davis PF', 'J Vanderbilt PF', 'L James SF', 'D Russell PG', 'A Reaves SG', 'T Brown Jr SF', 'R Hachimura PF', 'W Gabriel F', 'M Beasley SG', 'L Walker IV G', 'M Christie G', 'M Bamba C', 'D Jones C', 'M Ryan F', 'D Schroder PG', 'P Beverley PG', 'T Bryant C', 'R Westbrook PG', 'J Toscano Anderson F', 'K Nunn G']}
Input: rosters = {team:roster, ... = {'nyk': [jalen brunson, ...], ...
Input: gp_cur_team = x

Output: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...


===Warning: No JSON File: data/stat dicts/cur/max christie 2024 stat dict 02-05-24.json===


===Generate Player All Stats Dicts: Max Christie, 2024, regular===


===Generate Player Playtime: Max Christie===

Settings: Current Year = 2024
Settings: Season Part = regular

Input: player team = abbrev = lal
Input: player_gp_conds = ['teammate out',..., 't1,...out'] = ['A Gordon F out', ..., 'A Gordon F,...out'] = ['C Reddish SF out', 'J Vanderbilt PF out', 'G Vincent PG out', 'C Reddish SF, G Vincent PG, J Vanderbilt PF out', 'D Russell PG starters', 'A Reaves SG starters', 'L James SF starters', 'R Hachimura PF starters', 'A Davis PF starters', 'A Davis PF, A Reaves SG, D Russell PG, L James SF, R Hachimura PF starters', 'M Christie G bench', 'T Prince PF bench', 'C Wood F bench', 'C Wood F, M Christie G, T Prince PF bench', 'G Hayward SF opp out', 'M Williams C opp out', 'G Hayward SF, M Williams C opp out', 'L Ball PG opp starters', 'C Martin SF opp starters', 'B Miller F opp starters', 'M Bridges SF opp starters', 'N Richards C opp starters', 'B Miller F, C Martin SF, L Ball PG, M Bridges SF, N Richards C opp starters', 'B McGowens G opp bench', 'N Mensah C opp bench', 'I Smith PG opp bench', 'N Smith Jr G opp bench', 'J Thor F opp bench', 'PJ Washington PF opp bench', 'B McGowens G, I Smith PG, J Thor F, N Mensah C, N Smith Jr G, PJ Washington PF opp bench']
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_season_logs = {player:{year:{stat name:{game idx:stat val, ... = {'jalen brunson': {'2024': {'Player': {'0': 'jalen brunson', ...
Input: all_players_teams = {player:{year:{team:{GP:gp, MIN:min},... = {'bam adebayo': {'2018': {'mia': {GP:69, MIN:30}, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...

Output: playtime = x


===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {'C Reddish SF out': 20.0, 'J Vanderbilt PF out': 17.35, 'G Vincent PG out': 18.03, 'M Christie G bench': 15.91, 'C Reddish SF, G Vincent PG, J Vanderbilt PF out': 24.5, 'A Davis PF, A Reaves SG, D Russell PG, L James SF, R Hachimura PF starters': 24.0}
Input: all_conditions_stats = {cond1:w1,... = {'C Reddish SF out': 23.71, 'J Vanderbilt PF out': 20.17, 'G Vincent PG out': 25.6, 'M Christie G bench': 17.63, 'C Reddish SF, G Vincent PG, J Vanderbilt PF out': 69.48, 'A Davis PF, A Reaves SG, D Russell PG, L James SF, R Hachimura PF starters': 155.32}

Output: weighted_stats = [ws1,...]


cond: C Reddish SF out
stat: 20.0
weight: 23.71

cond: J Vanderbilt PF out
stat: 17.35
weight: 20.17

cond: G Vincent PG out
stat: 18.03
weight: 25.6

cond: M Christie G bench
stat: 15.91
weight: 17.63

cond: C Reddish SF, G Vincent PG, J Vanderbilt PF out
stat: 24.5
weight: 69.48

cond: A Davis PF, A Reaves SG, D Russell PG, L James SF, R Hachimura PF starters
stat: 24.0
weight: 155.32
playtime: 22.43

===Generate Player Unit Stat Dict: Max Christie===

Setting: Current Year = 2024
Setting: Season Part = regular
Setting: Stats of Interest = [s1,...] = ['pts', 'reb', 'ast']

Input: player_team = abbrev = lal
Input: player_gp_conds = [teammate out,...] = [A Gordon F out, ...] = ['C Reddish SF out', 'J Vanderbilt PF out', 'G Vincent PG out', 'C Reddish SF, G Vincent PG, J Vanderbilt PF out', 'D Russell PG starters', 'A Reaves SG starters', 'L James SF starters', 'R Hachimura PF starters', 'A Davis PF starters', 'A Davis PF, A Reaves SG, D Russell PG, L James SF, R Hachimura PF starters', 'M Christie G bench', 'T Prince PF bench', 'C Wood F bench', 'C Wood F, M Christie G, T Prince PF bench', 'G Hayward SF opp out', 'M Williams C opp out', 'G Hayward SF, M Williams C opp out', 'L Ball PG opp starters', 'C Martin SF opp starters', 'B Miller F opp starters', 'M Bridges SF opp starters', 'N Richards C opp starters', 'B Miller F, C Martin SF, L Ball PG, M Bridges SF, N Richards C opp starters', 'B McGowens G opp bench', 'N Mensah C opp bench', 'I Smith PG opp bench', 'N Smith Jr G opp bench', 'J Thor F opp bench', 'PJ Washington PF opp bench', 'B McGowens G, I Smith PG, J Thor F, N Mensah C, N Smith Jr G, PJ Washington PF opp bench']
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: player_season_logs = {year: {stat name: {game idx: stat val, ... = {'2024': {'Player': {'0': 'jalen brunson', ...
Input: all_players_season_logs = {player:{year:{stat name:{game idx:stat val, ... = {'jalen brunson': {'2024': {'Player': {'0': 'jalen brunson', ...
Input: all_players_teams = {player:{year:{team:{GP:gp, MIN:min},... = {'bam adebayo': {'2018': {'mia': {GP:69, MIN:30}, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-MEM': 'jaren jackson jr',...

Output: player_unit_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

init_player_playtime: 17.08
player_playtime: 22.43
Traceback (most recent call last):
  File "/Users/m/repos/proposer/proposer.py", line 159, in <module>
    all_players_props = generator.generate_all_players_props(settings, players_names, game_teams, teams_current_rosters, all_teams)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/m/repos/proposer/generator.py", line 8318, in generate_all_players_props
    print('init_player_conds: ' + str(init_player_conds))
                                      ^^^^^^^^^^^^^^^^^
NameError: name 'init_player_conds' is not defined. Did you mean: 'init_player_gp_conds'?

===Proposer===


===Read Teams Current Rosters===

Setting: Read New Teams after trades and aquisitions

Input: game_teams = [(away team, home team), ...] = [('nyk', 'bkn')]

Output: all_teams_rosters = {team:[players],... = {'nyk':['jalen brunson',...],...


===Generate All Players Props===

Settings: find/read new data, read certain seasons and time periods, irregular play time and other vars

Input: default = all players in upcoming games today
Input: players_names = [p1, ...] = ['jalen brunson', ...]
Input: game_teams = [(away team, home team), ...] = [('nyk', 'bkn'), ...]
Input: teams_current_rosters = {team:[players],..., {'nyk': [jalen brunson, ...], ...}

Output: all_players_props = [{strategy x:{player:p1,...},...},...]


===Read All Players ESPN IDs===

Input: players_names: [p1, ...] = ['jalen brunson', ...]

Output: all_players_espn_ids = {player:id, ...} = {'jalen brunson': '3934672', ...}


===Read All Players Teams===

Input: all_players_espn_ids = {player:id, ...} = {'jalen brunson': '3934672', ...}

Output: all_players_teams = {player:{year:{team:{GP:gp, MIN:min},... = {'bam adebayo': {'2018': {'mia': {'GP':69, 'MIN':30.2}, ...


===Read All Players Season Logs===

Settings: read x seasons prev, init year of interest

Input: players_names = [p1, ...] = ['jalen brunson', ...]
Input: all_players_espn_ids = {player:id, ...} = {'jalen brunson': '3934672', ...}
Input: all_players_teams = {player:{year:{team:{gp:gp, min:min},... = {'bam adebayo': {'2018': {'mia': {GP:69, MIN:30}, ...

Output: all_players_season_logs = {player:{year:{stat name:{game idx:stat val, ... = {'jalen brunson': {'2024': {'Player': {'0': 'jalen brunson', ...


===Warning: No JSON File: data/game logs/cur/steven adams 2024 game log 02-06-24.json===


Warning: Steven Adams did NOT play season 2024!


===Warning: No JSON File: data/game logs/prev/nate hinton prev logs.json===


Warning: Nate Hinton did NOT play season 2023!


===Warning: No JSON File: data/game logs/prev/jermaine samuels jr prev logs.json===


Warning: Jermaine Samuels Jr did NOT play season 2023!


===Warning: No JSON File: data/game logs/prev/amen thompson prev logs.json===


Warning: Amen Thompson did NOT play season 2023!


===Warning: No JSON File: data/game logs/prev/cam whitmore prev logs.json===


Warning: Cam Whitmore did NOT play season 2023!


===Warning: No JSON File: data/game logs/prev/ben sheppard prev logs.json===


Warning: Ben Sheppard did NOT play season 2023!


===Warning: No JSON File: data/game logs/prev/oscar tshiebwe prev logs.json===


Warning: Oscar Tshiebwe did NOT play season 2023!


===Warning: No JSON File: data/game logs/prev/jarace walker prev logs.json===


Warning: Jarace Walker did NOT play season 2023!


===Warning: No JSON File: data/game logs/prev/isaiah wong prev logs.json===


Warning: Isaiah Wong did NOT play season 2023!


===Read All Players Positions===

Input: all_players_espn_ids = {player:id, ...} = {'jalen brunson': '3934672', ...}

Output: all_players_positions = {player:position, ...} = {'jalen brunson': 'pg', ...}

===Read All Games Info===

Input: all_players_season_logs = {player:{year:{stat name:{game idx:stat val, ... = {'jalen brunson': {'2024': {'Player': {'0': 'jalen brunson', ...

Output: all_games_info = {year:{game key:{city:c, time of day:tod, audience:a, ...


===FIND PLAYERS===


===Read All Teams Rosters===

Setting: Read New Teams after trades and aquisitions

Input: teams = [t1, ...] = ['nyk', 'bkn',...]

Output: all_teams_rosters = {team:[players],... = {'nyk':['jalen brunson',...],...


===Read All Box Scores===

Setting: season years = ['2024', '2023']
Setting: season part = regular
Setting: read new game ids = True

Input: all_players_season_logs = {player:{year:{stat name:{game idx:stat val, ... = {'jalen brunson': {'2024': {'Player': {'0': 'jalen brunson', ...
Input: all_players_teams = {player:{year:{team:{GP:gp, MIN:min},... = {'bam adebayo': {'2018': {'mia': {'GP':69, 'MIN':30}, ...

Output: all_box_scores = {year:{game key:{away:{starters:{player:play time,...},bench:{...}},home:{...}},... = {'2024': {'mem okc 12/18/2023': {'away': {'starters': {'J Jackson Jr PF':30, ...}, 'bench': {...}}, 'home': ...


===Read All Players Abbrevs===

Input: all_box_scores = {year:{game key:{away:{starters:[],bench:[]},home:{starters:[],bench:[]}},... = {'2024': {'mem okc 12/18/2023': {'away': {'starters': ['J Jackson Jr PF', ...], 'bench': ['S Aldama PF', ...]}, 'home': ...
Input: all_players_teams = {player:{year:{team:{GP:gp, MIN:min},... = {'bam adebayo': {'2018': {'mia': {GP:69, MIN:30}, ...
Input: rosters = {team:roster, ... = {'nyk': [jalen brunson, ...], ...
Input: Current Year bc only accurate roster.

Output: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-MEM': 'jaren jackson jr',...


===Read Year Players Abbrevs: 2024===

Input: year_box_scores = {game key:{away:{starters:[],bench:[]},home:{starters:[],bench:[]}},... = {'mem okc 12/18/2023': {'away': {'starters': ['J Jackson Jr PF', ...], 'bench': ['S Aldama PF', ...]}, 'home': ...
Input: all_players_teams = {player:{year:{team:{GP:gp, MIN:min},... = {'bam adebayo': {'2018': {'mia': {GP:69, MIN:30}, ...
Input: init_year_players_abbrevs = {player:abbrev, ... = 
Input: rosters = {team:roster, ... = {'nyk': [jalen brunson, ...], ...
Input: Current Year bc only accurate roster.

Output: year_players_abbrevs = {player abbrev-team abbrev:player, ... =  {'J Jackson Jr PF-MEM': 'jaren jackson jr',...

name not saved J Christopher SG-uta
name not saved T Gibson F-wsh
name not saved X Cooks G-wsh
name not saved I Roby F-nyk
name not saved N Knight F-nyk
name not saved W Gabriel F-bos
name not saved D Steward G-bos
name not saved D Finney Smith PF-cle
name not saved C Johnson SF-cle
name not saved M Bridges SF-cle
name not saved N Claxton C-cle
name not saved S Dinwiddie PG-cle
name not saved R O'Neale PF-cle
name not saved T Watford PF-cle
name not saved H Giles III F-cle
name not saved D Smith Jr PG-cle
name not saved C Thomas SG-cle
name not saved L Walker IV G-cle
name not saved D Wade PF-bkn
name not saved I Okoro SF-bkn
name not saved J Allen C-bkn
name not saved D Mitchell SG-bkn
name not saved M Strus SG-bkn
name not saved G Niang SF-bkn
name not saved T Thompson C-bkn
name not saved C LeVert SG-bkn
name not saved S Merrill SG-bkn
name not saved M Bridges SF-lal
name not saved N Claxton C-lal
name not saved S Dinwiddie PG-lal
name not saved B Simmons PG-lal
name not saved C Thomas SG-lal
name not saved D Finney Smith PF-lal
name not saved R O'Neale PF-lal
name not saved D Bazley PF-lal
name not saved T Watford PF-lal
name not saved H Giles III F-lal
name not saved J Wilson F-lal
name not saved N Clowney F-lal
name not saved D Sharpe C-lal
name not saved D Smith Jr PG-lal
name not saved A Brooks G-lal
name not saved L Walker IV G-lal
name not saved A Davis PF-bkn
name not saved T Prince PF-bkn
name not saved L James SF-bkn
name not saved D Russell PG-bkn
name not saved A Reaves SG-bkn
name not saved R Hachimura PF-bkn
name not saved C Wood F-bkn
name not saved M Lewis F-bkn
name not saved A Fudge F-bkn
name not saved J Hayes C-bkn
name not saved C Castleton C-bkn
name not saved G Vincent PG-bkn
name not saved B Hamilton G-bkn
name not saved M Christie G-bkn
name not saved D Hodge G-bkn
name not saved J Hood Schifino G-bkn
name not saved G Conditt IV F-por
name not saved K Knox II SF-por
name not saved K Durant PF-bkn
name not saved D Eubanks PF-bkn
name not saved B Beal SG-bkn
name not saved G Allen SG-bkn
name not saved D Booker SG-bkn
name not saved C Metu PF-bkn
name not saved K Bates Diop SF-bkn
name not saved J Okogie SF-bkn
name not saved N Little SF-bkn
name not saved U Azubuike C-bkn
name not saved B Bol C-bkn
name not saved S Lee G-bkn
name not saved J Goodwin G-bkn
name not saved J Nurkic C-bkn
name not saved E Gordon SG-bkn
name not saved Y Watanabe SF-bkn
name not saved J Green PF-den
name not saved B Brown SF-den
name not saved J Harris SF-bkn
name not saved S Curry SG-bkn
name not saved A Thompson F-bkn
name not saved B Bogdanovic SF-bkn
name not saved I Stewart C-bkn
name not saved C Cunningham PG-bkn
name not saved J Ivey PG-bkn
name not saved M Bagley III PF-bkn
name not saved K Knox II SF-bkn
name not saved A Burks SG-bkn
name not saved M Sasser G-bkn
name not saved C Johnson SF-det
name not saved M Bridges SF-det
name not saved N Claxton C-det
name not saved S Dinwiddie PG-det
name not saved C Thomas SG-det
name not saved D Finney Smith PF-det
name not saved R O'Neale PF-det
name not saved T Watford PF-det
name not saved H Giles III F-det
name not saved J Wilson F-det
name not saved D Sharpe C-det
name not saved D Smith Jr PG-det
name not saved Tillman Sr F-mem
name not saved M Norris F-atl
name not saved D Days F-hou
name not saved T Hudgins G-hou
name not saved L Robbins C-nop
name not saved L Nolley II G-nop
name not saved E Sumner PG-cha
name not saved D Duke Jr G-phi
name not saved M Maker C-tor
name not saved M Gueye F-tor
name not saved C Jones G-chi
name not saved Q Jackson G-chi
name not saved M Heidegger G-chi
name not saved J Powell G-cle
name not saved J Porter C-det
name not saved M Bagley III PF-okc
name not saved A Thompson F-okc
name not saved I Stewart C-okc
name not saved K Hayes PG-okc
name not saved A Burks SG-okc
name not saved T Evbuomwan F-okc
name not saved J Harris SF-okc
name not saved J Wiseman C-okc
name not saved J Ivey PG-okc
name not saved S Umude G-okc
name not saved M Sasser G-okc
name not saved M Cazalon G-okc
name not saved C Holmgren PF-det
name not saved Jal Williams F-det
name not saved S Gilgeous Alexander PG-det
name not saved J Giddey SG-det
name not saved L Dort G-det
name not saved L Waters III F-det
name not saved J Robinson Earl F-det
name not saved O Dieng F-det
name not saved K Williams SF-det
name not saved O Sarr C-det
name not saved I Joe SG-det
name not saved V Micic G-det
name not saved C Wallace G-det
name not saved O Moore G-mil
name not saved J Nowell SG-sac
name not saved D Hunter SF-orl
name not saved J Johnson SF-orl
name not saved C Capela C-orl
name not saved T Young PG-orl
name not saved D Murray SG-orl
name not saved B Fernando PF-orl
name not saved O Okongwu PF-orl
name not saved A Griffin F-orl
name not saved S Bey SF-orl
name not saved B Bogdanovic SG-orl
name not saved P Banchero PF-atl
name not saved F Wagner SF-atl
name not saved G Bitadze C-atl
name not saved M Fultz PG-atl
name not saved J Suggs SG-atl
name not saved J Isaac PF-atl
name not saved C Okeke PF-atl
name not saved M Wagner C-atl
name not saved C Anthony PG-atl
name not saved J Ingles SG-atl
name not saved A Black G-atl
name not saved bench-atl
name not saved I Wong G-ind
name not saved S Adams C-mem
name not saved M Mulder G-mem
name not saved S Cooper PG-cle
name not saved J Robinson Earl F-okc
name not saved R Hunter G-cha
name not saved J Jackson Jr PF-mil
name not saved X Tillman F-mil
name not saved Z Williams F-mil
name not saved M Smart PG-mil
name not saved D Bane SG-mil
name not saved S Aldama PF-mil
name not saved I Todd PF-mil
name not saved M Hurt F-mil
name not saved K Lofton Jr F-mil
name not saved J LaRavia F-mil
name not saved D Roddy F-mil
name not saved L Kennard SG-mil
name not saved S Harrison G-mil
name not saved J Gilyard G-mil
name not saved V Williams Jr G-mil
name not saved G Antetokounmpo PF-mem
name not saved K Middleton SF-mem
name not saved B Lopez C-mem
name not saved D Lillard PG-mem
name not saved M Beasley SG-mem
name not saved J Crowder PF-mem
name not saved M Beauchamp F-mem
name not saved T Antetokounmpo SF-mem
name not saved R Lopez C-mem
name not saved C Payne PG-mem
name not saved P Connaughton SG-mem
name not saved A Green G-mem
name not saved A Jackson Jr G-mem
name not saved T Washington Jr G-mem
name not saved J McDaniels PF-sas
name not saved R Gobert C-sas
name not saved K Towns C-sas
name not saved M Conley PG-sas
name not saved A Edwards SG-sas
name not saved K Anderson SF-sas
name not saved N Reid C-sas
name not saved S Milton SG-sas
name not saved N Alexander Walker SG-sas
name not saved Z Collins PF-min
name not saved J Sochan F-min
name not saved K Johnson SF-min
name not saved V Wembanyama C-min
name not saved D Vassell SG-min
name not saved D McDermott SF-min
name not saved C Osman SF-min
name not saved C Bassey C-min
name not saved T Jones PG-min
name not saved M Branham G-min
name not saved B Caboclo F-sas
name not saved J Mor F-sas
name not saved D Tucker G-sas
name not saved Q Weatherspoon G-sas
name not saved D Bacon G-sas
name not saved E Alber F-sas
name not saved Y Atias F-sas
name not saved Y Berman F-sas
name not saved J Ducree F-sas
name not saved O Hai F-sas
name not saved N Missia Dio F-sas
name not saved J Ruiz F-sas
name not saved J Siggers SG-sas
name not saved A Hagans G-sas
name not saved J Poeltl C-sas
name not saved I Roby F-sas
name not saved S Johnson SF-sas
name not saved G Dieng C-sas
name not saved J Richardson SG-sas
name not saved R Langford SG-sas
name not saved K Irving PG-bkn
name not saved P Mills PG-bkn
name not saved E Sumner PG-bkn
name not saved R Williams III C-bos
name not saved M Smart PG-bos
name not saved G Williams PF-bos
name not saved M Brogdon PG-bos
name not saved J McDaniels PF-cha
name not saved M Plumlee C-cha
name not saved D Smith Jr PG-cha
WARNING unknown_names: ['J Christopher SG-uta', 'T Gibson F-wsh', 'X Cooks G-wsh', 'I Roby F-nyk', 'N Knight F-nyk', 'W Gabriel F-bos', 'D Steward G-bos', 'D Finney Smith PF-cle', 'C Johnson SF-cle', 'M Bridges SF-cle', 'N Claxton C-cle', 'S Dinwiddie PG-cle', "R O'Neale PF-cle", 'T Watford PF-cle', 'H Giles III F-cle', 'D Smith Jr PG-cle', 'C Thomas SG-cle', 'L Walker IV G-cle', 'D Wade PF-bkn', 'I Okoro SF-bkn', 'J Allen C-bkn', 'D Mitchell SG-bkn', 'M Strus SG-bkn', 'G Niang SF-bkn', 'T Thompson C-bkn', 'C LeVert SG-bkn', 'S Merrill SG-bkn', 'M Bridges SF-lal', 'N Claxton C-lal', 'S Dinwiddie PG-lal', 'B Simmons PG-lal', 'C Thomas SG-lal', 'D Finney Smith PF-lal', "R O'Neale PF-lal", 'D Bazley PF-lal', 'T Watford PF-lal', 'H Giles III F-lal', 'J Wilson F-lal', 'N Clowney F-lal', 'D Sharpe C-lal', 'D Smith Jr PG-lal', 'A Brooks G-lal', 'L Walker IV G-lal', 'A Davis PF-bkn', 'T Prince PF-bkn', 'L James SF-bkn', 'D Russell PG-bkn', 'A Reaves SG-bkn', 'R Hachimura PF-bkn', 'C Wood F-bkn', 'M Lewis F-bkn', 'A Fudge F-bkn', 'J Hayes C-bkn', 'C Castleton C-bkn', 'G Vincent PG-bkn', 'B Hamilton G-bkn', 'M Christie G-bkn', 'D Hodge G-bkn', 'J Hood Schifino G-bkn', 'G Conditt IV F-por', 'K Knox II SF-por', 'K Durant PF-bkn', 'D Eubanks PF-bkn', 'B Beal SG-bkn', 'G Allen SG-bkn', 'D Booker SG-bkn', 'C Metu PF-bkn', 'K Bates Diop SF-bkn', 'J Okogie SF-bkn', 'N Little SF-bkn', 'U Azubuike C-bkn', 'B Bol C-bkn', 'S Lee G-bkn', 'J Goodwin G-bkn', 'J Nurkic C-bkn', 'E Gordon SG-bkn', 'Y Watanabe SF-bkn', 'J Green PF-den', 'B Brown SF-den', 'J Harris SF-bkn', 'S Curry SG-bkn', 'A Thompson F-bkn', 'B Bogdanovic SF-bkn', 'I Stewart C-bkn', 'C Cunningham PG-bkn', 'J Ivey PG-bkn', 'M Bagley III PF-bkn', 'K Knox II SF-bkn', 'A Burks SG-bkn', 'M Sasser G-bkn', 'C Johnson SF-det', 'M Bridges SF-det', 'N Claxton C-det', 'S Dinwiddie PG-det', 'C Thomas SG-det', 'D Finney Smith PF-det', "R O'Neale PF-det", 'T Watford PF-det', 'H Giles III F-det', 'J Wilson F-det', 'D Sharpe C-det', 'D Smith Jr PG-det', 'Tillman Sr F-mem', 'M Norris F-atl', 'D Days F-hou', 'T Hudgins G-hou', 'L Robbins C-nop', 'L Nolley II G-nop', 'E Sumner PG-cha', 'D Duke Jr G-phi', 'M Maker C-tor', 'M Gueye F-tor', 'C Jones G-chi', 'Q Jackson G-chi', 'M Heidegger G-chi', 'J Powell G-cle', 'J Porter C-det', 'M Bagley III PF-okc', 'A Thompson F-okc', 'I Stewart C-okc', 'K Hayes PG-okc', 'A Burks SG-okc', 'T Evbuomwan F-okc', 'J Harris SF-okc', 'J Wiseman C-okc', 'J Ivey PG-okc', 'S Umude G-okc', 'M Sasser G-okc', 'M Cazalon G-okc', 'C Holmgren PF-det', 'Jal Williams F-det', 'S Gilgeous Alexander PG-det', 'J Giddey SG-det', 'L Dort G-det', 'L Waters III F-det', 'J Robinson Earl F-det', 'O Dieng F-det', 'K Williams SF-det', 'O Sarr C-det', 'I Joe SG-det', 'V Micic G-det', 'C Wallace G-det', 'O Moore G-mil', 'J Nowell SG-sac', 'D Hunter SF-orl', 'J Johnson SF-orl', 'C Capela C-orl', 'T Young PG-orl', 'D Murray SG-orl', 'B Fernando PF-orl', 'O Okongwu PF-orl', 'A Griffin F-orl', 'S Bey SF-orl', 'B Bogdanovic SG-orl', 'P Banchero PF-atl', 'F Wagner SF-atl', 'G Bitadze C-atl', 'M Fultz PG-atl', 'J Suggs SG-atl', 'J Isaac PF-atl', 'C Okeke PF-atl', 'M Wagner C-atl', 'C Anthony PG-atl', 'J Ingles SG-atl', 'A Black G-atl', 'bench-atl', 'I Wong G-ind', 'S Adams C-mem', 'M Mulder G-mem', 'S Cooper PG-cle', 'J Robinson Earl F-okc', 'R Hunter G-cha', 'J Jackson Jr PF-mil', 'X Tillman F-mil', 'Z Williams F-mil', 'M Smart PG-mil', 'D Bane SG-mil', 'S Aldama PF-mil', 'I Todd PF-mil', 'M Hurt F-mil', 'K Lofton Jr F-mil', 'J LaRavia F-mil', 'D Roddy F-mil', 'L Kennard SG-mil', 'S Harrison G-mil', 'J Gilyard G-mil', 'V Williams Jr G-mil', 'G Antetokounmpo PF-mem', 'K Middleton SF-mem', 'B Lopez C-mem', 'D Lillard PG-mem', 'M Beasley SG-mem', 'J Crowder PF-mem', 'M Beauchamp F-mem', 'T Antetokounmpo SF-mem', 'R Lopez C-mem', 'C Payne PG-mem', 'P Connaughton SG-mem', 'A Green G-mem', 'A Jackson Jr G-mem', 'T Washington Jr G-mem', 'J McDaniels PF-sas', 'R Gobert C-sas', 'K Towns C-sas', 'M Conley PG-sas', 'A Edwards SG-sas', 'K Anderson SF-sas', 'N Reid C-sas', 'S Milton SG-sas', 'N Alexander Walker SG-sas', 'Z Collins PF-min', 'J Sochan F-min', 'K Johnson SF-min', 'V Wembanyama C-min', 'D Vassell SG-min', 'D McDermott SF-min', 'C Osman SF-min', 'C Bassey C-min', 'T Jones PG-min', 'M Branham G-min', 'B Caboclo F-sas', 'J Mor F-sas', 'D Tucker G-sas', 'Q Weatherspoon G-sas', 'D Bacon G-sas', 'E Alber F-sas', 'Y Atias F-sas', 'Y Berman F-sas', 'J Ducree F-sas', 'O Hai F-sas', 'N Missia Dio F-sas', 'J Ruiz F-sas', 'J Siggers SG-sas', 'A Hagans G-sas', 'J Poeltl C-sas', 'I Roby F-sas', 'S Johnson SF-sas', 'G Dieng C-sas', 'J Richardson SG-sas', 'R Langford SG-sas', 'K Irving PG-bkn', 'P Mills PG-bkn', 'E Sumner PG-bkn', 'R Williams III C-bos', 'M Smart PG-bos', 'G Williams PF-bos', 'M Brogdon PG-bos', 'J McDaniels PF-cha', 'M Plumlee C-cha', 'D Smith Jr PG-cha']

===Read Year Players Abbrevs: 2023===

Input: year_box_scores = {game key:{away:{starters:[],bench:[]},home:{starters:[],bench:[]}},... = {'mem okc 12/18/2023': {'away': {'starters': ['J Jackson Jr PF', ...], 'bench': ['S Aldama PF', ...]}, 'home': ...
Input: all_players_teams = {player:{year:{team:{GP:gp, MIN:min},... = {'bam adebayo': {'2018': {'mia': {GP:69, MIN:30}, ...
Input: init_year_players_abbrevs = {player:abbrev, ... = 
Input: rosters = {team:roster, ... = {'nyk': [jalen brunson, ...], ...
Input: Current Year bc only accurate roster.

Output: year_players_abbrevs = {player abbrev-team abbrev:player, ... =  {'J Jackson Jr PF-MEM': 'jaren jackson jr',...

name not saved M Carter Williams G-orl
name not saved J Champagnie SF-tor
name not saved G York G-ind
name not saved J Champagnie SF-bos
name not saved K Wallace G-lac
name not saved M Foster Jr F-phi
name not saved X Sneed F-cha
name not saved Dowtin PG-tor
name not saved A Williams G-bkn
name not saved Butler F-por
name not saved D Burton F-sac
name not saved L King SF-phi
name not saved R Gray F-bkn
name not saved J Wieskamp SF-sas
name not saved C Zeller C-uta
name not saved J Butler SG-uta
name not saved Boston SG-lac
name not saved J Scrubb G-orl
name not saved C Moneke F-sac
name not saved P Williams PF-det
name not saved D DeRozan SF-det
name not saved N Vucevic C-det
name not saved Z LaVine SG-det
name not saved A Dosunmu SG-det
name not saved D Terry F-det
name not saved D Jones Jr SF-det
name not saved T Bradley C-det
name not saved M Simonovic C-det
name not saved G Dragic PG-det
name not saved C White PG-det
name not saved A Caruso SG-det
name not saved M Hill G-det
name not saved C Jones G-det
name not saved B Bogdanovic SF-chi
name not saved S Bey SF-chi
name not saved I Stewart C-chi
name not saved J Ivey PG-chi
name not saved K Hayes PG-chi
name not saved I Livers PF-chi
name not saved J Duren C-chi
name not saved A Burks SG-chi
name not saved H Diallo G-chi
name not saved J Bernard G-det
name not saved D Nwaba SF-okc
name not saved A Gaddy G-okc
name not saved F Hunt F-nyk
name not saved J Harris G-nyk
name not saved J McDaniels PF-lac
name not saved D House Jr SF-lac
name not saved P Reed SF-lac
name not saved S Milton SG-lac
name not saved J Springer G-lac
name not saved L King SF-lac
name not saved D Dedmon C-lac
name not saved M Harrell C-lac
name not saved F Korkmaz SG-lac
name not saved M McClung SG-lac
name not saved Y Watanabe SF-phi
name not saved M Bridges SF-phi
name not saved D Sharpe C-phi
name not saved P Mills PG-phi
name not saved C Thomas SG-phi
name not saved R Gray F-phi
name not saved D Smith G-phi
name not saved D Duke Jr G-phi
name not saved A Davis PF-phi
name not saved T Prince PF-phi
name not saved L James SF-phi
name not saved D Russell PG-phi
name not saved M Christie G-phi
name not saved C Wood F-phi
name not saved M Lewis F-phi
name not saved A Fudge F-phi
name not saved J Hayes C-phi
name not saved A Reaves SG-phi
name not saved D Hodge G-phi
name not saved J Hood Schifino G-phi
name not saved N Batum PF-lal
name not saved T Harris PF-lal
name not saved J Embiid C-lal
name not saved T Maxey PG-lal
name not saved D Melton SG-lal
name not saved R Covington PF-lal
name not saved K Martin F-lal
name not saved M Morris Sr SF-lal
name not saved P Reed SF-lal
name not saved F Korkmaz SG-lal
name not saved L Markkanen PF-phx
name not saved E Mobley PF-phx
name not saved J Allen C-phx
name not saved C Sexton PG-phx
name not saved D Garland PG-phx
name not saved K Love PF-phx
name not saved D Wade PF-phx
name not saved L Stevens PF-phx
name not saved C Osman SF-phx
name not saved R Rubio PG-phx
name not saved D Valentine G-phx
name not saved D Windler G-phx
name not saved J Crowder PF-cle
name not saved M Bridges SF-cle
name not saved D Ayton C-cle
name not saved C Paul PG-cle
name not saved D Booker SG-cle
name not saved J Smith PF-cle
name not saved C Johnson SF-cle
name not saved J McGee C-cle
name not saved L Shamet SG-cle
name not saved E Payton G-cle
name not saved D Sabonis PF-lac
name not saved H Barnes SF-lac
name not saved K Murray SF-lac
name not saved D Fox PG-lac
name not saved K Huerter SG-lac
name not saved T Lyles PF-lac
name not saved C Metu PF-lac
name not saved D Mitchell PG-lac
name not saved T Davis SG-lac
name not saved M Monk SG-lac
name not saved P George F-sac
name not saved K Leonard SF-sac
name not saved M Morris Sr SF-sac
name not saved M Plumlee C-sac
name not saved R Westbrook PG-sac
name not saved N Batum PF-sac
name not saved E Gordon SG-sac
name not saved T Mann SG-sac
name not saved N Powell G-sac
name not saved J Bean F-mem
name not saved M Bolden C-mil
name not saved L Vildoza G-mil
WARNING unknown_names: ['M Carter Williams G-orl', 'J Champagnie SF-tor', 'G York G-ind', 'J Champagnie SF-bos', 'K Wallace G-lac', 'M Foster Jr F-phi', 'X Sneed F-cha', 'Dowtin PG-tor', 'A Williams G-bkn', 'Butler F-por', 'D Burton F-sac', 'L King SF-phi', 'R Gray F-bkn', 'J Wieskamp SF-sas', 'C Zeller C-uta', 'J Butler SG-uta', 'Boston SG-lac', 'J Scrubb G-orl', 'C Moneke F-sac', 'P Williams PF-det', 'D DeRozan SF-det', 'N Vucevic C-det', 'Z LaVine SG-det', 'A Dosunmu SG-det', 'D Terry F-det', 'D Jones Jr SF-det', 'T Bradley C-det', 'M Simonovic C-det', 'G Dragic PG-det', 'C White PG-det', 'A Caruso SG-det', 'M Hill G-det', 'C Jones G-det', 'B Bogdanovic SF-chi', 'S Bey SF-chi', 'I Stewart C-chi', 'J Ivey PG-chi', 'K Hayes PG-chi', 'I Livers PF-chi', 'J Duren C-chi', 'A Burks SG-chi', 'H Diallo G-chi', 'J Bernard G-det', 'D Nwaba SF-okc', 'A Gaddy G-okc', 'F Hunt F-nyk', 'J Harris G-nyk', 'J McDaniels PF-lac', 'D House Jr SF-lac', 'P Reed SF-lac', 'S Milton SG-lac', 'J Springer G-lac', 'L King SF-lac', 'D Dedmon C-lac', 'M Harrell C-lac', 'F Korkmaz SG-lac', 'M McClung SG-lac', 'Y Watanabe SF-phi', 'M Bridges SF-phi', 'D Sharpe C-phi', 'P Mills PG-phi', 'C Thomas SG-phi', 'R Gray F-phi', 'D Smith G-phi', 'D Duke Jr G-phi', 'A Davis PF-phi', 'T Prince PF-phi', 'L James SF-phi', 'D Russell PG-phi', 'M Christie G-phi', 'C Wood F-phi', 'M Lewis F-phi', 'A Fudge F-phi', 'J Hayes C-phi', 'A Reaves SG-phi', 'D Hodge G-phi', 'J Hood Schifino G-phi', 'N Batum PF-lal', 'T Harris PF-lal', 'J Embiid C-lal', 'T Maxey PG-lal', 'D Melton SG-lal', 'R Covington PF-lal', 'K Martin F-lal', 'M Morris Sr SF-lal', 'P Reed SF-lal', 'F Korkmaz SG-lal', 'L Markkanen PF-phx', 'E Mobley PF-phx', 'J Allen C-phx', 'C Sexton PG-phx', 'D Garland PG-phx', 'K Love PF-phx', 'D Wade PF-phx', 'L Stevens PF-phx', 'C Osman SF-phx', 'R Rubio PG-phx', 'D Valentine G-phx', 'D Windler G-phx', 'J Crowder PF-cle', 'M Bridges SF-cle', 'D Ayton C-cle', 'C Paul PG-cle', 'D Booker SG-cle', 'J Smith PF-cle', 'C Johnson SF-cle', 'J McGee C-cle', 'L Shamet SG-cle', 'E Payton G-cle', 'D Sabonis PF-lac', 'H Barnes SF-lac', 'K Murray SF-lac', 'D Fox PG-lac', 'K Huerter SG-lac', 'T Lyles PF-lac', 'C Metu PF-lac', 'D Mitchell PG-lac', 'T Davis SG-lac', 'M Monk SG-lac', 'P George F-sac', 'K Leonard SF-sac', 'M Morris Sr SF-sac', 'M Plumlee C-sac', 'R Westbrook PG-sac', 'N Batum PF-sac', 'E Gordon SG-sac', 'T Mann SG-sac', 'N Powell G-sac', 'J Bean F-mem', 'M Bolden C-mil', 'L Vildoza G-mil']

===Read All Teams Players===

Input: all_box_scores = {year:{game key:{away:{starters:{player:play time,...},bench:{...}},home:{...},... = {'2024': {'mem okc 12/18/2023': {'away': {'starters': {'J Jackson Jr PF':30, ...}, 'bench': {...}}, 'home': ...
Input: all_teams_rosters = {team:[players],... = {'nyk':['jalen brunson',...],...
Input: Current Year to get current team to get full name
Input: all_players_teams = {player:{year:{team:{GP:gp, MIN:min},... = {'bam adebayo': {'2018': {'mia': {GP:69, MIN:30}, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-MEM': 'jaren jackson jr',...

Output: all_teams_players = {year:{team:[players], ... = {'2024': {'wsh': ['kyle kuzma', ...


===Read Season Teams Players: 2024===

Input: teams = [teams]
Input: year_box_scores = {game key:{away:{starters:{player:play time,...},bench:{...}},home:{...},... = {'mem okc 12/18/2023': {'away': {'starters': {'J Jackson Jr PF':30, ...}, 'bench': {...}}, 'home': ...
Input: init_all_teams_players = {year:{team:[players],...},... = 
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-MEM': 'jaren jackson jr',...

Output: all_teams_players = {year:{team:[players],...},... = 


===Read Season Teams Players: 2023===

Input: teams = [teams]
Input: year_box_scores = {game key:{away:{starters:{player:play time,...},bench:{...}},home:{...},... = {'mem okc 12/18/2023': {'away': {'starters': {'J Jackson Jr PF':30, ...}, 'bench': {...}}, 'home': ...
Input: init_all_teams_players = {year:{team:[players],...},... = 
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-MEM': 'jaren jackson jr',...

Output: all_teams_players = {year:{team:[players],...},... = 


===Generate All Box Scores===

Input: Current Year to get current teams
Input: init_all_box_scores = {year:{game key:{away:{starters:{player:play time,...},bench:{...}},home:{...}},... = {'2024': {'mem okc 12/18/2023': {'away': {'starters': {'J Jackson Jr PF':30, ...}, 'bench': {...}}, 'home': ...
Input: all_teams_players = {year:{team:[players], ... = {'2024': {'wsh': ['kyle kuzma', ...
Input: teams_current_rosters = {team:roster, ... = {'nyk': [jalen brunson, ...], ...
Input: all_players_teams = {player:{year:{team:{GP:gp, MIN:min},... = {'bam adebayo': {'2018': {'mia': {GP:69, MIN:30}, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-MEM': 'jaren jackson jr',...

Output: gen_all_box_scores = {year:{game key:{away:{starters:{player:play time,...},bench:{...},dnp:{...},out:{...}},home:{...}},... = {'2024': {'mem okc 12/18/2023': {'away': {'starters': {'J Jackson Jr PF':30, ...}, 'bench': {...}}, 'home': ...


===Read All Players Teammates===

Input: all_players_season_logs = {player:{year:{stat name:{game idx:stat val, ... = {'jalen brunson': {'2024': {'Player': {'0': 'jalen brunson', ...
Input: all_box_scores = {year:{game key:{away:{starters:[],bench:[]},home:{starters:[],bench:[]}},... = {'2024': {'mem okc 12/18/2023': {'away': {'starters': ['J Jackson Jr PF', ...], 'bench': ['S Aldama PF', ...]}, 'home': ...

Output: all_players_teammates = {player:{year:[teammates],... = {'jalen brunson': {'2024': ['J Randle PF', ...

Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
Warning: Box score blank! cle wsh 2/1/2024
init_all_players_playtimes: {'mikal bridges': 34.86, 'nic claxton': 28.29, 'noah clowney': 4.7, 'spencer dinwiddie': 31.21, 'cameron johnson': 28.07, 'keon johnson': 21.0, "royce o'neale": 21.88, 'ben simmons': 19.76, 'dennis smith jr': 19.72, 'cam thomas': 30.96, 'lonnie walker iv': 26.65, 'trendon watford': 10.24, 'nicolas batum': 25.62, 'patrick beverley': 23.83, 'tobias harris': 34.03, 'danuel house jr': 19.05, 'tyrese maxey': 38.16, 'marcus morris sr': 23.43, 'kelly oubre jr': 31.31, 'paul reed': 21.99, 'stephen curry': 33.46, 'draymond green': 29.69, 'trayce jackson davis': 16.68, 'cory joseph': 14.63, 'jonathan kuminga': 27.37, 'kevon looney': 15.85, 'brandin podziemski': 30.63, 'klay thompson': 31.83, 'andrew wiggins': 33.16, 'bogdan bogdanovic': 28.03, 'clint capela': 25.12, 'jalen johnson': 39.37, 'garrison mathews': 13.41, 'patty mills': 0, 'dejounte murray': 37.3, 'onyeka okongwu': 34.96, 'trae young': 41.42, 'harrison barnes': 30.49, 'chris duarte': 8.43, 'keon ellis': 12.38, "de'aaron fox": 34.46, 'kevin huerter': 23.76, 'trey lyles': 18.78, 'davion mitchell': 8.29, 'malik monk': 24.6, 'keegan murray': 32.46, 'domantas sabonis': 34.87, 'jevon carter': 11.89, 'alex caruso': 31.53, 'torrey craig': 22.15, 'demar derozan': 39.29, 'ayo dosunmu': 34.82, 'andre drummond': 15.53, 'nikola vucevic': 34.43, 'coby white': 39.22, 'max christie': 22.43, 'anthony davis': 33.49, 'rui hachimura': 22.08, 'lebron james': 35.85, 'taurean prince': 32.86, 'austin reaves': 32.88, "d'angelo russell": 29.81, 'christian wood': 13.8, 'precious achiuwa': 36.96, 'og anunoby': 34.88, 'jalen brunson': 36.3, 'donte divincenzo': 34.25, 'evan fournier': 14.55, 'josh hart': 36.81, 'isaiah hartenstein': 27.36, 'giannis antetokounmpo': 37.9, 'malik beasley': 33.79, 'marjon beauchamp': 13.16, 'pat connaughton': 19.24, 'jae crowder': 25.45, 'andre jackson jr': 20.99, 'damian lillard': 36.91, 'brook lopez': 31.89, 'khris middleton': 30.59, 'cameron payne': 13.65, 'bobby portis': 26.83, 'seth curry': 10.71, 'luka doncic': 40.64, 'josh green': 28.76, 'tim hardaway jr': 34.52, 'jaden hardy': 16.05, 'derrick jones jr': 30.45, 'maxi kleber': 17.4, 'dwight powell': 12.29, 'grant williams': 25.53, 'jarrett allen': 29.69, 'darius garland': 24, 'caris levert': 27.05, 'sam merrill': 10.64, 'donovan mitchell': 35.25, 'evan mobley': 24, 'georges niang': 20.1, 'isaac okoro': 23.43, 'craig porter': 3.68, 'max strus': 31.58, 'dean wade': 13.05, 'dominick barlow': 17.94, 'malaki branham': 15.82, 'julian champagnie': 21.01, 'zach collins': 20.43, 'tre jones': 30.52, 'doug mcdermott': 13.99, 'cedi osman': 18.92, 'jeremy sochan': 30.22, 'devin vassell': 33.04, 'victor wembanyama': 27.26, 'blake wesley': 14.3, 'saddiq bey': 36.17, "de'andre hunter": 20.69, 'sasha vezenkov': 12.67, 'keldon johnson': 26.76, 'moses moody': 21.83, 'cole anthony': 19.36, 'paolo banchero': 33.36, 'goga bitadze': 3.52, 'anthony black': 13.78, 'wendell carter jr': 29.84, 'markelle fultz': 27.35, 'gary harris': 19.07, 'caleb houstan': 5.55, 'joe ingles': 15.12, 'jonathan isaac': 16.1, 'chuma okeke': 3.83, 'trevelin queen': 4.11, 'jalen suggs': 26.67, 'franz wagner': 32.92, 'moritz wagner': 15.49, 'bojan bogdanovic': 34.12, 'alec burks': 22.8, 'cade cunningham': 35.35, 'jalen duren': 31.29, 'danilo gallinari': 15.54, 'killian hayes': 14.91, 'jaden ivey': 29.93, 'kevin knox ii': 21.59, 'monte morris': 10.65, 'marcus sasser': 13.91, 'ausar thompson': 18.76, 'james wiseman': 12.21, 'grayson allen': 32.66, 'keita bates diop': 10.53, 'bradley beal': 33.63, 'devin booker': 37.09, 'kevin durant': 37.71, 'drew eubanks': 14.16, 'jordan goodwin': 7.6, 'eric gordon': 27.84, 'nassir little': 9.75, 'theo maledon': 0, 'chimezie metu': 11.53, 'jusuf nurkic': 26.59, 'josh okogie': 14.03, 'yuta watanabe': 6.84, 'deni avdija': 27.54, 'bilal coulibaly': 26.44, 'daniel gafford': 26.28, 'tyus jones': 28.58, 'corey kispert': 28.0, 'jordan poole': 29.28, 'landry shamet': 14.94, 'delon wright': 15.22, 'santi aldama': 26.63, 'tosan evbuomwan': 16.0, 'jacob gilyard': 20.53, 'matt hurt': 13.88, 'gg jackson': 19.83, 'trey jemison': 14.0, 'luke kennard': 25.93, 'john konchar': 22.84, 'scotty pippen jr': 22.59, 'david roddy': 25.49, 'derrick rose': 19.25, 'vince williams jr': 29.23, 'jaylen brown': 32.36, 'sam hauser': 20.92, 'jrue holiday': 37.29, 'al horford': 34.42, 'luke kornet': 15.44, 'kristaps porzingis': 33.43, 'payton pritchard': 23.11, 'neemias queta': 17.74, 'jayson tatum': 37.82, 'derrick white': 36.14, 'tyrese haliburton': 24, 'buddy hield': 22.86, 'isaiah jackson': 13.03, 'bennedict mathurin': 25.42, 'tj mcconnell': 16.49, 'andrew nembhard': 26.8, 'aaron nesmith': 29.35, 'pascal siakam': 34.42, 'jalen smith': 15.68, 'myles turner': 27.38, 'miles bridges': 37.53, 'cody martin': 25.8, 'bryce mcgowens': 16.31, 'nathan mensah': 7.82, 'brandon miller': 34.39, 'nick richards': 30.24, 'ish smith': 22.03, 'nick smith jr': 20.78, 'jt thor': 11.6, 'pj washington': 29.9, 'amir coffey': 14.76, 'paul george': 31.47, 'james harden': 33.08, 'bones hyland': 5.44, 'kawhi leonard': 32.35, 'terance mann': 25.78, 'mason plumlee': 22.1, 'norman powell': 25.3, 'daniel theis': 19.08, 'pj tucker': 12.28, 'russell westbrook': 23.43, 'bam adebayo': 34.27, 'jimmy butler': 34.62, 'jamal cain': 21.8, 'tyler herro': 32.51, 'haywood highsmith': 18.9, 'jaime jaquez jr': 29.06, 'nikola jovic': 14.39, 'kevin love': 16.8, 'caleb martin': 25.74, 'josh richardson': 29.59, 'orlando robinson': 11.41, 'terry rozier': 31.81, 'dillon brooks': 31.23, 'jalen green': 30.25, 'jeff green': 15.28, 'aaron holiday': 16.07, 'alperen sengun': 32.72, 'jabari smith jr': 30.99, "jae'sean tate": 16.72, 'amen thompson': 16.03, 'fred vanvleet': 36.83, 'cam whitmore': 15.86, 'nickeil alexander walker': 19.26, 'kyle anderson': 22.53, 'mike conley': 29.35, 'anthony edwards': 35.26, 'rudy gobert': 33.47, 'jaden mcdaniels': 29.5, 'shake milton': 11.08, 'naz reid': 21.83, 'karl anthony towns': 32.78, 'scottie barnes': 33.85, 'rj barrett': 30.3, 'chris boucher': 13.75, 'bruce brown': 27.41, 'gradey dick': 20.9, 'jordan nwora': 17.41, 'jakob poeltl': 22.07, 'otto porter jr': 11.57, 'immanuel quickley': 24, 'dennis schroder': 24.95, 'gary trent jr': 26.55, 'thaddeus young': 20.84, 'ousmane dieng': 14.12, 'luguentz dort': 25.34, 'josh giddey': 23.71, 'shai gilgeous alexander': 32.33, 'chet holmgren': 27.42, 'vasilije micic': 12.05, 'cason wallace': 21.71, 'aaron wiggins': 18.07, 'jaylin williams': 18.72, 'kenrich williams': 14.64, 'ochai agbaji': 17.37, 'jordan clarkson': 29.75, 'john collins': 25.44, 'kris dunn': 19.62, 'simone fontecchio': 27.09, 'keyonte george': 22.11, 'taylor hendricks': 4.54, 'talen horton tucker': 10.63, 'walker kessler': 20.62, 'lauri markkanen': 31.67, 'kelly olynyk': 18.33, 'collin sexton': 25.86, 'deandre ayton': 27.81, 'ibou badji': 4.69, 'malcolm brogdon': 34.5, 'toumani camara': 20.05, 'jerami grant': 34.84, 'scoot henderson': 23.6, 'kris murray': 8.01, 'duop reath': 18.52, 'shaedon sharpe': 24, 'anfernee simons': 32.5, 'matisse thybulle': 17.38, 'jabari walker': 24.03, 'christian braun': 16.03, 'kentavious caldwell pope': 29.69, 'aaron gordon': 27.72, 'justin holiday': 6.67, 'reggie jackson': 21.9, 'nikola jokic': 34.17, 'deandre jordan': 10.93, 'jamal murray': 32.22, 'michael porter jr': 34.14, 'julian strawther': 9.24, 'peyton watson': 20.97, 'kyle lowry': 24, 'ivica zubac': 24, 'obi toppin': 0, 'dario saric': 20.79, 'jose alvarado': 15.25, 'dyson daniels': 17.09, 'jordan hawkins': 14.7, 'brandon ingram': 32.94, 'herbert jones': 27.76, 'naji marshall': 15.62, 'cj mccollum': 31.62, 'trey murphy iii': 25.28, 'larry nance jr': 19.48, 'matt ryan': 19.4, 'jonas valanciunas': 25.89, 'zion williamson': 29.73}

===Generate All Current Conditions===

Settings: Find Players

Input: Players of Interest
Input: game_teams = [(away team, home team), ...] = [('nyk', 'bkn'), ...]
Input: all_players_teams = {player:{year:{team:{GP:gp, MIN:min},... = {'bam adebayo': {'2018': {'mia': {GP:69, MIN:30}, ...
Input: teams_current_rosters = {team:[players],..., {'nyk': [jalen brunson, ...], ...}
Input: all_players_season_logs = {player:{year:{stat name:{game idx:stat val, ... = {'jalen brunson': {'2024': {'Player': {'0': 'jalen brunson', ...
Input: Current Year to get current team if not in rosters
Input: all_teams_players = {year:{team:[players], ... = {'2024': {'wsh': ['kyle kuzma', ...

Output: all_current_conditions = {p1:{starters:[s1,...], loc:l1, city:c1, dow:d1, tod:t1,...}, ... = {'nikola jokic': {'loc': 'away', 'out': ['vlatko cancar',...], ...


===Read All Lineups===

Input: all_players_teams = {player:{year:{team:{GP:gp, MIN:min},... = {'bam adebayo': {'2018': {'mia': {GP:69, MIN:30.1}, ...

Output: all_lineups = {'cle': {'starters': ['donovan mitchell', ...

all_lineups: {'hou': {'starters': ['amen thompson', 'jalen green', 'dillon brooks', 'jabari smith jr', 'alperen sengun'], 'bench': ['jeff green', 'aaron holiday', "jae'sean tate", 'cam whitmore'], 'out': ['tari eason', 'fred vanvleet'], 'probable': [], 'question': [], 'doubt': [], 'dnp': ['steven adams', 'reggie bullock jr', 'nate hinton', 'jock landale', 'boban marjanovic', 'jermaine samuels jr', 'nate williams']}, 'ind': {'starters': ['tyrese haliburton', 'andrew nembhard', 'aaron nesmith', 'pascal siakam', 'myles turner'], 'bench': ['buddy hield', 'isaiah jackson', 'bennedict mathurin', 'tj mcconnell', 'jalen smith', 'obi toppin'], 'out': [], 'probable': [], 'question': ['tyrese haliburton', 'jalen smith'], 'doubt': [], 'dnp': ['kendall brown', 'james johnson', 'ben sheppard', 'oscar tshiebwe', 'jarace walker', 'isaiah wong']}}

===Read All Teams Schedules===


Output: all_teams_schedules = {team: {field idx:{'0':field name, game num:field val, ... = {"phx": {"0": {"0": "DATE", "1": "Tue, Oct 24", "2": "Thu, Oct 26", ...


===Read Game ESPN ID======

Input: game_key = away home date = hou ind 02/06/2024
found game key saved
game_espn_id: 401585347

===Convert All Conditions Dicts to Lists===

Input: all_conditions = {p1:{starters:[s1,...], opp starters:[s1,...], loc:l1, city:c1, dow:d1, tod:t1,...}, ... = {'nikola jokic': {'loc': 'away', 'out': ['vlatko cancar',...], ...

Output: all_conditions_dicts = {p1:{loc:away, start:start, prev:5, ...} = {'nikola jokic': {loc:'away', ...
Output: all_game_player_cur_conds = {p1: {teammates: {starters:[],...}, opp: {...}}, ... = 


===Read All Prev Stat Vals===

Input: all_players_season_logs = {player:{year:{stat name:{game idx:stat val, ... = {'jalen brunson': {'2024': {'Player': {'0': 'jalen brunson', ...

Output: all_prev_stat_vals = {player:{stat name:prev val,...}, ... = {'clint capela': {'pts': 6, 'ast': 0, 'reb': 9}}


===Generate All Cur Conds Lists===

Input: all_cur_conds_dicts = {player: {cond_key:cond_val, ... = {'myles turner': {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}}
Input: all_game_player_cur_conds = {p1: {teammates: {starters:[],...}, opp: {...}}, ... = {'myles turner': {'teammates': {'out': [], 'starters': ['tyrese haliburton', 'andrew nembhard', 'aaron nesmith', 'pascal siakam', 'myles turner'], 'bench': ['buddy hield', 'isaiah jackson', 'bennedict mathurin', 'tj mcconnell', 'jalen smith', 'obi toppin']}, 'opp': {'out': ['tari eason', 'fred vanvleet'], 'starters': ['amen thompson', 'jalen green', 'dillon brooks', 'jabari smith jr', 'alperen sengun'], 'bench': ['jeff green', 'aaron holiday', "jae'sean tate", 'cam whitmore']}}}

Output: all_cur_conds_lists = {player:[], ... = {'lebron james': ['all', 'home',...


===Determine All Current GP Conds===

Input: all_game_player_cur_conds = {p1: {teammates: {starters:[],...}, opp: {...}}, ... = {'myles turner': {'teammates': {'out': [], 'starters': ['tyrese haliburton', 'andrew nembhard', 'aaron nesmith', 'pascal siakam', 'myles turner'], 'bench': ['buddy hield', 'isaiah jackson', 'bennedict mathurin', 'tj mcconnell', 'jalen smith', 'obi toppin']}, 'opp': {'out': ['tari eason', 'fred vanvleet'], 'starters': ['amen thompson', 'jalen green', 'dillon brooks', 'jabari smith jr', 'alperen sengun'], 'bench': ['jeff green', 'aaron holiday', "jae'sean tate", 'cam whitmore']}}}

Output: all_cur_conds = ['all','teammates','opp','J Giddey F, C Wallace G,... starters',...]

all_cur_conds_lists: {'myles turner': ['all', 'home', '7:00', 'local', 'Indianapolis IN', '0 lag', 'tue', 'weekday', '2 after', '2 before', 'nf', 'hou', 'T Haliburton PG starters', 'A Nembhard PG starters', 'A Nesmith SF starters', 'P Siakam PF starters', 'M Turner C starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters', 'B Hield SG bench', 'I Jackson SF bench', 'B Mathurin SG bench', 'TJ McConnell PG bench', 'J Smith PF bench', 'O Toppin PF bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench', 'T Eason F opp out', 'F VanVleet PG opp out', 'F VanVleet PG, T Eason F opp out', 'A Thompson F opp starters', 'Ja Green SG opp starters', 'D Brooks SF opp starters', 'J Smith Jr PF opp starters', 'A Sengun C opp starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters', 'Je Green PF opp bench', 'A Holiday G opp bench', 'J Tate SF opp bench', 'C Whitmore F opp bench', 'A Holiday G, C Whitmore F, J Tate SF, Je Green PF opp bench']}

===Determine All Players Cur Avg Playtimes===

Setting: Current Year = 2024

Input: all_players_season_logs = {player:{year:{stat name:{game idx:stat val, ... = {'jalen brunson': {'2024': {'Player': {'0': 'jalen brunson', ...
Input: all_players_teams = {player:{year:{team:{GP:gp, MIN:min},... = {'bam adebayo': {'2018': {'mia': {GP:69, MIN:30}, ...

Output: all_players_cur_avg_playtimes = {player:playtime, ....


===All After Injury Players===

Warning: Double check playtime in lineups reports details!

==============================


===Warning: No JSON File: data/stat dicts/myles turner 2024 stat dict 02-06-24.json===


===Warning: No JSON File: data/stat dicts/myles turner prev stat dicts.json===


===Generate Player Stat Dict: Myles Turner===

Settings: find players, todays date to get day conditions, current year to get changing stat dicts file

Input: Player of Interest
Input: player_season_logs = {year: {stat name: {game idx: stat val, ... = {'2024': {'Player': {'0': 'jalen brunson', ...
Input: all_box_scores = {year:{game key:{away:{starters:[],bench:[]},home:{starters:[],bench:[]}},... = {'2024': {'mem okc 12/18/2023': {'away': {'starters': ['J Jackson Jr PF', ...], 'bench': ['S Aldama PF', ...]}, 'home': ...
Input: player_teams = {year:{team:{GP:gp, MIN:min},... = {'2018': {'mia': {GP:69, MIN:30}, ...
Input: game_teams = [(away team, home team), ...] = [('nyk', 'bkn'), ...]
Input: init_player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = 

Input: player_position = 'position' = c
Input: player_teammates = {year:[teammates],... = {2024: [J Randle PF, ... = {'2024': ['P Siakam PF', 'A Nesmith SF', 'M Turner C', 'A Nembhard PG', 'T Haliburton PG', 'B Hield SG', 'I Jackson SF', 'B Mathurin SG', 'TJ McConnell PG', 'J Smith PF', 'O Toppin PF', 'K Brown SG', 'J Johnson PF', 'B Sheppard G', 'O Tshiebwe C', 'J Walker F', 'isaiah wong', 'B Brown SF'], '2023': ['A Nesmith SF', 'M Turner C', 'A Nembhard PG', 'T Haliburton PG', 'B Mathurin SG', 'J Smith PF', 'J Nwora SF', 'O Brissett SF', 'I Jackson SF', 'TJ McConnell PG', 'B Hield SG', 'T Taylor F', 'G Bitadze C', 'T Queen SG', 'C Duarte SG', 'D Theis C'], '2022': ['D Sabonis PF', 'J Holiday SF', 'M Turner C', 'D Washington Jr PG', 'K Sykes G', 'O Brissett SF', 'T Craig SF', 'I Jackson SF', 'M Brogdon PG', 'T Haliburton PG', 'B Hield SG', 'J Smith PF', 'G Bitadze C', 'C Duarte SG', 'T Thompson C', 'T Taylor F', 'B Wanamaker PG', 'C LeVert SG', 'K Martin SG']}
Input: rosters = {team:roster, ... = {'nyk': [jalen brunson, ...], ...
Input: gp_cur_team = x

Output: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

[distfit] >INFO> fit
[distfit] >INFO> transform
[distfit] >INFO> [norm    ] [0.00 sec] [RSS: 0.00016028] [loc=16.238 scale=5.523]
[distfit] >INFO> [skewnorm] [0.00 sec] [RSS: 0.000187514] [loc=11.412 scale=7.334]
[distfit] >INFO> [loggamma] [0.01 sec] [RSS: 0.000161305] [loc=-1565.602 scale=215.901]
[distfit] >INFO> Compute confidence intervals [parametric]
[distfit] >INFO> fit
[distfit] >INFO> transform
[distfit] >INFO> [norm    ] [0.00 sec] [RSS: 0.0159489] [loc=6.738 scale=2.398]
[distfit] >INFO> [skewnorm] [0.00 sec] [RSS: 0.0164832] [loc=5.359 scale=2.766]
[distfit] >INFO> [loggamma] [0.01 sec] [RSS: 0.0158131] [loc=-538.399 scale=78.274]
[distfit] >INFO> Compute confidence intervals [parametric]
[distfit] >INFO> fit
[distfit] >INFO> transform
[distfit] >INFO> [norm    ] [0.00 sec] [RSS: 0.225207] [loc=1.310 scale=1.130]
[distfit] >INFO> [skewnorm] [0.03 sec] [RSS: 0.152048] [loc=-0.000 scale=1.730]
[distfit] >INFO> [loggamma] [0.01 sec] [RSS: 0.225651] [loc=-304.518 scale=42.394]
[distfit] >INFO> Compute confidence intervals [parametric]

===Generate Player Playtime: Myles Turner===

Settings: Current Year = 2024
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: player_gp_conds = ['teammate out',..., 't1,...out'] = ['A Gordon F out', ..., 'A Gordon F,...out'] = ['T Haliburton PG starters', 'A Nembhard PG starters', 'A Nesmith SF starters', 'P Siakam PF starters', 'M Turner C starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters', 'B Hield SG bench', 'I Jackson SF bench', 'B Mathurin SG bench', 'TJ McConnell PG bench', 'J Smith PF bench', 'O Toppin PF bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench', 'T Eason F opp out', 'F VanVleet PG opp out', 'F VanVleet PG, T Eason F opp out', 'A Thompson F opp starters', 'Ja Green SG opp starters', 'D Brooks SF opp starters', 'J Smith Jr PF opp starters', 'A Sengun C opp starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters', 'Je Green PF opp bench', 'A Holiday G opp bench', 'J Tate SF opp bench', 'C Whitmore F opp bench', 'A Holiday G, C Whitmore F, J Tate SF, Je Green PF opp bench']
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_season_logs = {player:{year:{stat name:{game idx:stat val, ... = {'jalen brunson': {'2024': {'Player': {'0': 'jalen brunson', ...
Input: all_players_teams = {player:{year:{team:{GP:gp, MIN:min},... = {'bam adebayo': {'2018': {'mia': {GP:69, MIN:30}, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: irreg_play_times = {player:playtime,... = {}

Output: playtime = x


===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {'M Turner C starters': 27.35, 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 26.0}
Input: all_conditions_stats = {cond1:w1,... = {'M Turner C starters': 27.4, 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 142.33}

Output: weighted_stats = [ws1,...]


cond: M Turner C starters
stat: 27.35
weight: 27.4

cond: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters
stat: 26.0
weight: 142.33
playtime: 26.22

===Generate Player Unit Stat Dict: Myles Turner===

Setting: Current Year = 2024
Setting: Season Part = regular
Setting: Stats of Interest = [s1,...] = ['pts', 'reb', 'ast']

Input: player_team = abbrev = ind
Input: player_gp_conds = [teammate out,...] = [A Gordon F out, ...] = ['T Haliburton PG starters', 'A Nembhard PG starters', 'A Nesmith SF starters', 'P Siakam PF starters', 'M Turner C starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters', 'B Hield SG bench', 'I Jackson SF bench', 'B Mathurin SG bench', 'TJ McConnell PG bench', 'J Smith PF bench', 'O Toppin PF bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench', 'T Eason F opp out', 'F VanVleet PG opp out', 'F VanVleet PG, T Eason F opp out', 'A Thompson F opp starters', 'Ja Green SG opp starters', 'D Brooks SF opp starters', 'J Smith Jr PF opp starters', 'A Sengun C opp starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters', 'Je Green PF opp bench', 'A Holiday G opp bench', 'J Tate SF opp bench', 'C Whitmore F opp bench', 'A Holiday G, C Whitmore F, J Tate SF, Je Green PF opp bench']
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: player_season_logs = {year: {stat name: {game idx: stat val, ... = {'2024': {'Player': {'0': 'jalen brunson', ...
Input: all_players_season_logs = {player:{year:{stat name:{game idx:stat val, ... = {'jalen brunson': {'2024': {'Player': {'0': 'jalen brunson', ...
Input: all_players_teams = {player:{year:{team:{GP:gp, MIN:min},... = {'bam adebayo': {'2018': {'mia': {GP:69, MIN:30}, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-MEM': 'jaren jackson jr',...

Output: player_unit_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

init_player_playtime: 27.38
player_playtime: 26.22

===Generate Player Distrib Models: Myles Turner===

Setting: stats of interest = [pts, reb, ast, ...]

Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: player_distrib_models = {stat name: {model name, sim data, sim avg, sim max} = {pts:{name:pareto, data:sim_all_data, avg:a, max:m}, ... = {'pts': {'name': 'loggamma', 'data': array([-4.40556263, ...

init_player_playtime: 27.38
player_playtime: 26.22
final_num_samples: 126

===Stat Name: PTS
all_data: [ 4  5  5  5  5  7  8  9  9  9 10 10 10 10 10 10 10 10 11 11 11 11 11 11
 12 12 12 12 12 12 12 12 12 12 12 12 12 12 13 13 13 14 14 14 14 14 14 15
 15 15 15 15 15 15 15 15 15 15 15 15 15 15 16 16 16 16 17 17 17 17 17 17
 17 17 17 17 18 18 18 18 18 18 18 19 19 19 19 19 19 19 19 19 19 20 20 20
 20 20 20 21 21 21 22 22 22 22 22 22 22 22 22 22 23 23 23 24 24 25 25 25
 26 26 28 29 32 32]

PTS Model Name: norm

all_fit_params: FitParams(loc=16.238093545688002, scale=5.522578017419028)
sim_avg: 16.28
sim_max: 37.25

===Stat Name: REB
all_data: [ 0  2  2  2  2  3  3  3  3  3  4  4  4  4  4  4  4  4  4  4  4  4  4  4
  5  5  5  5  5  5  5  5  5  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6
  6  6  6  6  6  6  6  6  6  6  6  6  6  7  7  7  7  7  7  7  7  7  7  7
  7  7  7  7  7  7  7  7  7  7  8  8  8  8  8  8  8  8  8  8  8  8  8  8
  8  9  9  9  9  9  9  9  9  9  9  9  9 10 10 10 10 10 10 10 10 10 11 11
 11 11 11 11 12 14]

REB Model Name: loggamma

all_fit_params: FitParams(c=91.11511799653577, loc=-96.55757272831893, scale=22.92075777342077)
sim_avg: 6.73
sim_max: 16.46

===Stat Name: AST
all_data: [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1
 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3
 3 3 3 3 3 3 3 3 3 3 4 4 4 4 5]

AST Model Name: skewnorm

all_fit_params: FitParams(a=246.42104204013359, loc=-0.01878141748926762, scale=1.7368524092045283)
sim_avg: 1.36
sim_max: 6.5
init_player_conds: {}
player_conds: ['all', 'home', '7:00', 'local', 'Indianapolis IN', '0 lag', 'tue', 'weekday', '2 after', '2 before', 'nf', 'hou', 'T Haliburton PG starters', 'A Nembhard PG starters', 'A Nesmith SF starters', 'P Siakam PF starters', 'M Turner C starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters', 'B Hield SG bench', 'I Jackson SF bench', 'B Mathurin SG bench', 'TJ McConnell PG bench', 'J Smith PF bench', 'O Toppin PF bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench', 'T Eason F opp out', 'F VanVleet PG opp out', 'F VanVleet PG, T Eason F opp out', 'A Thompson F opp starters', 'Ja Green SG opp starters', 'D Brooks SF opp starters', 'J Smith Jr PF opp starters', 'A Sengun C opp starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters', 'Je Green PF opp bench', 'A Holiday G opp bench', 'J Tate SF opp bench', 'C Whitmore F opp bench', 'A Holiday G, C Whitmore F, J Tate SF, Je Green PF opp bench']

===Generate Player Distrib Probs: Myles Turner===

Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: current_conditions = [all, home, t watford f in, ...] = ['all', 'home', '7:00', 'local', 'Indianapolis IN', '0 lag', 'tue', 'weekday', '2 after', '2 before', 'nf', 'hou', 'T Haliburton PG starters', 'A Nembhard PG starters', 'A Nesmith SF starters', 'P Siakam PF starters', 'M Turner C starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters', 'B Hield SG bench', 'I Jackson SF bench', 'B Mathurin SG bench', 'TJ McConnell PG bench', 'J Smith PF bench', 'O Toppin PF bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench', 'T Eason F opp out', 'F VanVleet PG opp out', 'F VanVleet PG, T Eason F opp out', 'A Thompson F opp starters', 'Ja Green SG opp starters', 'D Brooks SF opp starters', 'J Smith Jr PF opp starters', 'A Sengun C opp starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters', 'Je Green PF opp bench', 'A Holiday G opp bench', 'J Tate SF opp bench', 'C Whitmore F opp bench', 'A Holiday G, C Whitmore F, J Tate SF, Je Green PF opp bench']
Input: player_prev_vals = {stat name:prev val, ...} = {'pts': 16, 'ast': 2, 'reb': 10}
Input: player_distrib_models = {stat name: {model name, sim data}, ...

Output: player_distrib_probs = {condition: {year: {season part: {stat name: {stat val: prob over, ... = {'all': {'2024': {'regular': {'pts': [0.01, ...], ... 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'2023': {'regular': {'pts': [0.01, ...], ...


===Warning: No JSON File: data/probs/myles turner probs 02-06-24.json===

player_name: Myles Turner
init_player_playtime: 27.38
player_playtime: 26.22
init_player_conds: {}
player_conds: ['all', 'home', '7:00', 'local', 'Indianapolis IN', '0 lag', 'tue', 'weekday', '2 after', '2 before', 'nf', 'hou', 'T Haliburton PG starters', 'A Nembhard PG starters', 'A Nesmith SF starters', 'P Siakam PF starters', 'M Turner C starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters', 'B Hield SG bench', 'I Jackson SF bench', 'B Mathurin SG bench', 'TJ McConnell PG bench', 'J Smith PF bench', 'O Toppin PF bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench', 'T Eason F opp out', 'F VanVleet PG opp out', 'F VanVleet PG, T Eason F opp out', 'A Thompson F opp starters', 'Ja Green SG opp starters', 'D Brooks SF opp starters', 'J Smith Jr PF opp starters', 'A Sengun C opp starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters', 'Je Green PF opp bench', 'A Holiday G opp bench', 'J Tate SF opp bench', 'C Whitmore F opp bench', 'A Holiday G, C Whitmore F, J Tate SF, Je Green PF opp bench']

stat_name: pts
player_stat_model_name: norm
player_stat_model_avg: 16.28
player_stat_model_max: 37.25

===Test Distribute All Probs===

cond_data: [16  5 17  7 19 16 17 22 15 19 12 12 15 12 10 32 13 12 24 24 20 22 11 19
 15  8 17 19 21 13 15 12 11 22 15 12 11 23 20 15 25 19 14 23 10 16 18 13]
player: myles turner
stat: pts
condition: all
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.08559203147888184

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (16.077990312129252, 5.582979571571997)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.79026479, -2.61114896, -2.43203314, -2.25291731, -2.07380148,
       -1.89468566, -1.71556983, -1.536454  , -1.35733818, -1.17822235,
       -0.99910652, -0.8199907 , -0.64087487, -0.46175904, -0.28264322,
       -0.10352739,  0.07558843,  0.25470426,  0.43382009,  0.61293591,
        0.79205174,  0.97116757,  1.15028339,  1.32939922,  1.50851505,
        1.68763087,  1.8667467 ,  2.04586253,  2.22497835,  2.40409418,
        2.58321001,  2.76232583,  2.94144166,  3.12055748,  3.29967331,
        3.47878914,  3.65790496])]

===Scipy _CDF===

x: [-2.79026479 -2.61114896 -2.43203314 -2.25291731 -2.07380148 -1.89468566
 -1.71556983 -1.536454   -1.35733818 -1.17822235 -0.99910652 -0.8199907
 -0.64087487 -0.46175904 -0.28264322 -0.10352739  0.07558843  0.25470426
  0.43382009  0.61293591  0.79205174  0.97116757  1.15028339  1.32939922
  1.50851505  1.68763087  1.8667467   2.04586253  2.22497835  2.40409418
  2.58321001  2.76232583  2.94144166  3.12055748  3.29967331  3.47878914
  3.65790496]
args: ()

===Scipy _CDF _Single===

x: -2.790264788259464
args: ()

Output: cdf single = x

cdf_single: 0.0026332475479445535

===Scipy _CDF _Single===

x: -2.6111489618122556
args: ()

Output: cdf single = x

cdf_single: 0.004511928901281646

===Scipy _CDF _Single===

x: -2.4320331353650477
args: ()

Output: cdf single = x

cdf_single: 0.0075071668417999796

===Scipy _CDF _Single===

x: -2.252917308917839
args: ()

Output: cdf single = x

cdf_single: 0.012132181644745955

===Scipy _CDF _Single===

x: -2.0738014824706306
args: ()

Output: cdf single = x

cdf_single: 0.019048875722217737

===Scipy _CDF _Single===

x: -1.8946856560234222
args: ()

Output: cdf single = x

cdf_single: 0.029067029593951695

===Scipy _CDF _Single===

x: -1.7155698295762136
args: ()

Output: cdf single = x

cdf_single: 0.043120402232125536

===Scipy _CDF _Single===

x: -1.5364540031290053
args: ()

Output: cdf single = x

cdf_single: 0.0622135353429397

===Scipy _CDF _Single===

x: -1.3573381766817965
args: ()

Output: cdf single = x

cdf_single: 0.08733689113367586

===Scipy _CDF _Single===

x: -1.178222350234588
args: ()

Output: cdf single = x

cdf_single: 0.11935398727056908

===Scipy _CDF _Single===

x: -0.9991065237873795
args: ()

Output: cdf single = x

cdf_single: 0.15887154560053615

===Scipy _CDF _Single===

x: -0.819990697340171
args: ()

Output: cdf single = x

cdf_single: 0.20611070519220842

===Scipy _CDF _Single===

x: -0.6408748708929626
args: ()

Output: cdf single = x

cdf_single: 0.26080199181777397

===Scipy _CDF _Single===

x: -0.46175904444575416
args: ()

Output: cdf single = x

cdf_single: 0.32212706194686563

===Scipy _CDF _Single===

x: -0.2826432179985457
args: ()

Output: cdf single = x

cdf_single: 0.3887251736905012

===Scipy _CDF _Single===

x: -0.10352739155133726
args: ()

Output: cdf single = x

cdf_single: 0.45877220548851644

===Scipy _CDF _Single===

x: 0.07558843489587087
args: ()

Output: cdf single = x

cdf_single: 0.5301267311219671

===Scipy _CDF _Single===

x: 0.25470426134307933
args: ()

Output: cdf single = x

cdf_single: 0.6005242376491815

===Scipy _CDF _Single===

x: 0.4338200877902878
args: ()

Output: cdf single = x

cdf_single: 0.6677904533827924

===Scipy _CDF _Single===

x: 0.6129359142374963
args: ()

Output: cdf single = x

cdf_single: 0.7300406424813791

===Scipy _CDF _Single===

x: 0.7920517406847047
args: ()

Output: cdf single = x

cdf_single: 0.7858347461671656

===Scipy _CDF _Single===

x: 0.9711675671319132
args: ()

Output: cdf single = x

cdf_single: 0.8342675791690721

===Scipy _CDF _Single===

x: 1.1502833935791217
args: ()

Output: cdf single = x

cdf_single: 0.8749864158693622

===Scipy _CDF _Single===

x: 1.32939922002633
args: ()

Output: cdf single = x

cdf_single: 0.9081418524819882

===Scipy _CDF _Single===

x: 1.5085150464735386
args: ()

Output: cdf single = x

cdf_single: 0.9342886206643288

===Scipy _CDF _Single===

x: 1.687630872920747
args: ()

Output: cdf single = x

cdf_single: 0.9542589454992841

===Scipy _CDF _Single===

x: 1.8667466993679556
args: ()

Output: cdf single = x

cdf_single: 0.969031515526423

===Scipy _CDF _Single===

x: 2.045862525815164
args: ()

Output: cdf single = x

cdf_single: 0.9796150508940149

===Scipy _CDF _Single===

x: 2.2249783522623723
args: ()

Output: cdf single = x

cdf_single: 0.9869586542878331

===Scipy _CDF _Single===

x: 2.4040941787095806
args: ()

Output: cdf single = x

cdf_single: 0.9918937020414932

===Scipy _CDF _Single===

x: 2.5832100051567894
args: ()

Output: cdf single = x

cdf_single: 0.9951057140130828

===Scipy _CDF _Single===

x: 2.762325831603998
args: ()

Output: cdf single = x

cdf_single: 0.9971304413699531

===Scipy _CDF _Single===

x: 2.941441658051207
args: ()

Output: cdf single = x

cdf_single: 0.9983665581213471

===Scipy _CDF _Single===

x: 3.1205574844984154
args: ()

Output: cdf single = x

cdf_single: 0.9990974546859401

===Scipy _CDF _Single===

x: 3.2996733109456238
args: ()

Output: cdf single = x

cdf_single: 0.9995160128097594

===Scipy _CDF _Single===

x: 3.478789137392832
args: ()

Output: cdf single = x

cdf_single: 0.9997481576268152

===Scipy _CDF _Single===

x: 3.6579049638400405
args: ()

Output: cdf single = x

cdf_single: 0.9998728573533342
_cdf = _cdfvec(x, *args) = [0.00263325 0.00451193 0.00750717 0.01213218 0.01904888 0.02906703
 0.0431204  0.06221354 0.08733689 0.11935399 0.15887155 0.20611071
 0.26080199 0.32212706 0.38872517 0.45877221 0.53012673 0.60052424
 0.66779045 0.73004064 0.78583475 0.83426758 0.87498642 0.90814185
 0.93428862 0.95425895 0.96903152 0.97961505 0.98695865 0.9918937
 0.99510571 0.99713044 0.99836656 0.99909745 0.99951601 0.99974816
 0.99987286]
prob_less_or_equal: [0.00263325 0.00451193 0.00750717 0.01213218 0.01904888 0.02906703
 0.0431204  0.06221354 0.08733689 0.11935399 0.15887155 0.20611071
 0.26080199 0.32212706 0.38872517 0.45877221 0.53012673 0.60052424
 0.66779045 0.73004064 0.78583475 0.83426758 0.87498642 0.90814185
 0.93428862 0.95425895 0.96903152 0.97961505 0.98695865 0.9918937
 0.99510571 0.99713044 0.99836656 0.999      0.999      0.999
 0.999     ]
cdf_over: [0.99736675 0.99548807 0.99249283 0.98786782 0.98095112 0.97093297
 0.9568796  0.93778646 0.91266311 0.88064601 0.84112845 0.79388929
 0.73919801 0.67787294 0.61127483 0.54122779 0.46987327 0.39947576
 0.33220955 0.26995936 0.21416525 0.16573242 0.12501358 0.09185815
 0.06571138 0.04574105 0.03096848 0.02038495 0.01304135 0.0081063
 0.00489429 0.00286956 0.00163344 0.001      0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [16  5 17  7 19 16 12 15 12 10 32 13 24 22 19  8 19 13 15 12 11 22 15 12
 11 23 20 15 25 19 14 23 10 16 18 13]
player: myles turner
stat: pts
condition: 0 lag
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.13214397430419922

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (15.881637479515486, 5.492388984396015)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.80053698, -2.61846685, -2.43639672, -2.25432658, -2.07225645,
       -1.89018631, -1.70811618, -1.52604604, -1.34397591, -1.16190577,
       -0.97983564, -0.79776551, -0.61569537, -0.43362524, -0.2515551 ,
       -0.06948497,  0.11258517,  0.2946553 ,  0.47672543,  0.65879557,
        0.8408657 ,  1.02293584,  1.20500597,  1.38707611,  1.56914624,
        1.75121637,  1.93328651,  2.11535664,  2.29742678,  2.47949691,
        2.66156705,  2.84363718,  3.02570731,  3.20777745,  3.38984758,
        3.57191772,  3.75398785])]

===Scipy _CDF===

x: [-2.80053698 -2.61846685 -2.43639672 -2.25432658 -2.07225645 -1.89018631
 -1.70811618 -1.52604604 -1.34397591 -1.16190577 -0.97983564 -0.79776551
 -0.61569537 -0.43362524 -0.2515551  -0.06948497  0.11258517  0.2946553
  0.47672543  0.65879557  0.8408657   1.02293584  1.20500597  1.38707611
  1.56914624  1.75121637  1.93328651  2.11535664  2.29742678  2.47949691
  2.66156705  2.84363718  3.02570731  3.20777745  3.38984758  3.57191772
  3.75398785]
args: ()

===Scipy _CDF _Single===

x: -2.8005369836723184
args: ()

Output: cdf single = x

cdf_single: 0.0025508830561768734

===Scipy _CDF _Single===

x: -2.6184668493753813
args: ()

Output: cdf single = x

cdf_single: 0.004416293662469442

===Scipy _CDF _Single===

x: -2.4363967150784447
args: ()

Output: cdf single = x

cdf_single: 0.007417202601801834

===Scipy _CDF _Single===

x: -2.2543265807815076
args: ()

Output: cdf single = x

cdf_single: 0.012087815161149998

===Scipy _CDF _Single===

x: -2.072256446484571
args: ()

Output: cdf single = x

cdf_single: 0.019120765906184747

===Scipy _CDF _Single===

x: -1.8901863121876337
args: ()

Output: cdf single = x

cdf_single: 0.029366523334608787

===Scipy _CDF _Single===

x: -1.7081161778906968
args: ()

Output: cdf single = x

cdf_single: 0.0438073938225385

===Scipy _CDF _Single===

x: -1.5260460435937597
args: ()

Output: cdf single = x

cdf_single: 0.06349919902947153

===Scipy _CDF _Single===

x: -1.3439759092968224
args: ()

Output: cdf single = x

cdf_single: 0.0894780886149671

===Scipy _CDF _Single===

x: -1.1619057749998853
args: ()

Output: cdf single = x

cdf_single: 0.12263687054025756

===Scipy _CDF _Single===

x: -0.9798356407029484
args: ()

Output: cdf single = x

cdf_single: 0.16358362802904045

===Scipy _CDF _Single===

x: -0.7977655064060114
args: ()

Output: cdf single = x

cdf_single: 0.2125032908753079

===Scipy _CDF _Single===

x: -0.6156953721090743
args: ()

Output: cdf single = x

cdf_single: 0.2690477961438428

===Scipy _CDF _Single===

x: -0.43362523781213735
args: ()

Output: cdf single = x

cdf_single: 0.3322803023605384

===Scipy _CDF _Single===

x: -0.25155510351520033
args: ()

Output: cdf single = x

cdf_single: 0.4006924824837729

===Scipy _CDF _Single===

x: -0.06948496921826332
args: ()

Output: cdf single = x

cdf_single: 0.47230179828036295

===Scipy _CDF _Single===

x: 0.11258516507867336
args: ()

Output: cdf single = x

cdf_single: 0.5448202765919654

===Scipy _CDF _Single===

x: 0.29465529937561036
args: ()

Output: cdf single = x

cdf_single: 0.615871393137537

===Scipy _CDF _Single===

x: 0.4767254336725474
args: ()

Output: cdf single = x

cdf_single: 0.6832211752894172

===Scipy _CDF _Single===

x: 0.6587955679694844
args: ()

Output: cdf single = x

cdf_single: 0.7449864731359074

===Scipy _CDF _Single===

x: 0.8408657022664214
args: ()

Output: cdf single = x

cdf_single: 0.7997884127606475

===Scipy _CDF _Single===

x: 1.0229358365633585
args: ()

Output: cdf single = x

cdf_single: 0.8468309079491771

===Scipy _CDF _Single===

x: 1.2050059708602954
args: ()

Output: cdf single = x

cdf_single: 0.8858995015552064

===Scipy _CDF _Single===

x: 1.3870761051572325
args: ()

Output: cdf single = x

cdf_single: 0.9172907213110174

===Scipy _CDF _Single===

x: 1.5691462394541695
args: ()

Output: cdf single = x

cdf_single: 0.9416930662000433

===Scipy _CDF _Single===

x: 1.7512163737511064
args: ()

Output: cdf single = x

cdf_single: 0.9600456769591976

===Scipy _CDF _Single===

x: 1.9332865080480435
args: ()

Output: cdf single = x

cdf_single: 0.973399543527387

===Scipy _CDF _Single===

x: 2.1153566423449806
args: ()

Output: cdf single = x

cdf_single: 0.9828002188939048

===Scipy _CDF _Single===

x: 2.2974267766419176
args: ()

Output: cdf single = x

cdf_single: 0.9892027821358735

===Scipy _CDF _Single===

x: 2.4794969109388547
args: ()

Output: cdf single = x

cdf_single: 0.9934216065143693

===Scipy _CDF _Single===

x: 2.6615670452357914
args: ()

Output: cdf single = x

cdf_single: 0.9961111075215547

===Scipy _CDF _Single===

x: 2.8436371795327284
args: ()

Output: cdf single = x

cdf_single: 0.9977699097536146

===Scipy _CDF _Single===

x: 3.025707313829666
args: ()

Output: cdf single = x

cdf_single: 0.9987597385510242

===Scipy _CDF _Single===

x: 3.207777448126603
args: ()

Output: cdf single = x

cdf_single: 0.9993311751666215

===Scipy _CDF _Single===

x: 3.38984758242354
args: ()

Output: cdf single = x

cdf_single: 0.9996503425339144

===Scipy _CDF _Single===

x: 3.571917716720477
args: ()

Output: cdf single = x

cdf_single: 0.999822811618769

===Scipy _CDF _Single===

x: 3.7539878510174143
args: ()

Output: cdf single = x

cdf_single: 0.9999129783486495
_cdf = _cdfvec(x, *args) = [0.00255088 0.00441629 0.0074172  0.01208782 0.01912077 0.02936652
 0.04380739 0.0634992  0.08947809 0.12263687 0.16358363 0.21250329
 0.2690478  0.3322803  0.40069248 0.4723018  0.54482028 0.61587139
 0.68322118 0.74498647 0.79978841 0.84683091 0.8858995  0.91729072
 0.94169307 0.96004568 0.97339954 0.98280022 0.98920278 0.99342161
 0.99611111 0.99776991 0.99875974 0.99933118 0.99965034 0.99982281
 0.99991298]
prob_less_or_equal: [0.00255088 0.00441629 0.0074172  0.01208782 0.01912077 0.02936652
 0.04380739 0.0634992  0.08947809 0.12263687 0.16358363 0.21250329
 0.2690478  0.3322803  0.40069248 0.4723018  0.54482028 0.61587139
 0.68322118 0.74498647 0.79978841 0.84683091 0.8858995  0.91729072
 0.94169307 0.96004568 0.97339954 0.98280022 0.98920278 0.99342161
 0.99611111 0.99776991 0.99875974 0.999      0.999      0.999
 0.999     ]
cdf_over: [0.99744912 0.99558371 0.9925828  0.98791218 0.98087923 0.97063348
 0.95619261 0.9365008  0.91052191 0.87736313 0.83641637 0.78749671
 0.7309522  0.6677197  0.59930752 0.5276982  0.45517972 0.38412861
 0.31677882 0.25501353 0.20021159 0.15316909 0.1141005  0.08270928
 0.05830693 0.03995432 0.02660046 0.01719978 0.01079722 0.00657839
 0.00388889 0.00223009 0.00124026 0.001      0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [16  5 17  7 19 16 17 22]
player: myles turner
stat: pts
condition: P Siakam PF starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.10572600364685059

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (14.951713313237747, 5.148372672718793)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.80704511, -2.61280897, -2.41857284, -2.22433671, -2.03010057,
       -1.83586444, -1.64162831, -1.44739217, -1.25315604, -1.05891991,
       -0.86468377, -0.67044764, -0.47621151, -0.28197537, -0.08773924,
        0.10649689,  0.30073302,  0.49496916,  0.68920529,  0.88344142,
        1.07767756,  1.27191369,  1.46614982,  1.66038596,  1.85462209,
        2.04885822,  2.24309436,  2.43733049,  2.63156662,  2.82580276,
        3.02003889,  3.21427502,  3.40851116,  3.60274729,  3.79698342,
        3.99121955,  4.18545569])]

===Scipy _CDF===

x: [-2.80704511 -2.61280897 -2.41857284 -2.22433671 -2.03010057 -1.83586444
 -1.64162831 -1.44739217 -1.25315604 -1.05891991 -0.86468377 -0.67044764
 -0.47621151 -0.28197537 -0.08773924  0.10649689  0.30073302  0.49496916
  0.68920529  0.88344142  1.07767756  1.27191369  1.46614982  1.66038596
  1.85462209  2.04885822  2.24309436  2.43733049  2.63156662  2.82580276
  3.02003889  3.21427502  3.40851116  3.60274729  3.79698342  3.99121955
  4.18545569]
args: ()

===Scipy _CDF _Single===

x: -2.8070451056927803
args: ()

Output: cdf single = x

cdf_single: 0.0024999120134431285

===Scipy _CDF _Single===

x: -2.6128089725357935
args: ()

Output: cdf single = x

cdf_single: 0.004490074009951552

===Scipy _CDF _Single===

x: -2.418572839378807
args: ()

Output: cdf single = x

cdf_single: 0.007790762823187284

===Scipy _CDF _Single===

x: -2.22433670622182
args: ()

Output: cdf single = x

cdf_single: 0.01306289941843247

===Scipy _CDF _Single===

x: -2.030100573064833
args: ()

Output: cdf single = x

cdf_single: 0.021173158648894595

===Scipy _CDF _Single===

x: -1.835864439907846
args: ()

Output: cdf single = x

cdf_single: 0.03318885403769421

===Scipy _CDF _Single===

x: -1.6416283067508592
args: ()

Output: cdf single = x

cdf_single: 0.05033352881969548

===Scipy _CDF _Single===

x: -1.4473921735938722
args: ()

Output: cdf single = x

cdf_single: 0.07389355824605151

===Scipy _CDF _Single===

x: -1.253156040436885
args: ()

Output: cdf single = x

cdf_single: 0.10507446228601228

===Scipy _CDF _Single===

x: -1.0589199072798983
args: ()

Output: cdf single = x

cdf_single: 0.14481812860790283

===Scipy _CDF _Single===

x: -0.8646837741229113
args: ()

Output: cdf single = x

cdf_single: 0.19360618882617028

===Scipy _CDF _Single===

x: -0.6704476409659245
args: ()

Output: cdf single = x

cdf_single: 0.2512862366936156

===Scipy _CDF _Single===

x: -0.4762115078089375
args: ()

Output: cdf single = x

cdf_single: 0.31696185092253853

===Scipy _CDF _Single===

x: -0.2819753746519506
args: ()

Output: cdf single = x

cdf_single: 0.38898119631441713

===Scipy _CDF _Single===

x: -0.0877392414949637
args: ()

Output: cdf single = x

cdf_single: 0.4650419648361715

===Scipy _CDF _Single===

x: 0.1064968916620232
args: ()

Output: cdf single = x

cdf_single: 0.5424059392600689

===Scipy _CDF _Single===

x: 0.30073302481900976
args: ()

Output: cdf single = x

cdf_single: 0.6181909581611706

===Scipy _CDF _Single===

x: 0.49496915797599667
args: ()

Output: cdf single = x

cdf_single: 0.6896890542112518

===Scipy _CDF _Single===

x: 0.6892052911329836
args: ()

Output: cdf single = x

cdf_single: 0.7546529562023852

===Scipy _CDF _Single===

x: 0.8834414242899704
args: ()

Output: cdf single = x

cdf_single: 0.8115010911648148

===Scipy _CDF _Single===

x: 1.0776775574469573
args: ()

Output: cdf single = x

cdf_single: 0.8594111613694567

===Scipy _CDF _Single===

x: 1.2719136906039443
args: ()

Output: cdf single = x

cdf_single: 0.8982981065149521

===Scipy _CDF _Single===

x: 1.4661498237609312
args: ()

Output: cdf single = x

cdf_single: 0.9286962626591974

===Scipy _CDF _Single===

x: 1.660385956917918
args: ()

Output: cdf single = x

cdf_single: 0.9515815833033052

===Scipy _CDF _Single===

x: 1.854622090074905
args: ()

Output: cdf single = x

cdf_single: 0.968174894311291

===Scipy _CDF _Single===

x: 2.0488582232318917
args: ()

Output: cdf single = x

cdf_single: 0.9797620097641231

===Scipy _CDF _Single===

x: 2.243094356388879
args: ()

Output: cdf single = x

cdf_single: 0.9875546347324654

===Scipy _CDF _Single===

x: 2.437330489545866
args: ()

Output: cdf single = x

cdf_single: 0.9926019252307794

===Scipy _CDF _Single===

x: 2.6315666227028527
args: ()

Output: cdf single = x

cdf_single: 0.9957503899299631

===Scipy _CDF _Single===

x: 2.8258027558598395
args: ()

Output: cdf single = x

cdf_single: 0.9976418852294799

===Scipy _CDF _Single===

x: 3.0200388890168264
args: ()

Output: cdf single = x

cdf_single: 0.9987362888436707

===Scipy _CDF _Single===

x: 3.2142750221738132
args: ()

Output: cdf single = x

cdf_single: 0.99934612824614

===Scipy _CDF _Single===

x: 3.408511155330801
args: ()

Output: cdf single = x

cdf_single: 0.9996734079275303

===Scipy _CDF _Single===

x: 3.602747288487788
args: ()

Output: cdf single = x

cdf_single: 0.9998425641931129

===Scipy _CDF _Single===

x: 3.7969834216447746
args: ()

Output: cdf single = x

cdf_single: 0.9999267662096818

===Scipy _CDF _Single===

x: 3.9912195548017615
args: ()

Output: cdf single = x

cdf_single: 0.999967132805375

===Scipy _CDF _Single===

x: 4.185455687958749
args: ()

Output: cdf single = x

cdf_single: 0.9999857702707067
_cdf = _cdfvec(x, *args) = [0.00249991 0.00449007 0.00779076 0.0130629  0.02117316 0.03318885
 0.05033353 0.07389356 0.10507446 0.14481813 0.19360619 0.25128624
 0.31696185 0.3889812  0.46504196 0.54240594 0.61819096 0.68968905
 0.75465296 0.81150109 0.85941116 0.89829811 0.92869626 0.95158158
 0.96817489 0.97976201 0.98755463 0.99260193 0.99575039 0.99764189
 0.99873629 0.99934613 0.99967341 0.99984256 0.99992677 0.99996713
 0.99998577]
prob_less_or_equal: [0.00249991 0.00449007 0.00779076 0.0130629  0.02117316 0.03318885
 0.05033353 0.07389356 0.10507446 0.14481813 0.19360619 0.25128624
 0.31696185 0.3889812  0.46504196 0.54240594 0.61819096 0.68968905
 0.75465296 0.81150109 0.85941116 0.89829811 0.92869626 0.95158158
 0.96817489 0.97976201 0.98755463 0.99260193 0.99575039 0.99764189
 0.99873629 0.999      0.999      0.999      0.999      0.999
 0.999     ]
cdf_over: [0.99750009 0.99550993 0.99220924 0.9869371  0.97882684 0.96681115
 0.94966647 0.92610644 0.89492554 0.85518187 0.80639381 0.74871376
 0.68303815 0.6110188  0.53495804 0.45759406 0.38180904 0.31031095
 0.24534704 0.18849891 0.14058884 0.10170189 0.07130374 0.04841842
 0.03182511 0.02023799 0.01244537 0.00739807 0.00424961 0.00235811
 0.00126371 0.001      0.001      0.001      0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [16  5 17  7 19 16 17 22 12 15 12 10 32 13 12 24 24 20 12]
player: myles turner
stat: pts
condition: A Nesmith SF starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.05909395217895508

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (16.055721747796294, 5.4916240122561)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.83262705, -2.65053156, -2.46843606, -2.28634057, -2.10424507,
       -1.92214957, -1.74005408, -1.55795858, -1.37586308, -1.19376759,
       -1.01167209, -0.82957659, -0.6474811 , -0.4653856 , -0.28329011,
       -0.10119461,  0.08090089,  0.26299638,  0.44509188,  0.62718738,
        0.80928287,  0.99137837,  1.17347386,  1.35556936,  1.53766486,
        1.71976035,  1.90185585,  2.08395135,  2.26604684,  2.44814234,
        2.63023783,  2.81233333,  2.99442883,  3.17652432,  3.35861982,
        3.54071532,  3.72281081])]

===Scipy _CDF===

x: [-2.83262705 -2.65053156 -2.46843606 -2.28634057 -2.10424507 -1.92214957
 -1.74005408 -1.55795858 -1.37586308 -1.19376759 -1.01167209 -0.82957659
 -0.6474811  -0.4653856  -0.28329011 -0.10119461  0.08090089  0.26299638
  0.44509188  0.62718738  0.80928287  0.99137837  1.17347386  1.35556936
  1.53766486  1.71976035  1.90185585  2.08395135  2.26604684  2.44814234
  2.63023783  2.81233333  2.99442883  3.17652432  3.35861982  3.54071532
  3.72281081]
args: ()

===Scipy _CDF _Single===

x: -2.832627054051649
args: ()

Output: cdf single = x

cdf_single: 0.00230836074601702

===Scipy _CDF _Single===

x: -2.650531557752518
args: ()

Output: cdf single = x

cdf_single: 0.004018260955271734

===Scipy _CDF _Single===

x: -2.4684360614533873
args: ()

Output: cdf single = x

cdf_single: 0.0067852446579787255

===Scipy _CDF _Single===

x: -2.2863405651542563
args: ()

Output: cdf single = x

cdf_single: 0.011117171235633294

===Scipy _CDF _Single===

x: -2.1042450688551253
args: ()

Output: cdf single = x

cdf_single: 0.017678537500652815

===Scipy _CDF _Single===

x: -1.922149572555994
args: ()

Output: cdf single = x

cdf_single: 0.027293469963980674

===Scipy _CDF _Single===

x: -1.740054076256863
args: ()

Output: cdf single = x

cdf_single: 0.04092476151929788

===Scipy _CDF _Single===

x: -1.5579585799577318
args: ()

Output: cdf single = x

cdf_single: 0.059621533583577586

===Scipy _CDF _Single===

x: -1.3758630836586005
args: ()

Output: cdf single = x

cdf_single: 0.08443201316945302

===Scipy _CDF _Single===

x: -1.1937675873594693
args: ()

Output: cdf single = x

cdf_single: 0.1162844469274177

===Scipy _CDF _Single===

x: -1.0116720910603383
args: ()

Output: cdf single = x

cdf_single: 0.1558474319962139

===Scipy _CDF _Single===

x: -0.8295765947612073
args: ()

Output: cdf single = x

cdf_single: 0.20338910718350456

===Scipy _CDF _Single===

x: -0.6474810984620761
args: ()

Output: cdf single = x

cdf_single: 0.2586603118768134

===Scipy _CDF _Single===

x: -0.4653856021629451
args: ()

Output: cdf single = x

cdf_single: 0.3208276714600964

===Scipy _CDF _Single===

x: -0.28329010586381403
args: ()

Output: cdf single = x

cdf_single: 0.3884772305743576

===Scipy _CDF _Single===

x: -0.10119460956468293
args: ()

Output: cdf single = x

cdf_single: 0.45969798784907073

===Scipy _CDF _Single===

x: 0.08090088673444781
args: ()

Output: cdf single = x

cdf_single: 0.5322396126166189

===Scipy _CDF _Single===

x: 0.2629963830335789
args: ()

Output: cdf single = x

cdf_single: 0.6037233165320308

===Scipy _CDF _Single===

x: 0.44509187933271
args: ()

Output: cdf single = x

cdf_single: 0.6718733214355327

===Scipy _CDF _Single===

x: 0.627187375631841
args: ()

Output: cdf single = x

cdf_single: 0.7347317912455033

===Scipy _CDF _Single===

x: 0.8092828719309721
args: ()

Output: cdf single = x

cdf_single: 0.7908237719789617

===Scipy _CDF _Single===

x: 0.9913783682301032
args: ()

Output: cdf single = x

cdf_single: 0.8392495705456503

===Scipy _CDF _Single===

x: 1.1734738645292342
args: ()

Output: cdf single = x

cdf_single: 0.8796970841967199

===Scipy _CDF _Single===

x: 1.3555693608283654
args: ()

Output: cdf single = x

cdf_single: 0.9123818870456809

===Scipy _CDF _Single===

x: 1.5376648571274965
args: ()

Output: cdf single = x

cdf_single: 0.9379347097411427

===Scipy _CDF _Single===

x: 1.7197603534266275
args: ()

Output: cdf single = x

cdf_single: 0.9572619939662502

===Scipy _CDF _Single===

x: 1.9018558497257585
args: ()

Output: cdf single = x

cdf_single: 0.971404998765327

===Scipy _CDF _Single===

x: 2.0839513460248895
args: ()

Output: cdf single = x

cdf_single: 0.9814177034371605

===Scipy _CDF _Single===

x: 2.2660468423240205
args: ()

Output: cdf single = x

cdf_single: 0.9882757423045828

===Scipy _CDF _Single===

x: 2.448142338623152
args: ()

Output: cdf single = x

cdf_single: 0.9928202542119258

===Scipy _CDF _Single===

x: 2.630237834922283
args: ()

Output: cdf single = x

cdf_single: 0.9957337424142965

===Scipy _CDF _Single===

x: 2.812333331221414
args: ()

Output: cdf single = x

cdf_single: 0.9975408247424505

===Scipy _CDF _Single===

x: 2.9944288275205455
args: ()

Output: cdf single = x

cdf_single: 0.9986252040181428

===Scipy _CDF _Single===

x: 3.1765243238196765
args: ()

Output: cdf single = x

cdf_single: 0.9992547435517383

===Scipy _CDF _Single===

x: 3.358619820118808
args: ()

Output: cdf single = x

cdf_single: 0.9996083362319503

===Scipy _CDF _Single===

x: 3.540715316417939
args: ()

Output: cdf single = x

cdf_single: 0.9998004780558755

===Scipy _CDF _Single===

x: 3.72281081271707
args: ()

Output: cdf single = x

cdf_single: 0.9999014914255159
_cdf = _cdfvec(x, *args) = [0.00230836 0.00401826 0.00678524 0.01111717 0.01767854 0.02729347
 0.04092476 0.05962153 0.08443201 0.11628445 0.15584743 0.20338911
 0.25866031 0.32082767 0.38847723 0.45969799 0.53223961 0.60372332
 0.67187332 0.73473179 0.79082377 0.83924957 0.87969708 0.91238189
 0.93793471 0.95726199 0.971405   0.9814177  0.98827574 0.99282025
 0.99573374 0.99754082 0.9986252  0.99925474 0.99960834 0.99980048
 0.99990149]
prob_less_or_equal: [0.00230836 0.00401826 0.00678524 0.01111717 0.01767854 0.02729347
 0.04092476 0.05962153 0.08443201 0.11628445 0.15584743 0.20338911
 0.25866031 0.32082767 0.38847723 0.45969799 0.53223961 0.60372332
 0.67187332 0.73473179 0.79082377 0.83924957 0.87969708 0.91238189
 0.93793471 0.95726199 0.971405   0.9814177  0.98827574 0.99282025
 0.99573374 0.99754082 0.9986252  0.999      0.999      0.999
 0.999     ]
cdf_over: [0.99769164 0.99598174 0.99321476 0.98888283 0.98232146 0.97270653
 0.95907524 0.94037847 0.91556799 0.88371555 0.84415257 0.79661089
 0.74133969 0.67917233 0.61152277 0.54030201 0.46776039 0.39627668
 0.32812668 0.26526821 0.20917623 0.16075043 0.12030292 0.08761811
 0.06206529 0.04273801 0.028595   0.0185823  0.01172426 0.00717975
 0.00426626 0.00245918 0.0013748  0.001      0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [16  5 17  7 19 16 17 22 15 19 12 12 15 12 10 32 13 12 24 24 20 22 11 19
 15  8 17 19 21 13 15 12 11 22 15 12 11 23 20 15 25 19 14 23 10 16 18 13]
player: myles turner
stat: pts
condition: M Turner C starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.10889983177185059

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (16.104070560289895, 5.56047105642628)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.80624994, -2.62640906, -2.44656818, -2.2667273 , -2.08688642,
       -1.90704555, -1.72720467, -1.54736379, -1.36752291, -1.18768203,
       -1.00784115, -0.82800027, -0.6481594 , -0.46831852, -0.28847764,
       -0.10863676,  0.07120412,  0.251045  ,  0.43088588,  0.61072675,
        0.79056763,  0.97040851,  1.15024939,  1.33009027,  1.50993115,
        1.68977203,  1.8696129 ,  2.04945378,  2.22929466,  2.40913554,
        2.58897642,  2.7688173 ,  2.94865818,  3.12849905,  3.30833993,
        3.48818081,  3.66802169])]

===Scipy _CDF===

x: [-2.80624994 -2.62640906 -2.44656818 -2.2667273  -2.08688642 -1.90704555
 -1.72720467 -1.54736379 -1.36752291 -1.18768203 -1.00784115 -0.82800027
 -0.6481594  -0.46831852 -0.28847764 -0.10863676  0.07120412  0.251045
  0.43088588  0.61072675  0.79056763  0.97040851  1.15024939  1.33009027
  1.50993115  1.68977203  1.8696129   2.04945378  2.22929466  2.40913554
  2.58897642  2.7688173   2.94865818  3.12849905  3.30833993  3.48818081
  3.66802169]
args: ()

===Scipy _CDF _Single===

x: -2.8062499385292448
args: ()

Output: cdf single = x

cdf_single: 0.0025060899161894893

===Scipy _CDF _Single===

x: -2.626409059968373
args: ()

Output: cdf single = x

cdf_single: 0.004314552351151455

===Scipy _CDF _Single===

x: -2.446568181407502
args: ()

Output: cdf single = x

cdf_single: 0.007211175805475611

===Scipy _CDF _Single===

x: -2.2667273028466304
args: ()

Output: cdf single = x

cdf_single: 0.01170344472909581

===Scipy _CDF _Single===

x: -2.0868864242857588
args: ()

Output: cdf single = x

cdf_single: 0.01844920117110478

===Scipy _CDF _Single===

x: -1.9070455457248872
args: ()

Output: cdf single = x

cdf_single: 0.02825734491083322

===Scipy _CDF _Single===

x: -1.7272046671640156
args: ()

Output: cdf single = x

cdf_single: 0.04206545647764908

===Scipy _CDF _Single===

x: -1.547363788603144
args: ()

Output: cdf single = x

cdf_single: 0.06088777397338638

===Scipy _CDF _Single===

x: -1.367522910042272
args: ()

Output: cdf single = x

cdf_single: 0.0857307306400048

===Scipy _CDF _Single===

x: -1.1876820314814005
args: ()

Output: cdf single = x

cdf_single: 0.11747935278271666

===Scipy _CDF _Single===

x: -1.007841152920529
args: ()

Output: cdf single = x

cdf_single: 0.15676536302729738

===Scipy _CDF _Single===

x: -0.8280002743596574
args: ()

Output: cdf single = x

cdf_single: 0.20383517225874107

===Scipy _CDF _Single===

x: -0.6481593957987858
args: ()

Output: cdf single = x

cdf_single: 0.25844093050021805

===Scipy _CDF _Single===

x: -0.4683185172379142
args: ()

Output: cdf single = x

cdf_single: 0.3197784141415395

===Scipy _CDF _Single===

x: -0.2884776386770426
args: ()

Output: cdf single = x

cdf_single: 0.38649057252677965

===Scipy _CDF _Single===

x: -0.10863676011617102
args: ()

Output: cdf single = x

cdf_single: 0.45674530146777625

===Scipy _CDF _Single===

x: 0.07120411844470025
args: ()

Output: cdf single = x

cdf_single: 0.5283823481529347

===Scipy _CDF _Single===

x: 0.2510449970055718
args: ()

Output: cdf single = x

cdf_single: 0.5991103398570977

===Scipy _CDF _Single===

x: 0.4308858755664434
args: ()

Output: cdf single = x

cdf_single: 0.6667243229937482

===Scipy _CDF _Single===

x: 0.610726754127315
args: ()

Output: cdf single = x

cdf_single: 0.7293097544834091

===Scipy _CDF _Single===

x: 0.7905676326881866
args: ()

Output: cdf single = x

cdf_single: 0.785401829559534

===Scipy _CDF _Single===

x: 0.9704085112490581
args: ()

Output: cdf single = x

cdf_single: 0.8340785460640571

===Scipy _CDF _Single===

x: 1.1502493898099297
args: ()

Output: cdf single = x

cdf_single: 0.8749794154051846

===Scipy _CDF _Single===

x: 1.3300902683708014
args: ()

Output: cdf single = x

cdf_single: 0.9082557342427786

===Scipy _CDF _Single===

x: 1.509931146931673
args: ()

Output: cdf single = x

cdf_single: 0.9344695029768089

===Scipy _CDF _Single===

x: 1.6897720254925446
args: ()

Output: cdf single = x

cdf_single: 0.9544642111661811

===Scipy _CDF _Single===

x: 1.8696129040534162
args: ()

Output: cdf single = x

cdf_single: 0.9692312039875547

===Scipy _CDF _Single===

x: 2.049453782614288
args: ()

Output: cdf single = x

cdf_single: 0.9797911186200213

===Scipy _CDF _Single===

x: 2.2292946611751594
args: ()

Output: cdf single = x

cdf_single: 0.9871028471795222

===Scipy _CDF _Single===

x: 2.409135539736031
args: ()

Output: cdf single = x

cdf_single: 0.9920048208938448

===Scipy _CDF _Single===

x: 2.5889764182969026
args: ()

Output: cdf single = x

cdf_single: 0.9951869156839428

===Scipy _CDF _Single===

x: 2.7688172968577742
args: ()

Output: cdf single = x

cdf_single: 0.9971869912825363

===Scipy _CDF _Single===

x: 2.9486581754186463
args: ()

Output: cdf single = x

cdf_single: 0.9984042161572174

===Scipy _CDF _Single===

x: 3.128499053979518
args: ()

Output: cdf single = x

cdf_single: 0.9991214921170117

===Scipy _CDF _Single===

x: 3.3083399325403895
args: ()

Output: cdf single = x

cdf_single: 0.9995307459139919

===Scipy _CDF _Single===

x: 3.488180811101261
args: ()

Output: cdf single = x

cdf_single: 0.9997568404558822

===Scipy _CDF _Single===

x: 3.6680216896621327
args: ()

Output: cdf single = x

cdf_single: 0.9998777827736198
_cdf = _cdfvec(x, *args) = [0.00250609 0.00431455 0.00721118 0.01170344 0.0184492  0.02825734
 0.04206546 0.06088777 0.08573073 0.11747935 0.15676536 0.20383517
 0.25844093 0.31977841 0.38649057 0.4567453  0.52838235 0.59911034
 0.66672432 0.72930975 0.78540183 0.83407855 0.87497942 0.90825573
 0.9344695  0.95446421 0.9692312  0.97979112 0.98710285 0.99200482
 0.99518692 0.99718699 0.99840422 0.99912149 0.99953075 0.99975684
 0.99987778]
prob_less_or_equal: [0.00250609 0.00431455 0.00721118 0.01170344 0.0184492  0.02825734
 0.04206546 0.06088777 0.08573073 0.11747935 0.15676536 0.20383517
 0.25844093 0.31977841 0.38649057 0.4567453  0.52838235 0.59911034
 0.66672432 0.72930975 0.78540183 0.83407855 0.87497942 0.90825573
 0.9344695  0.95446421 0.9692312  0.97979112 0.98710285 0.99200482
 0.99518692 0.99718699 0.99840422 0.999      0.999      0.999
 0.999     ]
cdf_over: [0.99749391 0.99568545 0.99278882 0.98829656 0.9815508  0.97174266
 0.95793454 0.93911223 0.91426927 0.88252065 0.84323464 0.79616483
 0.74155907 0.68022159 0.61350943 0.5432547  0.47161765 0.40088966
 0.33327568 0.27069025 0.21459817 0.16592145 0.12502058 0.09174427
 0.0655305  0.04553579 0.0307688  0.02020888 0.01289715 0.00799518
 0.00481308 0.00281301 0.00159578 0.001      0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [16  7 19 16 19 12 12 15 12 24 24 20 22 15 10]
player: myles turner
stat: pts
condition: A Nembhard PG starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.1312258243560791

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (16.203117145669136, 5.542038400018015)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.83345531, -2.65301629, -2.47257726, -2.29213824, -2.11169922,
       -1.93126019, -1.75082117, -1.57038214, -1.38994312, -1.2095041 ,
       -1.02906507, -0.84862605, -0.66818702, -0.487748  , -0.30730898,
       -0.12686995,  0.05356907,  0.2340081 ,  0.41444712,  0.59488614,
        0.77532517,  0.95576419,  1.13620322,  1.31664224,  1.49708126,
        1.67752029,  1.85795931,  2.03839834,  2.21883736,  2.39927638,
        2.57971541,  2.76015443,  2.94059346,  3.12103248,  3.3014715 ,
        3.48191053,  3.66234955])]

===Scipy _CDF===

x: [-2.83345531 -2.65301629 -2.47257726 -2.29213824 -2.11169922 -1.93126019
 -1.75082117 -1.57038214 -1.38994312 -1.2095041  -1.02906507 -0.84862605
 -0.66818702 -0.487748   -0.30730898 -0.12686995  0.05356907  0.2340081
  0.41444712  0.59488614  0.77532517  0.95576419  1.13620322  1.31664224
  1.49708126  1.67752029  1.85795931  2.03839834  2.21883736  2.39927638
  2.57971541  2.76015443  2.94059346  3.12103248  3.3014715   3.48191053
  3.66234955]
args: ()

===Scipy _CDF _Single===

x: -2.8334553123302233
args: ()

Output: cdf single = x

cdf_single: 0.002302387290752896

===Scipy _CDF _Single===

x: -2.653016288306725
args: ()

Output: cdf single = x

cdf_single: 0.003988801054205017

===Scipy _CDF _Single===

x: -2.472577264283227
args: ()

Output: cdf single = x

cdf_single: 0.006707135673287155

===Scipy _CDF _Single===

x: -2.292138240259729
args: ()

Output: cdf single = x

cdf_single: 0.010948833691191156

===Scipy _CDF _Single===

x: -2.111699216236231
args: ()

Output: cdf single = x

cdf_single: 0.017356128149754648

===Scipy _CDF _Single===

x: -1.9312601922127326
args: ()

Output: cdf single = x

cdf_single: 0.02672544179985687

===Scipy _CDF _Single===

x: -1.7508211681892345
args: ()

Output: cdf single = x

cdf_single: 0.03998835956371681

===Scipy _CDF _Single===

x: -1.5703821441657364
args: ()

Output: cdf single = x

cdf_single: 0.05816311699643459

===Scipy _CDF _Single===

x: -1.3899431201422379
args: ()

Output: cdf single = x

cdf_single: 0.08227307513340436

===Scipy _CDF _Single===

x: -1.2095040961187398
args: ()

Output: cdf single = x

cdf_single: 0.11323461918650524

===Scipy _CDF _Single===

x: -1.0290650720952415
args: ()

Output: cdf single = x

cdf_single: 0.1517245488956878

===Scipy _CDF _Single===

x: -0.8486260480717434
args: ()

Output: cdf single = x

cdf_single: 0.1980447039844083

===Scipy _CDF _Single===

x: -0.6681870240482451
args: ()

Output: cdf single = x

cdf_single: 0.25200710865078063

===Scipy _CDF _Single===

x: -0.48774800002474694
args: ()

Output: cdf single = x

cdf_single: 0.3128641739731024

===Scipy _CDF _Single===

x: -0.3073089760012488
args: ()

Output: cdf single = x

cdf_single: 0.3793041020914811

===Scipy _CDF _Single===

x: -0.1268699519777506
args: ()

Output: cdf single = x

cdf_single: 0.4495216646372352

===Scipy _CDF _Single===

x: 0.053569072045747256
args: ()

Output: cdf single = x

cdf_single: 0.5213607509755864

===Scipy _CDF _Single===

x: 0.23400809606924544
args: ()

Output: cdf single = x

cdf_single: 0.5925106533020522

===Scipy _CDF _Single===

x: 0.4144471200927436
args: ()

Output: cdf single = x

cdf_single: 0.6607266568345092

===Scipy _CDF _Single===

x: 0.5948861441162417
args: ()

Output: cdf single = x

cdf_single: 0.7240402101231623

===Scipy _CDF _Single===

x: 0.77532516813974
args: ()

Output: cdf single = x

cdf_single: 0.780926229472202

===Scipy _CDF _Single===

x: 0.9557641921632382
args: ()

Output: cdf single = x

cdf_single: 0.8304043085081528

===Scipy _CDF _Single===

x: 1.1362032161867364
args: ()

Output: cdf single = x

cdf_single: 0.8720642375872386

===Scipy _CDF _Single===

x: 1.3166422402102345
args: ()

Output: cdf single = x

cdf_single: 0.9060207135273456

===Scipy _CDF _Single===

x: 1.4970812642337328
args: ()

Output: cdf single = x

cdf_single: 0.9328139428997385

===Scipy _CDF _Single===

x: 1.6775202882572309
args: ()

Output: cdf single = x

cdf_single: 0.9532796072241024

===Scipy _CDF _Single===

x: 1.857959312280729
args: ()

Output: cdf single = x

cdf_single: 0.9684126037502575

===Scipy _CDF _Single===

x: 2.038398336304227
args: ()

Output: cdf single = x

cdf_single: 0.9792449437249469

===Scipy _CDF _Single===

x: 2.218837360327725
args: ()

Output: cdf single = x

cdf_single: 0.9867511043545777

===Scipy _CDF _Single===

x: 2.3992763843512237
args: ()

Output: cdf single = x

cdf_single: 0.9917862449646443

===Scipy _CDF _Single===

x: 2.579715408374722
args: ()

Output: cdf single = x

cdf_single: 0.9950559116330997

===Scipy _CDF _Single===

x: 2.76015443239822
args: ()

Output: cdf single = x

cdf_single: 0.9971112978118228

===Scipy _CDF _Single===

x: 2.940593456421719
args: ()

Output: cdf single = x

cdf_single: 0.9983620791745078

===Scipy _CDF _Single===

x: 3.121032480445217
args: ()

Output: cdf single = x

cdf_single: 0.9990989092222443

===Scipy _CDF _Single===

x: 3.301471504468715
args: ()

Output: cdf single = x

cdf_single: 0.9995191044801743

===Scipy _CDF _Single===

x: 3.481910528492213
args: ()

Output: cdf single = x

cdf_single: 0.9997510749968722

===Scipy _CDF _Single===

x: 3.6623495525157113
args: ()

Output: cdf single = x

cdf_single: 0.9998750437361686
_cdf = _cdfvec(x, *args) = [0.00230239 0.0039888  0.00670714 0.01094883 0.01735613 0.02672544
 0.03998836 0.05816312 0.08227308 0.11323462 0.15172455 0.1980447
 0.25200711 0.31286417 0.3793041  0.44952166 0.52136075 0.59251065
 0.66072666 0.72404021 0.78092623 0.83040431 0.87206424 0.90602071
 0.93281394 0.95327961 0.9684126  0.97924494 0.9867511  0.99178624
 0.99505591 0.9971113  0.99836208 0.99909891 0.9995191  0.99975107
 0.99987504]
prob_less_or_equal: [0.00230239 0.0039888  0.00670714 0.01094883 0.01735613 0.02672544
 0.03998836 0.05816312 0.08227308 0.11323462 0.15172455 0.1980447
 0.25200711 0.31286417 0.3793041  0.44952166 0.52136075 0.59251065
 0.66072666 0.72404021 0.78092623 0.83040431 0.87206424 0.90602071
 0.93281394 0.95327961 0.9684126  0.97924494 0.9867511  0.99178624
 0.99505591 0.9971113  0.99836208 0.999      0.999      0.999
 0.999     ]
cdf_over: [0.99769761 0.9960112  0.99329286 0.98905117 0.98264387 0.97327456
 0.96001164 0.94183688 0.91772692 0.88676538 0.84827545 0.8019553
 0.74799289 0.68713583 0.6206959  0.55047834 0.47863925 0.40748935
 0.33927334 0.27595979 0.21907377 0.16959569 0.12793576 0.09397929
 0.06718606 0.04672039 0.0315874  0.02075506 0.0132489  0.00821376
 0.00494409 0.0028887  0.00163792 0.001      0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [16  5 17 22 12 10 32 13 12 24 24 20 22 11 19  8 17 19 21 13 12 11 22 15
 12 11 23 20 15 25 19 14 23 16 18 13]
player: myles turner
stat: pts
condition: T Haliburton PG starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.13376808166503906

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (16.836573192659984, 5.758702842380663)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.83684966, -2.66319944, -2.48954922, -2.31589901, -2.14224879,
       -1.96859857, -1.79494835, -1.62129814, -1.44764792, -1.2739977 ,
       -1.10034749, -0.92669727, -0.75304705, -0.57939683, -0.40574662,
       -0.2320964 , -0.05844618,  0.11520404,  0.28885425,  0.46250447,
        0.63615469,  0.8098049 ,  0.98345512,  1.15710534,  1.33075556,
        1.50440577,  1.67805599,  1.85170621,  2.02535643,  2.19900664,
        2.37265686,  2.54630708,  2.7199573 ,  2.89360751,  3.06725773,
        3.24090795,  3.41455816])]

===Scipy _CDF===

x: [-2.83684966 -2.66319944 -2.48954922 -2.31589901 -2.14224879 -1.96859857
 -1.79494835 -1.62129814 -1.44764792 -1.2739977  -1.10034749 -0.92669727
 -0.75304705 -0.57939683 -0.40574662 -0.2320964  -0.05844618  0.11520404
  0.28885425  0.46250447  0.63615469  0.8098049   0.98345512  1.15710534
  1.33075556  1.50440577  1.67805599  1.85170621  2.02535643  2.19900664
  2.37265686  2.54630708  2.7199573   2.89360751  3.06725773  3.24090795
  3.41455816]
args: ()

===Scipy _CDF _Single===

x: -2.836849658647502
args: ()

Output: cdf single = x

cdf_single: 0.0022780529995494315

===Scipy _CDF _Single===

x: -2.663199441338043
args: ()

Output: cdf single = x

cdf_single: 0.0038700761682931846

===Scipy _CDF _Single===

x: -2.4895492240285844
args: ()

Output: cdf single = x

cdf_single: 0.006395260267670931

===Scipy _CDF _Single===

x: -2.3158990067191256
args: ()

Output: cdf single = x

cdf_single: 0.010281891790277286

===Scipy _CDF _Single===

x: -2.142248789409667
args: ()

Output: cdf single = x

cdf_single: 0.01608673366602213

===Scipy _CDF _Single===

x: -1.9685985721002082
args: ()

Output: cdf single = x

cdf_single: 0.024499603341001385

===Scipy _CDF _Single===

x: -1.7949483547907494
args: ()

Output: cdf single = x

cdf_single: 0.036330964367138834

===Scipy _CDF _Single===

x: -1.6212981374812907
args: ()

Output: cdf single = x

cdf_single: 0.05247685714599166

===Scipy _CDF _Single===

x: -1.4476479201718317
args: ()

Output: cdf single = x

cdf_single: 0.07385777100799279

===Scipy _CDF _Single===

x: -1.273997702862373
args: ()

Output: cdf single = x

cdf_single: 0.10133211513908534

===Scipy _CDF _Single===

x: -1.100347485552914
args: ()

Output: cdf single = x

cdf_single: 0.13559037492952636

===Scipy _CDF _Single===

x: -0.9266972682434554
args: ()

Output: cdf single = x

cdf_single: 0.1770418681390943

===Scipy _CDF _Single===

x: -0.7530470509339967
args: ()

Output: cdf single = x

cdf_single: 0.22571082037080464

===Scipy _CDF _Single===

x: -0.5793968336245379
args: ()

Output: cdf single = x

cdf_single: 0.2811607200690768

===Scipy _CDF _Single===

x: -0.40574661631507913
args: ()

Output: cdf single = x

cdf_single: 0.34246439327942674

===Scipy _CDF _Single===

x: -0.2320963990056204
args: ()

Output: cdf single = x

cdf_single: 0.40823157085001527

===Scipy _CDF _Single===

x: -0.058446181696161954
args: ()

Output: cdf single = x

cdf_single: 0.4766966149716246

===Scipy _CDF _Single===

x: 0.1152040356132968
args: ()

Output: cdf single = x

cdf_single: 0.5458582999899583

===Scipy _CDF _Single===

x: 0.28885425292275557
args: ()

Output: cdf single = x

cdf_single: 0.6136535435249694

===Scipy _CDF _Single===

x: 0.4625044702322143
args: ()

Output: cdf single = x

cdf_single: 0.6781402013087112

===Scipy _CDF _Single===

x: 0.636154687541673
args: ()

Output: cdf single = x

cdf_single: 0.7376621980737994

===Scipy _CDF _Single===

x: 0.8098049048511318
args: ()

Output: cdf single = x

cdf_single: 0.790973843420945

===Scipy _CDF _Single===

x: 0.9834551221605906
args: ()

Output: cdf single = x

cdf_single: 0.8373082538224423

===Scipy _CDF _Single===

x: 1.1571053394700492
args: ()

Output: cdf single = x

cdf_single: 0.876385337275348

===Scipy _CDF _Single===

x: 1.330755556779508
args: ()

Output: cdf single = x

cdf_single: 0.9083652720281682

===Scipy _CDF _Single===

x: 1.504405774088967
args: ()

Output: cdf single = x

cdf_single: 0.9337615407735242

===Scipy _CDF _Single===

x: 1.6780559913984257
args: ()

Output: cdf single = x

cdf_single: 0.9533319155280635

===Scipy _CDF _Single===

x: 1.8517062087078844
args: ()

Output: cdf single = x

cdf_single: 0.9679659890078517

===Scipy _CDF _Single===

x: 2.025356426017343
args: ()

Output: cdf single = x

cdf_single: 0.9785846108182787

===Scipy _CDF _Single===

x: 2.199006643326802
args: ()

Output: cdf single = x

cdf_single: 0.9860612750354069

===Scipy _CDF _Single===

x: 2.3726568606362606
args: ()

Output: cdf single = x

cdf_single: 0.9911696688044972

===Scipy _CDF _Single===

x: 2.5463070779457193
args: ()

Output: cdf single = x

cdf_single: 0.9945565314627839

===Scipy _CDF _Single===

x: 2.7199572952551785
args: ()

Output: cdf single = x

cdf_single: 0.9967354826145216

===Scipy _CDF _Single===

x: 2.8936075125646377
args: ()

Output: cdf single = x

cdf_single: 0.9980957805807509

===Scipy _CDF _Single===

x: 3.0672577298740964
args: ()

Output: cdf single = x

cdf_single: 0.9989198374869122

===Scipy _CDF _Single===

x: 3.240907947183555
args: ()

Output: cdf single = x

cdf_single: 0.9994042517360432

===Scipy _CDF _Single===

x: 3.414558164493014
args: ()

Output: cdf single = x

cdf_single: 0.9996805722420292
_cdf = _cdfvec(x, *args) = [0.00227805 0.00387008 0.00639526 0.01028189 0.01608673 0.0244996
 0.03633096 0.05247686 0.07385777 0.10133212 0.13559037 0.17704187
 0.22571082 0.28116072 0.34246439 0.40823157 0.47669661 0.5458583
 0.61365354 0.6781402  0.7376622  0.79097384 0.83730825 0.87638534
 0.90836527 0.93376154 0.95333192 0.96796599 0.97858461 0.98606128
 0.99116967 0.99455653 0.99673548 0.99809578 0.99891984 0.99940425
 0.99968057]
prob_less_or_equal: [0.00227805 0.00387008 0.00639526 0.01028189 0.01608673 0.0244996
 0.03633096 0.05247686 0.07385777 0.10133212 0.13559037 0.17704187
 0.22571082 0.28116072 0.34246439 0.40823157 0.47669661 0.5458583
 0.61365354 0.6781402  0.7376622  0.79097384 0.83730825 0.87638534
 0.90836527 0.93376154 0.95333192 0.96796599 0.97858461 0.98606128
 0.99116967 0.99455653 0.99673548 0.99809578 0.99891984 0.999
 0.999     ]
cdf_over: [0.99772195 0.99612992 0.99360474 0.98971811 0.98391327 0.9755004
 0.96366904 0.94752314 0.92614223 0.89866788 0.86440963 0.82295813
 0.77428918 0.71883928 0.65753561 0.59176843 0.52330339 0.4541417
 0.38634646 0.3218598  0.2623378  0.20902616 0.16269175 0.12361466
 0.09163473 0.06623846 0.04666808 0.03203401 0.02141539 0.01393872
 0.00883033 0.00544347 0.00326452 0.00190422 0.00108016 0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [16 12 15 12 32 13 12 24 24 20 11 23 20 15 25 19 14 23 10 16 18 13]
player: myles turner
stat: pts
condition: B Hield SG bench
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.09114408493041992

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (17.59429927148144, 6.017874378850327)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.84058775, -2.67441612, -2.50824449, -2.34207286, -2.17590123,
       -2.0097296 , -1.84355797, -1.67738634, -1.51121471, -1.34504308,
       -1.17887145, -1.01269982, -0.84652818, -0.68035655, -0.51418492,
       -0.34801329, -0.18184166, -0.01567003,  0.1505016 ,  0.31667323,
        0.48284486,  0.64901649,  0.81518812,  0.98135976,  1.14753139,
        1.31370302,  1.47987465,  1.64604628,  1.81221791,  1.97838954,
        2.14456117,  2.3107328 ,  2.47690443,  2.64307606,  2.8092477 ,
        2.97541933,  3.14159096])]

===Scipy _CDF===

x: [-2.84058775 -2.67441612 -2.50824449 -2.34207286 -2.17590123 -2.0097296
 -1.84355797 -1.67738634 -1.51121471 -1.34504308 -1.17887145 -1.01269982
 -0.84652818 -0.68035655 -0.51418492 -0.34801329 -0.18184166 -0.01567003
  0.1505016   0.31667323  0.48284486  0.64901649  0.81518812  0.98135976
  1.14753139  1.31370302  1.47987465  1.64604628  1.81221791  1.97838954
  2.14456117  2.3107328   2.47690443  2.64307606  2.8092477   2.97541933
  3.14159096]
args: ()

===Scipy _CDF _Single===

x: -2.840587754965265
args: ()

Output: cdf single = x

cdf_single: 0.0022515240815573828

===Scipy _CDF _Single===

x: -2.6744161240793702
args: ()

Output: cdf single = x

cdf_single: 0.0037429749769776915

===Scipy _CDF _Single===

x: -2.5082444931934758
args: ()

Output: cdf single = x

cdf_single: 0.006066634088953102

===Scipy _CDF _Single===

x: -2.342072862307581
args: ()

Output: cdf single = x

cdf_single: 0.009588485353018684

===Scipy _CDF _Single===

x: -2.175901231421686
args: ()

Output: cdf single = x

cdf_single: 0.014781323357815864

===Scipy _CDF _Single===

x: -2.0097296005357914
args: ()

Output: cdf single = x

cdf_single: 0.022229907649361714

===Scipy _CDF _Single===

x: -1.8435579696498965
args: ()

Output: cdf single = x

cdf_single: 0.03262379305994949

===Scipy _CDF _Single===

x: -1.6773863387640016
args: ()

Output: cdf single = x

cdf_single: 0.046733479515470966

===Scipy _CDF _Single===

x: -1.5112147078781064
args: ()

Output: cdf single = x

cdf_single: 0.06536687815413812

===Scipy _CDF _Single===

x: -1.3450430769922117
args: ()

Output: cdf single = x

cdf_single: 0.08930566194907609

===Scipy _CDF _Single===

x: -1.178871446106317
args: ()

Output: cdf single = x

cdf_single: 0.11922468465606052

===Scipy _CDF _Single===

x: -1.012699815220422
args: ()

Output: cdf single = x

cdf_single: 0.1556017830793721

===Scipy _CDF _Single===

x: -0.8465281843345274
args: ()

Output: cdf single = x

cdf_single: 0.1986290789079174

===Scipy _CDF _Single===

x: -0.6803565534486326
args: ()

Output: cdf single = x

cdf_single: 0.24813936184631322

===Scipy _CDF _Single===

x: -0.5141849225627377
args: ()

Output: cdf single = x

cdf_single: 0.3035613540612808

===Scipy _CDF _Single===

x: -0.3480132916768429
args: ()

Output: cdf single = x

cdf_single: 0.3639151007027468

===Scipy _CDF _Single===

x: -0.1818416607909484
args: ()

Output: cdf single = x

cdf_single: 0.42785349447465715

===Scipy _CDF _Single===

x: -0.0156700299050536
args: ()

Output: cdf single = x

cdf_single: 0.4937488183662048

===Scipy _CDF _Single===

x: 0.1505016009808412
args: ()

Output: cdf single = x

cdf_single: 0.5598155561375072

===Scipy _CDF _Single===

x: 0.316673231866736
args: ()

Output: cdf single = x

cdf_single: 0.6242542189565418

===Scipy _CDF _Single===

x: 0.4828448627526308
args: ()

Output: cdf single = x

cdf_single: 0.6853970531040255

===Scipy _CDF _Single===

x: 0.6490164936385256
args: ()

Output: cdf single = x

cdf_single: 0.7418361423213878

===Scipy _CDF _Single===

x: 0.8151881245244204
args: ()

Output: cdf single = x

cdf_single: 0.7925176827901586

===Scipy _CDF _Single===

x: 0.9813597554103152
args: ()

Output: cdf single = x

cdf_single: 0.8367923176044202

===Scipy _CDF _Single===

x: 1.14753138629621
args: ()

Output: cdf single = x

cdf_single: 0.8744189654845432

===Scipy _CDF _Single===

x: 1.313703017182105
args: ()

Output: cdf single = x

cdf_single: 0.9055269173887665

===Scipy _CDF _Single===

x: 1.4798746480679996
args: ()

Output: cdf single = x

cdf_single: 0.9305466487419233

===Scipy _CDF _Single===

x: 1.6460462789538943
args: ()

Output: cdf single = x

cdf_single: 0.9501228843260172

===Scipy _CDF _Single===

x: 1.8122179098397893
args: ()

Output: cdf single = x

cdf_single: 0.9650237336066839

===Scipy _CDF _Single===

x: 1.978389540725684
args: ()

Output: cdf single = x

cdf_single: 0.9760576106240356

===Scipy _CDF _Single===

x: 2.1445611716115787
args: ()

Output: cdf single = x

cdf_single: 0.984006025204938

===Scipy _CDF _Single===

x: 2.3107328024974736
args: ()

Output: cdf single = x

cdf_single: 0.9895761908983991

===Scipy _CDF _Single===

x: 2.476904433383369
args: ()

Output: cdf single = x

cdf_single: 0.9933736308973322

===Scipy _CDF _Single===

x: 2.643076064269264
args: ()

Output: cdf single = x

cdf_single: 0.9958921711812897

===Scipy _CDF _Single===

x: 2.809247695155159
args: ()

Output: cdf single = x

cdf_single: 0.9975171287569597

===Scipy _CDF _Single===

x: 2.9754193260410533
args: ()

Output: cdf single = x

cdf_single: 0.9985370585148285

===Scipy _CDF _Single===

x: 3.1415909569269482
args: ()

Output: cdf single = x

cdf_single: 0.9991598369637495
_cdf = _cdfvec(x, *args) = [0.00225152 0.00374297 0.00606663 0.00958849 0.01478132 0.02222991
 0.03262379 0.04673348 0.06536688 0.08930566 0.11922468 0.15560178
 0.19862908 0.24813936 0.30356135 0.3639151  0.42785349 0.49374882
 0.55981556 0.62425422 0.68539705 0.74183614 0.79251768 0.83679232
 0.87441897 0.90552692 0.93054665 0.95012288 0.96502373 0.97605761
 0.98400603 0.98957619 0.99337363 0.99589217 0.99751713 0.99853706
 0.99915984]
prob_less_or_equal: [0.00225152 0.00374297 0.00606663 0.00958849 0.01478132 0.02222991
 0.03262379 0.04673348 0.06536688 0.08930566 0.11922468 0.15560178
 0.19862908 0.24813936 0.30356135 0.3639151  0.42785349 0.49374882
 0.55981556 0.62425422 0.68539705 0.74183614 0.79251768 0.83679232
 0.87441897 0.90552692 0.93054665 0.95012288 0.96502373 0.97605761
 0.98400603 0.98957619 0.99337363 0.99589217 0.99751713 0.99853706
 0.999     ]
cdf_over: [0.99774848 0.99625703 0.99393337 0.99041151 0.98521868 0.97777009
 0.96737621 0.95326652 0.93463312 0.91069434 0.88077532 0.84439822
 0.80137092 0.75186064 0.69643865 0.6360849  0.57214651 0.50625118
 0.44018444 0.37574578 0.31460295 0.25816386 0.20748232 0.16320768
 0.12558103 0.09447308 0.06945335 0.04987712 0.03497627 0.02394239
 0.01599397 0.01042381 0.00662637 0.00410783 0.00248287 0.00146294
 0.001     ]

===Test Distribute All Probs===

cond_data: [16 19 16 15 19 12 12 15 12 10 32 13 12 24 24 20 22 11 19 15  8 17 19 21
 15 12 11 22 12 11 23 15 19 10 13]
player: myles turner
stat: pts
condition: I Jackson SF bench
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.12461376190185547

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (16.174541864009537, 5.532264743461903)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.83329587, -2.65253807, -2.47178027, -2.29102247, -2.11026468,
       -1.92950688, -1.74874908, -1.56799128, -1.38723348, -1.20647568,
       -1.02571788, -0.84496008, -0.66420228, -0.48344448, -0.30268668,
       -0.12192888,  0.05882892,  0.23958671,  0.42034451,  0.60110231,
        0.78186011,  0.96261791,  1.14337571,  1.32413351,  1.50489131,
        1.68564911,  1.86640691,  2.04716471,  2.22792251,  2.40868031,
        2.58943811,  2.7701959 ,  2.9509537 ,  3.1317115 ,  3.3124693 ,
        3.4932271 ,  3.6739849 ])]

===Scipy _CDF===

x: [-2.83329587 -2.65253807 -2.47178027 -2.29102247 -2.11026468 -1.92950688
 -1.74874908 -1.56799128 -1.38723348 -1.20647568 -1.02571788 -0.84496008
 -0.66420228 -0.48344448 -0.30268668 -0.12192888  0.05882892  0.23958671
  0.42034451  0.60110231  0.78186011  0.96261791  1.14337571  1.32413351
  1.50489131  1.68564911  1.86640691  2.04716471  2.22792251  2.40868031
  2.58943811  2.7701959   2.9509537   3.1317115   3.3124693   3.4932271
  3.6739849 ]
args: ()

===Scipy _CDF _Single===

x: -2.83329587264129
args: ()

Output: cdf single = x

cdf_single: 0.0023035360915062654

===Scipy _CDF _Single===

x: -2.6525380733725887
args: ()

Output: cdf single = x

cdf_single: 0.0039944558750212395

===Scipy _CDF _Single===

x: -2.471780274103888
args: ()

Output: cdf single = x

cdf_single: 0.006722106000039506

===Scipy _CDF _Single===

x: -2.2910224748351866
args: ()

Output: cdf single = x

cdf_single: 0.01098105691237942

===Scipy _CDF _Single===

x: -2.1102646755664853
args: ()

Output: cdf single = x

cdf_single: 0.01741778222691294

===Scipy _CDF _Single===

x: -1.929506876297784
args: ()

Output: cdf single = x

cdf_single: 0.02683398362717454

===Scipy _CDF _Single===

x: -1.7487490770290828
args: ()

Output: cdf single = x

cdf_single: 0.04016720133339108

===Scipy _CDF _Single===

x: -1.5679912777603815
args: ()

Output: cdf single = x

cdf_single: 0.058441583962926535

===Scipy _CDF _Single===

x: -1.3872334784916798
args: ()

Output: cdf single = x

cdf_single: 0.08268528998220967

===Scipy _CDF _Single===

x: -1.2064756792229785
args: ()

Output: cdf single = x

cdf_single: 0.11381706557439634

===Scipy _CDF _Single===

x: -1.0257178799542772
args: ()

Output: cdf single = x

cdf_single: 0.15251229196041627

===Scipy _CDF _Single===

x: -0.8449600806855759
args: ()

Output: cdf single = x

cdf_single: 0.19906656379883675

===Scipy _CDF _Single===

x: -0.6642022814168745
args: ()

Output: cdf single = x

cdf_single: 0.25328042674625256

===Scipy _CDF _Single===

x: -0.4834444821481733
args: ()

Output: cdf single = x

cdf_single: 0.314390085297685

===Scipy _CDF _Single===

x: -0.302686682879472
args: ()

Output: cdf single = x

cdf_single: 0.3810643237616045

===Scipy _CDF _Single===

x: -0.12192888361077069
args: ()

Output: cdf single = x

cdf_single: 0.4514776702363551

===Scipy _CDF _Single===

x: 0.05882891565793029
args: ()

Output: cdf single = x

cdf_single: 0.5234558115128329

===Scipy _CDF _Single===

x: 0.23958671492663158
args: ()

Output: cdf single = x

cdf_single: 0.5946746675960711

===Scipy _CDF _Single===

x: 0.4203445141953329
args: ()

Output: cdf single = x

cdf_single: 0.6628831022213063

===Scipy _CDF _Single===

x: 0.6011023134640342
args: ()

Output: cdf single = x

cdf_single: 0.7261140786988045

===Scipy _CDF _Single===

x: 0.7818601127327355
args: ()

Output: cdf single = x

cdf_single: 0.7828516056867026

===Scipy _CDF _Single===

x: 0.9626179120014368
args: ()

Output: cdf single = x

cdf_single: 0.8321303473908873

===Scipy _CDF _Single===

x: 1.1433757112701382
args: ()

Output: cdf single = x

cdf_single: 0.8735586837530337

===Scipy _CDF _Single===

x: 1.3241335105388394
args: ()

Output: cdf single = x

cdf_single: 0.9072706459910878

===Scipy _CDF _Single===

x: 1.5048913098075407
args: ()

Output: cdf single = x

cdf_single: 0.9338239885554003

===Scipy _CDF _Single===

x: 1.685649109076242
args: ()

Output: cdf single = x

cdf_single: 0.9540682978232088

===Scipy _CDF _Single===

x: 1.8664069083449433
args: ()

Output: cdf single = x

cdf_single: 0.9690077713383731

===Scipy _CDF _Single===

x: 2.0471647076136446
args: ()

Output: cdf single = x

cdf_single: 0.9796790423224407

===Scipy _CDF _Single===

x: 2.227922506882346
args: ()

Output: cdf single = x

cdf_single: 0.9870571584829348

===Scipy _CDF _Single===

x: 2.408680306151047
args: ()

Output: cdf single = x

cdf_single: 0.9919948421872872

===Scipy _CDF _Single===

x: 2.5894381054197484
args: ()

Output: cdf single = x

cdf_single: 0.9951933648564775

===Scipy _CDF _Single===

x: 2.7701959046884497
args: ()

Output: cdf single = x

cdf_single: 0.9971988707090526

===Scipy _CDF _Single===

x: 2.950953703957152
args: ()

Output: cdf single = x

cdf_single: 0.9984160280160519

===Scipy _CDF _Single===

x: 3.131711503225853
args: ()

Output: cdf single = x

cdf_single: 0.999131047213276

===Scipy _CDF _Single===

x: 3.3124693024945544
args: ()

Output: cdf single = x

cdf_single: 0.9995376186294916

===Scipy _CDF _Single===

x: 3.4932271017632557
args: ()

Output: cdf single = x

cdf_single: 0.9997613897633152

===Scipy _CDF _Single===

x: 3.673984901031957
args: ()

Output: cdf single = x

cdf_single: 0.999880601575108
_cdf = _cdfvec(x, *args) = [0.00230354 0.00399446 0.00672211 0.01098106 0.01741778 0.02683398
 0.0401672  0.05844158 0.08268529 0.11381707 0.15251229 0.19906656
 0.25328043 0.31439009 0.38106432 0.45147767 0.52345581 0.59467467
 0.6628831  0.72611408 0.78285161 0.83213035 0.87355868 0.90727065
 0.93382399 0.9540683  0.96900777 0.97967904 0.98705716 0.99199484
 0.99519336 0.99719887 0.99841603 0.99913105 0.99953762 0.99976139
 0.9998806 ]
prob_less_or_equal: [0.00230354 0.00399446 0.00672211 0.01098106 0.01741778 0.02683398
 0.0401672  0.05844158 0.08268529 0.11381707 0.15251229 0.19906656
 0.25328043 0.31439009 0.38106432 0.45147767 0.52345581 0.59467467
 0.6628831  0.72611408 0.78285161 0.83213035 0.87355868 0.90727065
 0.93382399 0.9540683  0.96900777 0.97967904 0.98705716 0.99199484
 0.99519336 0.99719887 0.99841603 0.999      0.999      0.999
 0.999     ]
cdf_over: [0.99769646 0.99600554 0.99327789 0.98901894 0.98258222 0.97316602
 0.9598328  0.94155842 0.91731471 0.88618293 0.84748771 0.80093344
 0.74671957 0.68560991 0.61893568 0.54852233 0.47654419 0.40532533
 0.3371169  0.27388592 0.21714839 0.16786965 0.12644132 0.09272935
 0.06617601 0.0459317  0.03099223 0.02032096 0.01294284 0.00800516
 0.00480664 0.00280113 0.00158397 0.001      0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [16  7 19 16 17 22 12 12 15 12 10 32 13 12 24 24 20 22 11 19 15  8 17 19
 21 13 15 12 11 22 15 12]
player: myles turner
stat: pts
condition: B Mathurin SG bench
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.06494593620300293

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (16.03093376220599, 5.514813825640488)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.81622105, -2.63489126, -2.45356148, -2.27223169, -2.09090191,
       -1.90957213, -1.72824234, -1.54691256, -1.36558277, -1.18425299,
       -1.00292321, -0.82159342, -0.64026364, -0.45893385, -0.27760407,
       -0.09627429,  0.0850555 ,  0.26638528,  0.44771507,  0.62904485,
        0.81037463,  0.99170442,  1.1730342 ,  1.35436399,  1.53569377,
        1.71702355,  1.89835334,  2.07968312,  2.26101291,  2.44234269,
        2.62367247,  2.80500226,  2.98633204,  3.16766183,  3.34899161,
        3.53032139,  3.71165118])]

===Scipy _CDF===

x: [-2.81622105 -2.63489126 -2.45356148 -2.27223169 -2.09090191 -1.90957213
 -1.72824234 -1.54691256 -1.36558277 -1.18425299 -1.00292321 -0.82159342
 -0.64026364 -0.45893385 -0.27760407 -0.09627429  0.0850555   0.26638528
  0.44771507  0.62904485  0.81037463  0.99170442  1.1730342   1.35436399
  1.53569377  1.71702355  1.89835334  2.07968312  2.26101291  2.44234269
  2.62367247  2.80500226  2.98633204  3.16766183  3.34899161  3.53032139
  3.71165118]
args: ()

===Scipy _CDF _Single===

x: -2.816221046302
args: ()

Output: cdf single = x

cdf_single: 0.0024296110431183938

===Scipy _CDF _Single===

x: -2.6348912622663874
args: ()

Output: cdf single = x

cdf_single: 0.004208212035152149

===Scipy _CDF _Single===

x: -2.453561478230775
args: ()

Output: cdf single = x

cdf_single: 0.007072467917191596

===Scipy _CDF _Single===

x: -2.2722316941951624
args: ()

Output: cdf single = x

cdf_single: 0.011536259962254115

===Scipy _CDF _Single===

x: -2.09090191015955
args: ()

Output: cdf single = x

cdf_single: 0.018268428923343506

===Scipy _CDF _Single===

x: -1.9095721261239373
args: ()

Output: cdf single = x

cdf_single: 0.028094163438400634

===Scipy _CDF _Single===

x: -1.7282423420883248
args: ()

Output: cdf single = x

cdf_single: 0.04197239269050872

===Scipy _CDF _Single===

x: -1.5469125580527123
args: ()

Output: cdf single = x

cdf_single: 0.060942166220211945

===Scipy _CDF _Single===

x: -1.3655827740170994
args: ()

Output: cdf single = x

cdf_single: 0.08603497817608208

===Scipy _CDF _Single===

x: -1.1842529899814869
args: ()

Output: cdf single = x

cdf_single: 0.11815646583748787

===Scipy _CDF _Single===

x: -1.0029232059458741
args: ()

Output: cdf single = x

cdf_single: 0.15794895750535554

===Scipy _CDF _Single===

x: -0.8215934219102616
args: ()

Output: cdf single = x

cdf_single: 0.20565416718901808

===Scipy _CDF _Single===

x: -0.640263637874649
args: ()

Output: cdf single = x

cdf_single: 0.26100060819891335

===Scipy _CDF _Single===

x: -0.4589338538390365
args: ()

Output: cdf single = x

cdf_single: 0.3231408335251318

===Scipy _CDF _Single===

x: -0.2776040698034239
args: ()

Output: cdf single = x

cdf_single: 0.39065815382421537

===Scipy _CDF _Single===

x: -0.09627428576781134
args: ()

Output: cdf single = x

cdf_single: 0.46165136659423767

===Scipy _CDF _Single===

x: 0.0850554982678009
args: ()

Output: cdf single = x

cdf_single: 0.5338913653594565

===Scipy _CDF _Single===

x: 0.26638528230341346
args: ()

Output: cdf single = x

cdf_single: 0.6050287505585463

===Scipy _CDF _Single===

x: 0.447715066339026
args: ()

Output: cdf single = x

cdf_single: 0.6728205765783427

===Scipy _CDF _Single===

x: 0.6290448503746386
args: ()

Output: cdf single = x

cdf_single: 0.7353401529617651

===Scipy _CDF _Single===

x: 0.8103746344102511
args: ()

Output: cdf single = x

cdf_single: 0.7911375540701224

===Scipy _CDF _Single===

x: 0.9917044184458638
args: ()

Output: cdf single = x

cdf_single: 0.8393291324750803

===Scipy _CDF _Single===

x: 1.1730342024814764
args: ()

Output: cdf single = x

cdf_single: 0.8796089548737617

===Scipy _CDF _Single===

x: 1.354363986517089
args: ()

Output: cdf single = x

cdf_single: 0.912189859351246

===Scipy _CDF _Single===

x: 1.5356937705527014
args: ()

Output: cdf single = x

cdf_single: 0.9376932481878324

===Scipy _CDF _Single===

x: 1.7170235545883141
args: ()

Output: cdf single = x

cdf_single: 0.9570125658327404

===Scipy _CDF _Single===

x: 1.8983533386239266
args: ()

Output: cdf single = x

cdf_single: 0.9711752240076603

===Scipy _CDF _Single===

x: 2.079683122659539
args: ()

Output: cdf single = x

cdf_single: 0.9812226964392071

===Scipy _CDF _Single===

x: 2.261012906695152
args: ()

Output: cdf single = x

cdf_single: 0.9881207710783292

===Scipy _CDF _Single===

x: 2.442342690730764
args: ()

Output: cdf single = x

cdf_single: 0.9927038562001937

===Scipy _CDF _Single===

x: 2.623672474766377
args: ()

Output: cdf single = x

cdf_single: 0.9956506305039391

===Scipy _CDF _Single===

x: 2.8050022588019896
args: ()

Output: cdf single = x

cdf_single: 0.9974841886424486

===Scipy _CDF _Single===

x: 2.986332042837603
args: ()

Output: cdf single = x

cdf_single: 0.9985882705588004

===Scipy _CDF _Single===

x: 3.167661826873215
args: ()

Output: cdf single = x

cdf_single: 0.9992316492083891

===Scipy _CDF _Single===

x: 3.348991610908828
args: ()

Output: cdf single = x

cdf_single: 0.9995944687428142

===Scipy _CDF _Single===

x: 3.5303213949444405
args: ()

Output: cdf single = x

cdf_single: 0.9997924724290275

===Scipy _CDF _Single===

x: 3.711651178980053
args: ()

Output: cdf single = x

cdf_single: 0.9998970441873987
_cdf = _cdfvec(x, *args) = [0.00242961 0.00420821 0.00707247 0.01153626 0.01826843 0.02809416
 0.04197239 0.06094217 0.08603498 0.11815647 0.15794896 0.20565417
 0.26100061 0.32314083 0.39065815 0.46165137 0.53389137 0.60502875
 0.67282058 0.73534015 0.79113755 0.83932913 0.87960895 0.91218986
 0.93769325 0.95701257 0.97117522 0.9812227  0.98812077 0.99270386
 0.99565063 0.99748419 0.99858827 0.99923165 0.99959447 0.99979247
 0.99989704]
prob_less_or_equal: [0.00242961 0.00420821 0.00707247 0.01153626 0.01826843 0.02809416
 0.04197239 0.06094217 0.08603498 0.11815647 0.15794896 0.20565417
 0.26100061 0.32314083 0.39065815 0.46165137 0.53389137 0.60502875
 0.67282058 0.73534015 0.79113755 0.83932913 0.87960895 0.91218986
 0.93769325 0.95701257 0.97117522 0.9812227  0.98812077 0.99270386
 0.99565063 0.99748419 0.99858827 0.999      0.999      0.999
 0.999     ]
cdf_over: [0.99757039 0.99579179 0.99292753 0.98846374 0.98173157 0.97190584
 0.95802761 0.93905783 0.91396502 0.88184353 0.84205104 0.79434583
 0.73899939 0.67685917 0.60934185 0.53834863 0.46610863 0.39497125
 0.32717942 0.26465985 0.20886245 0.16067087 0.12039105 0.08781014
 0.06230675 0.04298743 0.02882478 0.0187773  0.01187923 0.00729614
 0.00434937 0.00251581 0.00141173 0.001      0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [16  7 19 16 22 19 12 12 15 12 10 32 13 12 24 22 11 19  8 17 19 21 13 15
 11 15 12 11 23 20 19 14 10 18 13]
player: myles turner
stat: pts
condition: TJ McConnell PG bench
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.09233880043029785

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (15.77042837041115, 5.437214258815786)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.80850241, -2.6245847 , -2.44066699, -2.25674928, -2.07283157,
       -1.88891386, -1.70499615, -1.52107844, -1.33716073, -1.15324302,
       -0.96932531, -0.78540759, -0.60148988, -0.41757217, -0.23365446,
       -0.04973675,  0.13418096,  0.31809867,  0.50201638,  0.68593409,
        0.8698518 ,  1.05376951,  1.23768723,  1.42160494,  1.60552265,
        1.78944036,  1.97335807,  2.15727578,  2.34119349,  2.5251112 ,
        2.70902891,  2.89294662,  3.07686433,  3.26078204,  3.44469976,
        3.62861747,  3.81253518])]

===Scipy _CDF===

x: [-2.80850241 -2.6245847  -2.44066699 -2.25674928 -2.07283157 -1.88891386
 -1.70499615 -1.52107844 -1.33716073 -1.15324302 -0.96932531 -0.78540759
 -0.60148988 -0.41757217 -0.23365446 -0.04973675  0.13418096  0.31809867
  0.50201638  0.68593409  0.8698518   1.05376951  1.23768723  1.42160494
  1.60552265  1.78944036  1.97335807  2.15727578  2.34119349  2.5251112
  2.70902891  2.89294662  3.07686433  3.26078204  3.44469976  3.62861747
  3.81253518]
args: ()

===Scipy _CDF _Single===

x: -2.8085024138329646
args: ()

Output: cdf single = x

cdf_single: 0.0024886254650804255

===Scipy _CDF _Single===

x: -2.6245847029613323
args: ()

Output: cdf single = x

cdf_single: 0.004337735559204546

===Scipy _CDF _Single===

x: -2.4406669920897
args: ()

Output: cdf single = x

cdf_single: 0.007330083131145054

===Scipy _CDF _Single===

x: -2.256749281218067
args: ()

Output: cdf single = x

cdf_single: 0.01201187278324705

===Scipy _CDF _Single===

x: -2.072831570346435
args: ()

Output: cdf single = x

cdf_single: 0.019093978613852963

===Scipy _CDF _Single===

x: -1.888913859474802
args: ()

Output: cdf single = x

cdf_single: 0.029451686027720664

===Scipy _CDF _Single===

x: -1.7049961486031693
args: ()

Output: cdf single = x

cdf_single: 0.044097571362110934

===Scipy _CDF _Single===

x: -1.5210784377315367
args: ()

Output: cdf single = x

cdf_single: 0.0641200773737997

===Scipy _CDF _Single===

x: -1.3371607268599037
args: ()

Output: cdf single = x

cdf_single: 0.09058508914931511

===Scipy _CDF _Single===

x: -1.1532430159882712
args: ()

Output: cdf single = x

cdf_single: 0.12440532601709249

===Scipy _CDF _Single===

x: -0.9693253051166385
args: ()

Output: cdf single = x

cdf_single: 0.166191453708775

===Scipy _CDF _Single===

x: -0.7854075942450058
args: ()

Output: cdf single = x

cdf_single: 0.21610731479327555

===Scipy _CDF _Single===

x: -0.6014898833733733
args: ()

Output: cdf single = x

cdf_single: 0.27375687397490805

===Scipy _CDF _Single===

x: -0.4175721725017406
args: ()

Output: cdf single = x

cdf_single: 0.3381299730175875

===Scipy _CDF _Single===

x: -0.23365446163010797
args: ()

Output: cdf single = x

cdf_single: 0.40762662175793574

===Scipy _CDF _Single===

x: -0.04973675075847533
args: ()

Output: cdf single = x

cdf_single: 0.4801660849089003

===Scipy _CDF _Single===

x: 0.13418096011315697
args: ()

Output: cdf single = x

cdf_single: 0.5533702593101241

===Scipy _CDF _Single===

x: 0.3180986709847896
args: ()

Output: cdf single = x

cdf_single: 0.6247949541418175

===Scipy _CDF _Single===

x: 0.5020163818564223
args: ()

Output: cdf single = x

cdf_single: 0.6921720011942913

===Scipy _CDF _Single===

x: 0.6859340927280548
args: ()

Output: cdf single = x

cdf_single: 0.7536226648861576

===Scipy _CDF _Single===

x: 0.8698518035996875
args: ()

Output: cdf single = x

cdf_single: 0.8078093014448263

===Scipy _CDF _Single===

x: 1.0537695144713202
args: ()

Output: cdf single = x

cdf_single: 0.8540057730078691

===Scipy _CDF _Single===

x: 1.2376872253429527
args: ()

Output: cdf single = x

cdf_single: 0.8920839711503841

===Scipy _CDF _Single===

x: 1.4216049362145855
args: ()

Output: cdf single = x

cdf_single: 0.9224295145068961

===Scipy _CDF _Single===

x: 1.605522647086218
args: ()

Output: cdf single = x

cdf_single: 0.945810583349935

===Scipy _CDF _Single===

x: 1.7894403579578506
args: ()

Output: cdf single = x

cdf_single: 0.9632280376761042

===Scipy _CDF _Single===

x: 1.9733580688294834
args: ()

Output: cdf single = x

cdf_single: 0.9757726093280275

===Scipy _CDF _Single===

x: 2.157275779701116
args: ()

Output: cdf single = x

cdf_single: 0.9845079084956501

===Scipy _CDF _Single===

x: 2.3411934905727487
args: ()

Output: cdf single = x

cdf_single: 0.9903888989016548

===Scipy _CDF _Single===

x: 2.525111201444381
args: ()

Output: cdf single = x

cdf_single: 0.9942169157840364

===Scipy _CDF _Single===

x: 2.709028912316014
args: ()

Output: cdf single = x

cdf_single: 0.996625977048923

===Scipy _CDF _Single===

x: 2.8929466231876466
args: ()

Output: cdf single = x

cdf_single: 0.9980917692542937

===Scipy _CDF _Single===

x: 3.07686433405928
args: ()

Output: cdf single = x

cdf_single: 0.9989540475723375

===Scipy _CDF _Single===

x: 3.2607820449309126
args: ()

Output: cdf single = x

cdf_single: 0.9994444729622616

===Scipy _CDF _Single===

x: 3.444699755802545
args: ()

Output: cdf single = x

cdf_single: 0.9997141529819873

===Scipy _CDF _Single===

x: 3.6286174666741777
args: ()

Output: cdf single = x

cdf_single: 0.9998575284538516

===Scipy _CDF _Single===

x: 3.8125351775458105
args: ()

Output: cdf single = x

cdf_single: 0.9999312256774886
_cdf = _cdfvec(x, *args) = [0.00248863 0.00433774 0.00733008 0.01201187 0.01909398 0.02945169
 0.04409757 0.06412008 0.09058509 0.12440533 0.16619145 0.21610731
 0.27375687 0.33812997 0.40762662 0.48016608 0.55337026 0.62479495
 0.692172   0.75362266 0.8078093  0.85400577 0.89208397 0.92242951
 0.94581058 0.96322804 0.97577261 0.98450791 0.9903889  0.99421692
 0.99662598 0.99809177 0.99895405 0.99944447 0.99971415 0.99985753
 0.99993123]
prob_less_or_equal: [0.00248863 0.00433774 0.00733008 0.01201187 0.01909398 0.02945169
 0.04409757 0.06412008 0.09058509 0.12440533 0.16619145 0.21610731
 0.27375687 0.33812997 0.40762662 0.48016608 0.55337026 0.62479495
 0.692172   0.75362266 0.8078093  0.85400577 0.89208397 0.92242951
 0.94581058 0.96322804 0.97577261 0.98450791 0.9903889  0.99421692
 0.99662598 0.99809177 0.99895405 0.999      0.999      0.999
 0.999     ]
cdf_over: [0.99751137 0.99566226 0.99266992 0.98798813 0.98090602 0.97054831
 0.95590243 0.93587992 0.90941491 0.87559467 0.83380855 0.78389269
 0.72624313 0.66187003 0.59237338 0.51983392 0.44662974 0.37520505
 0.307828   0.24637734 0.1921907  0.14599423 0.10791603 0.07757049
 0.05418942 0.03677196 0.02422739 0.01549209 0.0096111  0.00578308
 0.00337402 0.00190823 0.00104595 0.001      0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [16  5 17  7 19 17 22 22 19 11 22 15 12 11 23 20 25 19 14 23 16 18 13]
player: myles turner
stat: pts
condition: J Smith PF bench
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.10670804977416992

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (16.785840209785103, 5.741350051778884)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.8365874 , -2.66241234, -2.48823728, -2.31406221, -2.13988715,
       -1.96571209, -1.79153703, -1.61736197, -1.4431869 , -1.26901184,
       -1.09483678, -0.92066172, -0.74648666, -0.5723116 , -0.39813653,
       -0.22396147, -0.04978641,  0.12438865,  0.29856371,  0.47273877,
        0.64691384,  0.8210889 ,  0.99526396,  1.16943902,  1.34361408,
        1.51778915,  1.69196421,  1.86613927,  2.04031433,  2.21448939,
        2.38866445,  2.56283952,  2.73701458,  2.91118964,  3.0853647 ,
        3.25953976,  3.43371483])]

===Scipy _CDF===

x: [-2.8365874  -2.66241234 -2.48823728 -2.31406221 -2.13988715 -1.96571209
 -1.79153703 -1.61736197 -1.4431869  -1.26901184 -1.09483678 -0.92066172
 -0.74648666 -0.5723116  -0.39813653 -0.22396147 -0.04978641  0.12438865
  0.29856371  0.47273877  0.64691384  0.8210889   0.99526396  1.16943902
  1.34361408  1.51778915  1.69196421  1.86613927  2.04031433  2.21448939
  2.38866445  2.56283952  2.73701458  2.91118964  3.0853647   3.25953976
  3.43371483]
args: ()

===Scipy _CDF _Single===

x: -2.8365873989409764
args: ()

Output: cdf single = x

cdf_single: 0.0022799248186522363

===Scipy _CDF _Single===

x: -2.6624123371556103
args: ()

Output: cdf single = x

cdf_single: 0.003879138755482015

===Scipy _CDF _Single===

x: -2.4882372753702446
args: ()

Output: cdf single = x

cdf_single: 0.0064189025296300765

===Scipy _CDF _Single===

x: -2.314062213584879
args: ()

Output: cdf single = x

cdf_single: 0.010332154876487152

===Scipy _CDF _Single===

x: -2.1398871517995133
args: ()

Output: cdf single = x

cdf_single: 0.016181943842544705

===Scipy _CDF _Single===

x: -1.9657120900141476
args: ()

Output: cdf single = x

cdf_single: 0.024665938732899784

===Scipy _CDF _Single===

x: -1.791537028228782
args: ()

Output: cdf single = x

cdf_single: 0.036603579050397045

===Scipy _CDF _Single===

x: -1.617361966443416
args: ()

Output: cdf single = x

cdf_single: 0.05290008526301124

===Scipy _CDF _Single===

x: -1.4431869046580499
args: ()

Output: cdf single = x

cdf_single: 0.0744839137294677

===Scipy _CDF _Single===

x: -1.2690118428726842
args: ()

Output: cdf single = x

cdf_single: 0.10221842010338159

===Scipy _CDF _Single===

x: -1.0948367810873185
args: ()

Output: cdf single = x

cdf_single: 0.1367940746900361

===Scipy _CDF _Single===

x: -0.9206617193019527
args: ()

Output: cdf single = x

cdf_single: 0.17861353405606473

===Scipy _CDF _Single===

x: -0.7464866575165869
args: ()

Output: cdf single = x

cdf_single: 0.22768674427207963

===Scipy _CDF _Single===

x: -0.5723115957312213
args: ()

Output: cdf single = x

cdf_single: 0.2835554476514034

===Scipy _CDF _Single===

x: -0.39813653394585546
args: ()

Output: cdf single = x

cdf_single: 0.3452647727250856

===Scipy _CDF _Single===

x: -0.2239614721604897
args: ()

Output: cdf single = x

cdf_single: 0.4113936412505179

===Scipy _CDF _Single===

x: -0.049786410375124254
args: ()

Output: cdf single = x

cdf_single: 0.48014629810155807

===Scipy _CDF _Single===

x: 0.1243886514102415
args: ()

Output: cdf single = x

cdf_single: 0.549496220786816

===Scipy _CDF _Single===

x: 0.29856371319560726
args: ()

Output: cdf single = x

cdf_single: 0.6173635220578269

===Scipy _CDF _Single===

x: 0.472738774980973
args: ()

Output: cdf single = x

cdf_single: 0.6818002203647096

===Scipy _CDF _Single===

x: 0.6469138367663387
args: ()

Output: cdf single = x

cdf_single: 0.7411561449493259

===Scipy _CDF _Single===

x: 0.8210888985517045
args: ()

Output: cdf single = x

cdf_single: 0.7942021835053407

===Scipy _CDF _Single===

x: 0.9952639603370703
args: ()

Output: cdf single = x

cdf_single: 0.8401960494197587

===Scipy _CDF _Single===

x: 1.169439022122436
args: ()

Output: cdf single = x

cdf_single: 0.8788866021877969

===Scipy _CDF _Single===

x: 1.3436140839078017
args: ()

Output: cdf single = x

cdf_single: 0.9104633936003677

===Scipy _CDF _Single===

x: 1.5177891456931676
args: ()

Output: cdf single = x

cdf_single: 0.9354662188638747

===Scipy _CDF _Single===

x: 1.6919642074785333
args: ()

Output: cdf single = x

cdf_single: 0.9546736008460217

===Scipy _CDF _Single===

x: 1.866139269263899
args: ()

Output: cdf single = x

cdf_single: 0.9689890584367271

===Scipy _CDF _Single===

x: 2.040314331049265
args: ()

Output: cdf single = x

cdf_single: 0.979340485829719

===Scipy _CDF _Single===

x: 2.2144893928346305
args: ()

Output: cdf single = x

cdf_single: 0.9866024342097295

===Scipy _CDF _Single===

x: 2.388664454619996
args: ()

Output: cdf single = x

cdf_single: 0.9915451307900602

===Scipy _CDF _Single===

x: 2.562839516405362
args: ()

Output: cdf single = x

cdf_single: 0.9948089987607724

===Scipy _CDF _Single===

x: 2.7370145781907285
args: ()

Output: cdf single = x

cdf_single: 0.9969000227264642

===Scipy _CDF _Single===

x: 2.911189639976094
args: ()

Output: cdf single = x

cdf_single: 0.9981997229409069

===Scipy _CDF _Single===

x: 3.08536470176146
args: ()

Output: cdf single = x

cdf_single: 0.9989834865156835

===Scipy _CDF _Single===

x: 3.2595397635468255
args: ()

Output: cdf single = x

cdf_single: 0.9994420343178418

===Scipy _CDF _Single===

x: 3.4337148253321916
args: ()

Output: cdf single = x

cdf_single: 0.9997023148935149
_cdf = _cdfvec(x, *args) = [0.00227992 0.00387914 0.0064189  0.01033215 0.01618194 0.02466594
 0.03660358 0.05290009 0.07448391 0.10221842 0.13679407 0.17861353
 0.22768674 0.28355545 0.34526477 0.41139364 0.4801463  0.54949622
 0.61736352 0.68180022 0.74115614 0.79420218 0.84019605 0.8788866
 0.91046339 0.93546622 0.9546736  0.96898906 0.97934049 0.98660243
 0.99154513 0.994809   0.99690002 0.99819972 0.99898349 0.99944203
 0.99970231]
prob_less_or_equal: [0.00227992 0.00387914 0.0064189  0.01033215 0.01618194 0.02466594
 0.03660358 0.05290009 0.07448391 0.10221842 0.13679407 0.17861353
 0.22768674 0.28355545 0.34526477 0.41139364 0.4801463  0.54949622
 0.61736352 0.68180022 0.74115614 0.79420218 0.84019605 0.8788866
 0.91046339 0.93546622 0.9546736  0.96898906 0.97934049 0.98660243
 0.99154513 0.994809   0.99690002 0.99819972 0.99898349 0.999
 0.999     ]
cdf_over: [0.99772008 0.99612086 0.9935811  0.98966785 0.98381806 0.97533406
 0.96339642 0.94709991 0.92551609 0.89778158 0.86320593 0.82138647
 0.77231326 0.71644455 0.65473523 0.58860636 0.5198537  0.45050378
 0.38263648 0.31819978 0.25884386 0.20579782 0.15980395 0.1211134
 0.08953661 0.06453378 0.0453264  0.03101094 0.02065951 0.01339757
 0.00845487 0.005191   0.00309998 0.00180028 0.00101651 0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [16  5 17  7 19 16 17 22 15 19 12 12 12 10 32 13 12 24 24 20 12]
player: myles turner
stat: pts
condition: O Toppin PF bench
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.046860694885253906

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (16.033426513048898, 5.502028705431329)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.82321819, -2.64146705, -2.4597159 , -2.27796476, -2.09621362,
       -1.91446248, -1.73271134, -1.55096019, -1.36920905, -1.18745791,
       -1.00570677, -0.82395563, -0.64220449, -0.46045334, -0.2787022 ,
       -0.09695106,  0.08480008,  0.26655122,  0.44830237,  0.63005351,
        0.81180465,  0.99355579,  1.17530693,  1.35705808,  1.53880922,
        1.72056036,  1.9023115 ,  2.08406264,  2.26581379,  2.44756493,
        2.62931607,  2.81106721,  2.99281835,  3.17456949,  3.35632064,
        3.53807178,  3.71982292])]

===Scipy _CDF===

x: [-2.82321819 -2.64146705 -2.4597159  -2.27796476 -2.09621362 -1.91446248
 -1.73271134 -1.55096019 -1.36920905 -1.18745791 -1.00570677 -0.82395563
 -0.64220449 -0.46045334 -0.2787022  -0.09695106  0.08480008  0.26655122
  0.44830237  0.63005351  0.81180465  0.99355579  1.17530693  1.35705808
  1.53880922  1.72056036  1.9023115   2.08406264  2.26581379  2.44756493
  2.62931607  2.81106721  2.99281835  3.17456949  3.35632064  3.53807178
  3.71982292]
args: ()

===Scipy _CDF _Single===

x: -2.823218188177585
args: ()

Output: cdf single = x

cdf_single: 0.002377210166128568

===Scipy _CDF _Single===

x: -2.6414670462737173
args: ()

Output: cdf single = x

cdf_single: 0.004127391856472965

===Scipy _CDF _Single===

x: -2.4597159043698507
args: ()

Output: cdf single = x

cdf_single: 0.006952351744202554

===Scipy _CDF _Single===

x: -2.2779647624659836
args: ()

Output: cdf single = x

cdf_single: 0.01136433856960336

===Scipy _CDF _Single===

x: -2.0962136205621165
args: ()

Output: cdf single = x

cdf_single: 0.018031622611492087

===Scipy _CDF _Single===

x: -1.9144624786582491
args: ()

Output: cdf single = x

cdf_single: 0.027780544491611048

===Scipy _CDF _Single===

x: -1.732711336754382
args: ()

Output: cdf single = x

cdf_single: 0.04157349425532042

===Scipy _CDF _Single===

x: -1.5509601948505147
args: ()

Output: cdf single = x

cdf_single: 0.06045561170276391

===Scipy _CDF _Single===

x: -1.3692090529466472
args: ()

Output: cdf single = x

cdf_single: 0.08546696849401547

===Scipy _CDF _Single===

x: -1.18745791104278
args: ()

Output: cdf single = x

cdf_single: 0.11752352446136304

===Scipy _CDF _Single===

x: -1.005706769138913
args: ()

Output: cdf single = x

cdf_single: 0.1572783230030728

===Scipy _CDF _Single===

x: -0.8239556272350458
args: ()

Output: cdf single = x

cdf_single: 0.20498238554455678

===Scipy _CDF _Single===

x: -0.6422044853311786
args: ()

Output: cdf single = x

cdf_single: 0.26037021055352194

===Scipy _CDF _Single===

x: -0.4604533434273114
args: ()

Output: cdf single = x

cdf_single: 0.32259542666479696

===Scipy _CDF _Single===

x: -0.27870220152344427
args: ()

Output: cdf single = x

cdf_single: 0.3902366864310292

===Scipy _CDF _Single===

x: -0.09695105961957708
args: ()

Output: cdf single = x

cdf_single: 0.46138263002155727

===Scipy _CDF _Single===

x: 0.08480008228428977
args: ()

Output: cdf single = x

cdf_single: 0.5337898359379817

===Scipy _CDF _Single===

x: 0.26655122418815697
args: ()

Output: cdf single = x

cdf_single: 0.6050926427040899

===Scipy _CDF _Single===

x: 0.4483023660920241
args: ()

Output: cdf single = x

cdf_single: 0.6730325033699361

===Scipy _CDF _Single===

x: 0.6300535079958913
args: ()

Output: cdf single = x

cdf_single: 0.7356702118192741

===Scipy _CDF _Single===

x: 0.8118046498997584
args: ()

Output: cdf single = x

cdf_single: 0.7915481332467724

===Scipy _CDF _Single===

x: 0.9935557918036256
args: ()

Output: cdf single = x

cdf_single: 0.8397804121188743

===Scipy _CDF _Single===

x: 1.1753069337074928
args: ()

Output: cdf single = x

cdf_single: 0.8800640292442888

===Scipy _CDF _Single===

x: 1.35705807561136
args: ()

Output: cdf single = x

cdf_single: 0.9126186209060637

===Scipy _CDF _Single===

x: 1.5388092175152273
args: ()

Output: cdf single = x

cdf_single: 0.938074560535041

===Scipy _CDF _Single===

x: 1.7205603594190944
args: ()

Output: cdf single = x

cdf_single: 0.9573346840453267

===Scipy _CDF _Single===

x: 1.9023115013229615
args: ()

Output: cdf single = x

cdf_single: 0.9714347785206586

===Scipy _CDF _Single===

x: 2.0840626432268285
args: ()

Output: cdf single = x

cdf_single: 0.9814227652415064

===Scipy _CDF _Single===

x: 2.2658137851306956
args: ()

Output: cdf single = x

cdf_single: 0.9882686064981379

===Scipy _CDF _Single===

x: 2.447564927034563
args: ()

Output: cdf single = x

cdf_single: 0.9928087395270142

===Scipy _CDF _Single===

x: 2.6293160689384303
args: ()

Output: cdf single = x

cdf_single: 0.9957221599802332

===Scipy _CDF _Single===

x: 2.8110672108422974
args: ()

Output: cdf single = x

cdf_single: 0.9975311264929498

===Scipy _CDF _Single===

x: 2.9928183527461654
args: ()

Output: cdf single = x

cdf_single: 0.9986179289328803

===Scipy _CDF _Single===

x: 3.1745694946500325
args: ()

Output: cdf single = x

cdf_single: 0.9992497052356633

===Scipy _CDF _Single===

x: 3.3563206365538996
args: ()

Output: cdf single = x

cdf_single: 0.9996050653164037

===Scipy _CDF _Single===

x: 3.5380717784577667
args: ()

Output: cdf single = x

cdf_single: 0.9997984697632585

===Scipy _CDF _Single===

x: 3.7198229203616338
args: ()

Output: cdf single = x

cdf_single: 0.9999003187473596
_cdf = _cdfvec(x, *args) = [0.00237721 0.00412739 0.00695235 0.01136434 0.01803162 0.02778054
 0.04157349 0.06045561 0.08546697 0.11752352 0.15727832 0.20498239
 0.26037021 0.32259543 0.39023669 0.46138263 0.53378984 0.60509264
 0.6730325  0.73567021 0.79154813 0.83978041 0.88006403 0.91261862
 0.93807456 0.95733468 0.97143478 0.98142277 0.98826861 0.99280874
 0.99572216 0.99753113 0.99861793 0.99924971 0.99960507 0.99979847
 0.99990032]
prob_less_or_equal: [0.00237721 0.00412739 0.00695235 0.01136434 0.01803162 0.02778054
 0.04157349 0.06045561 0.08546697 0.11752352 0.15727832 0.20498239
 0.26037021 0.32259543 0.39023669 0.46138263 0.53378984 0.60509264
 0.6730325  0.73567021 0.79154813 0.83978041 0.88006403 0.91261862
 0.93807456 0.95733468 0.97143478 0.98142277 0.98826861 0.99280874
 0.99572216 0.99753113 0.99861793 0.999      0.999      0.999
 0.999     ]
cdf_over: [0.99762279 0.99587261 0.99304765 0.98863566 0.98196838 0.97221946
 0.95842651 0.93954439 0.91453303 0.88247648 0.84272168 0.79501761
 0.73962979 0.67740457 0.60976331 0.53861737 0.46621016 0.39490736
 0.3269675  0.26432979 0.20845187 0.16021959 0.11993597 0.08738138
 0.06192544 0.04266532 0.02856522 0.01857723 0.01173139 0.00719126
 0.00427784 0.00246887 0.00138207 0.001      0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [ 5 19 16 17 12 12 15 12 32 13 12 24 24 22  8 17 19]
player: myles turner
stat: pts
condition: 2 after
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.10886573791503906

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (16.196842660773036, 5.696929376981117)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.75531653, -2.57978337, -2.40425021, -2.22871705, -2.0531839 ,
       -1.87765074, -1.70211758, -1.52658443, -1.35105127, -1.17551811,
       -0.99998495, -0.8244518 , -0.64891864, -0.47338548, -0.29785233,
       -0.12231917,  0.05321399,  0.22874715,  0.4042803 ,  0.57981346,
        0.75534662,  0.93087978,  1.10641293,  1.28194609,  1.45747925,
        1.6330124 ,  1.80854556,  1.98407872,  2.15961188,  2.33514503,
        2.51067819,  2.68621135,  2.8617445 ,  3.03727766,  3.21281082,
        3.38834398,  3.56387713])]

===Scipy _CDF===

x: [-2.75531653 -2.57978337 -2.40425021 -2.22871705 -2.0531839  -1.87765074
 -1.70211758 -1.52658443 -1.35105127 -1.17551811 -0.99998495 -0.8244518
 -0.64891864 -0.47338548 -0.29785233 -0.12231917  0.05321399  0.22874715
  0.4042803   0.57981346  0.75534662  0.93087978  1.10641293  1.28194609
  1.45747925  1.6330124   1.80854556  1.98407872  2.15961188  2.33514503
  2.51067819  2.68621135  2.8617445   3.03727766  3.21281082  3.38834398
  3.56387713]
args: ()

===Scipy _CDF _Single===

x: -2.7553165261618555
args: ()

Output: cdf single = x

cdf_single: 0.0029317690025210032

===Scipy _CDF _Single===

x: -2.579783368942007
args: ()

Output: cdf single = x

cdf_single: 0.004943115563629366

===Scipy _CDF _Single===

x: -2.4042502117221587
args: ()

Output: cdf single = x

cdf_single: 0.008102838517201748

===Scipy _CDF _Single===

x: -2.2287170545023103
args: ()

Output: cdf single = x

cdf_single: 0.012916368394649618

===Scipy _CDF _Single===

x: -2.053183897282462
args: ()

Output: cdf single = x

cdf_single: 0.020027372770214224

===Scipy _CDF _Single===

x: -1.8776507400626132
args: ()

Output: cdf single = x

cdf_single: 0.03021447980501954

===Scipy _CDF _Single===

x: -1.7021175828427648
args: ()

Output: cdf single = x

cdf_single: 0.044366664235798645

===Scipy _CDF _Single===

x: -1.5265844256229164
args: ()

Output: cdf single = x

cdf_single: 0.0634321911119287

===Scipy _CDF _Single===

x: -1.3510512684030676
args: ()

Output: cdf single = x

cdf_single: 0.08833950513123653

===Scipy _CDF _Single===

x: -1.175518111183219
args: ()

Output: cdf single = x

cdf_single: 0.11989374784145018

===Scipy _CDF _Single===

x: -0.9999849539633705
args: ()

Output: cdf single = x

cdf_single: 0.1586588946592305

===Scipy _CDF _Single===

x: -0.824451796743522
args: ()

Output: cdf single = x

cdf_single: 0.2048414471039816

===Scipy _CDF _Single===

x: -0.6489186395236736
args: ()

Output: cdf single = x

cdf_single: 0.25819548305222956

===Scipy _CDF _Single===

x: -0.47338548230382504
args: ()

Output: cdf single = x

cdf_single: 0.31796909273150087

===Scipy _CDF _Single===

x: -0.2978523250839765
args: ()

Output: cdf single = x

cdf_single: 0.38290793815541013

===Scipy _CDF _Single===

x: -0.12231916786412805
args: ()

Output: cdf single = x

cdf_single: 0.45132312611199715

===Scipy _CDF _Single===

x: 0.05321398935572013
args: ()

Output: cdf single = x

cdf_single: 0.5212192952427791

===Scipy _CDF _Single===

x: 0.22874714657556863
args: ()

Output: cdf single = x

cdf_single: 0.590467275761209

===Scipy _CDF _Single===

x: 0.40428030379541713
args: ()

Output: cdf single = x

cdf_single: 0.6569966962368367

===Scipy _CDF _Single===

x: 0.5798134610152657
args: ()

Output: cdf single = x

cdf_single: 0.7189797904947784

===Scipy _CDF _Single===

x: 0.7553466182351141
args: ()

Output: cdf single = x

cdf_single: 0.7749794830169914

===Scipy _CDF _Single===

x: 0.9308797754549626
args: ()

Output: cdf single = x

cdf_single: 0.8240421213272858

===Scipy _CDF _Single===

x: 1.1064129326748111
args: ()

Output: cdf single = x

cdf_single: 0.8657260848106464

===Scipy _CDF _Single===

x: 1.2819460898946595
args: ()

Output: cdf single = x

cdf_single: 0.9000692208629246

===Scipy _CDF _Single===

x: 1.4574792471145082
args: ()

Output: cdf single = x

cdf_single: 0.9275079320661757

===Scipy _CDF _Single===

x: 1.6330124043343566
args: ()

Output: cdf single = x

cdf_single: 0.9487668060782324

===Scipy _CDF _Single===

x: 1.808545561554205
args: ()

Output: cdf single = x

cdf_single: 0.9647391837935483

===Scipy _CDF _Single===

x: 1.9840787187740536
args: ()

Output: cdf single = x

cdf_single: 0.9763764674353443

===Scipy _CDF _Single===

x: 2.1596118759939023
args: ()

Output: cdf single = x

cdf_single: 0.9845986358573455

===Scipy _CDF _Single===

x: 2.3351450332137507
args: ()

Output: cdf single = x

cdf_single: 0.9902320772686659

===Scipy _CDF _Single===

x: 2.510678190433599
args: ()

Output: cdf single = x

cdf_single: 0.9939750254987517

===Scipy _CDF _Single===

x: 2.6862113476534475
args: ()

Output: cdf single = x

cdf_single: 0.9963866319719206

===Scipy _CDF _Single===

x: 2.861744504873297
args: ()

Output: cdf single = x

cdf_single: 0.9978934180469539

===Scipy _CDF _Single===

x: 3.037277662093145
args: ()

Output: cdf single = x

cdf_single: 0.9988063727762245

===Scipy _CDF _Single===

x: 3.2128108193129936
args: ()

Output: cdf single = x

cdf_single: 0.9993427858114206

===Scipy _CDF _Single===

x: 3.388343976532842
args: ()

Output: cdf single = x

cdf_single: 0.9996484198947965

===Scipy _CDF _Single===

x: 3.5638771337526904
args: ()

Output: cdf single = x

cdf_single: 0.9998172914749518
_cdf = _cdfvec(x, *args) = [0.00293177 0.00494312 0.00810284 0.01291637 0.02002737 0.03021448
 0.04436666 0.06343219 0.08833951 0.11989375 0.15865889 0.20484145
 0.25819548 0.31796909 0.38290794 0.45132313 0.5212193  0.59046728
 0.6569967  0.71897979 0.77497948 0.82404212 0.86572608 0.90006922
 0.92750793 0.94876681 0.96473918 0.97637647 0.98459864 0.99023208
 0.99397503 0.99638663 0.99789342 0.99880637 0.99934279 0.99964842
 0.99981729]
prob_less_or_equal: [0.00293177 0.00494312 0.00810284 0.01291637 0.02002737 0.03021448
 0.04436666 0.06343219 0.08833951 0.11989375 0.15865889 0.20484145
 0.25819548 0.31796909 0.38290794 0.45132313 0.5212193  0.59046728
 0.6569967  0.71897979 0.77497948 0.82404212 0.86572608 0.90006922
 0.92750793 0.94876681 0.96473918 0.97637647 0.98459864 0.99023208
 0.99397503 0.99638663 0.99789342 0.99880637 0.999      0.999
 0.999     ]
cdf_over: [0.99706823 0.99505688 0.99189716 0.98708363 0.97997263 0.96978552
 0.95563334 0.93656781 0.91166049 0.88010625 0.84134111 0.79515855
 0.74180452 0.68203091 0.61709206 0.54867687 0.4787807  0.40953272
 0.3430033  0.28102021 0.22502052 0.17595788 0.13427392 0.09993078
 0.07249207 0.05123319 0.03526082 0.02362353 0.01540136 0.00976792
 0.00602497 0.00361337 0.00210658 0.00119363 0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [ 5 16 22 15 19 12 12 15 12 32 13 24 22 11 19 19 13 15 12 11 15 12 11 23
 19 14 13]
player: myles turner
stat: pts
condition: 10-19 prev
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.09597420692443848

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (15.780814635732254, 5.397595125211433)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.83104147, -2.64577378, -2.46050608, -2.27523839, -2.0899707 ,
       -1.904703  , -1.71943531, -1.53416761, -1.34889992, -1.16363223,
       -0.97836453, -0.79309684, -0.60782915, -0.42256145, -0.23729376,
       -0.05202607,  0.13324163,  0.31850932,  0.50377702,  0.68904471,
        0.8743124 ,  1.0595801 ,  1.24484779,  1.43011548,  1.61538318,
        1.80065087,  1.98591856,  2.17118626,  2.35645395,  2.54172165,
        2.72698934,  2.91225703,  3.09752473,  3.28279242,  3.46806011,
        3.65332781,  3.8385955 ])]

===Scipy _CDF===

x: [-2.83104147 -2.64577378 -2.46050608 -2.27523839 -2.0899707  -1.904703
 -1.71943531 -1.53416761 -1.34889992 -1.16363223 -0.97836453 -0.79309684
 -0.60782915 -0.42256145 -0.23729376 -0.05202607  0.13324163  0.31850932
  0.50377702  0.68904471  0.8743124   1.0595801   1.24484779  1.43011548
  1.61538318  1.80065087  1.98591856  2.17118626  2.35645395  2.54172165
  2.72698934  2.91225703  3.09752473  3.28279242  3.46806011  3.65332781
  3.8385955 ]
args: ()

===Scipy _CDF _Single===

x: -2.8310414696273978
args: ()

Output: cdf single = x

cdf_single: 0.002319835254245233

===Scipy _CDF _Single===

x: -2.6457737759967404
args: ()

Output: cdf single = x

cdf_single: 0.004075215169464248

===Scipy _CDF _Single===

x: -2.4605060823660834
args: ()

Output: cdf single = x

cdf_single: 0.006937061013931434

===Scipy _CDF _Single===

x: -2.2752383887354264
args: ()

Output: cdf single = x

cdf_single: 0.01144581657379977

===Scipy _CDF _Single===

x: -2.0899706951047694
args: ()

Output: cdf single = x

cdf_single: 0.01831021611466251

===Scipy _CDF _Single===

x: -1.9047030014741122
args: ()

Output: cdf single = x

cdf_single: 0.02840934431480939

===Scipy _CDF _Single===

x: -1.719435307843455
args: ()

Output: cdf single = x

cdf_single: 0.042767568885191176

===Scipy _CDF _Single===

x: -1.534167614212798
args: ()

Output: cdf single = x

cdf_single: 0.06249421137187176

===Scipy _CDF _Single===

x: -1.3488999205821408
args: ()

Output: cdf single = x

cdf_single: 0.08868455687603082

===Scipy _CDF _Single===

x: -1.1636322269514838
args: ()

Output: cdf single = x

cdf_single: 0.12228654272813813

===Scipy _CDF _Single===

x: -0.9783645333208267
args: ()

Output: cdf single = x

cdf_single: 0.16394703149380346

===Scipy _CDF _Single===

x: -0.7930968396901696
args: ()

Output: cdf single = x

cdf_single: 0.21386070198365092

===Scipy _CDF _Single===

x: -0.6078291460595125
args: ()

Output: cdf single = x

cdf_single: 0.27165039819591

===Scipy _CDF _Single===

x: -0.42256145242885546
args: ()

Output: cdf single = x

cdf_single: 0.33630762799564845

===Scipy _CDF _Single===

x: -0.23729375879819836
args: ()

Output: cdf single = x

cdf_single: 0.4062144518057493

===Scipy _CDF _Single===

x: -0.05202606516754127
args: ()

Output: cdf single = x

cdf_single: 0.4792539622666493

===Scipy _CDF _Single===

x: 0.1332416284631155
args: ()

Output: cdf single = x

cdf_single: 0.5529988552104242

===Scipy _CDF _Single===

x: 0.3185093220937726
args: ()

Output: cdf single = x

cdf_single: 0.6249506877198495

===Scipy _CDF _Single===

x: 0.5037770157244297
args: ()

Output: cdf single = x

cdf_single: 0.6927909595544842

===Scipy _CDF _Single===

x: 0.6890447093550868
args: ()

Output: cdf single = x

cdf_single: 0.7546024337335042

===Scipy _CDF _Single===

x: 0.8743124029857439
args: ()

Output: cdf single = x

cdf_single: 0.8090259266730059

===Scipy _CDF _Single===

x: 1.0595800966164008
args: ()

Output: cdf single = x

cdf_single: 0.8553321638106021

===Scipy _CDF _Single===

x: 1.244847790247058
args: ()

Output: cdf single = x

cdf_single: 0.8934061473090186

===Scipy _CDF _Single===

x: 1.430115483877715
args: ()

Output: cdf single = x

cdf_single: 0.9236580615568613

===Scipy _CDF _Single===

x: 1.6153831775083722
args: ()

Output: cdf single = x

cdf_single: 0.9468861295157762

===Scipy _CDF _Single===

x: 1.8006508711390292
args: ()

Output: cdf single = x

cdf_single: 0.9641210371733409

===Scipy _CDF _Single===

x: 1.9859185647696864
args: ()

Output: cdf single = x

cdf_single: 0.9764788165054519

===Scipy _CDF _Single===

x: 2.1711862584003434
args: ()

Output: cdf single = x

cdf_single: 0.9850414521610127

===Scipy _CDF _Single===

x: 2.3564539520310004
args: ()

Output: cdf single = x

cdf_single: 0.990774822494197

===Scipy _CDF _Single===

x: 2.541721645661658
args: ()

Output: cdf single = x

cdf_single: 0.9944846008900147

===Scipy _CDF _Single===

x: 2.726989339292315
args: ()

Output: cdf single = x

cdf_single: 0.9968042447980456

===Scipy _CDF _Single===

x: 2.9122570329229718
args: ()

Output: cdf single = x

cdf_single: 0.9982058638321417

===Scipy _CDF _Single===

x: 3.097524726553629
args: ()

Output: cdf single = x

cdf_single: 0.9990242794207345

===Scipy _CDF _Single===

x: 3.282792420184286
args: ()

Output: cdf single = x

cdf_single: 0.9994860783937789

===Scipy _CDF _Single===

x: 3.4680601138149436
args: ()

Output: cdf single = x

cdf_single: 0.9997378849970591

===Scipy _CDF _Single===

x: 3.6533278074456006
args: ()

Output: cdf single = x

cdf_single: 0.9998705682964553

===Scipy _CDF _Single===

x: 3.8385955010762576
args: ()

Output: cdf single = x

cdf_single: 0.9999381299570211
_cdf = _cdfvec(x, *args) = [0.00231984 0.00407522 0.00693706 0.01144582 0.01831022 0.02840934
 0.04276757 0.06249421 0.08868456 0.12228654 0.16394703 0.2138607
 0.2716504  0.33630763 0.40621445 0.47925396 0.55299886 0.62495069
 0.69279096 0.75460243 0.80902593 0.85533216 0.89340615 0.92365806
 0.94688613 0.96412104 0.97647882 0.98504145 0.99077482 0.9944846
 0.99680424 0.99820586 0.99902428 0.99948608 0.99973788 0.99987057
 0.99993813]
prob_less_or_equal: [0.00231984 0.00407522 0.00693706 0.01144582 0.01831022 0.02840934
 0.04276757 0.06249421 0.08868456 0.12228654 0.16394703 0.2138607
 0.2716504  0.33630763 0.40621445 0.47925396 0.55299886 0.62495069
 0.69279096 0.75460243 0.80902593 0.85533216 0.89340615 0.92365806
 0.94688613 0.96412104 0.97647882 0.98504145 0.99077482 0.9944846
 0.99680424 0.99820586 0.999      0.999      0.999      0.999
 0.999     ]
cdf_over: [0.99768016 0.99592478 0.99306294 0.98855418 0.98168978 0.97159066
 0.95723243 0.93750579 0.91131544 0.87771346 0.83605297 0.7861393
 0.7283496  0.66369237 0.59378555 0.52074604 0.44700114 0.37504931
 0.30720904 0.24539757 0.19097407 0.14466784 0.10659385 0.07634194
 0.05311387 0.03587896 0.02352118 0.01495855 0.00922518 0.0055154
 0.00319576 0.00179414 0.001      0.001      0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [17 16 20 12 23]
player: myles turner
stat: pts
condition: tue
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.07074594497680664

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (17.603387806402193, 6.0209771272542945)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.84063341, -2.67454741, -2.50846142, -2.34237542, -2.17628942,
       -2.01020342, -1.84411742, -1.67803142, -1.51194542, -1.34585942,
       -1.17977342, -1.01368743, -0.84760143, -0.68151543, -0.51542943,
       -0.34934343, -0.18325743, -0.01717143,  0.14891457,  0.31500056,
        0.48108656,  0.64717256,  0.81325856,  0.97934456,  1.14543056,
        1.31151656,  1.47760256,  1.64368855,  1.80977455,  1.97586055,
        2.14194655,  2.30803255,  2.47411855,  2.64020455,  2.80629055,
        2.97237655,  3.13846254])]

===Scipy _CDF===

x: [-2.84063341 -2.67454741 -2.50846142 -2.34237542 -2.17628942 -2.01020342
 -1.84411742 -1.67803142 -1.51194542 -1.34585942 -1.17977342 -1.01368743
 -0.84760143 -0.68151543 -0.51542943 -0.34934343 -0.18325743 -0.01717143
  0.14891457  0.31500056  0.48108656  0.64717256  0.81325856  0.97934456
  1.14543056  1.31151656  1.47760256  1.64368855  1.80977455  1.97586055
  2.14194655  2.30803255  2.47411855  2.64020455  2.80629055  2.97237655
  3.13846254]
args: ()

===Scipy _CDF _Single===

x: -2.840633412969256
args: ()

Output: cdf single = x

cdf_single: 0.002251201788442207

===Scipy _CDF _Single===

x: -2.6745474141579595
args: ()

Output: cdf single = x

cdf_single: 0.003741509699952804

===Scipy _CDF _Single===

x: -2.5084614153466633
args: ()

Output: cdf single = x

cdf_single: 0.006062910519443976

===Scipy _CDF _Single===

x: -2.3423754165353667
args: ()

Output: cdf single = x

cdf_single: 0.009580715004241243

===Scipy _CDF _Single===

x: -2.17628941772407
args: ()

Output: cdf single = x

cdf_single: 0.01476681316370406

===Scipy _CDF _Single===

x: -2.010203418912774
args: ()

Output: cdf single = x

cdf_single: 0.022204831858142187

===Scipy _CDF _Single===

x: -1.8441174201014774
args: ()

Output: cdf single = x

cdf_single: 0.03258301485521431

===Scipy _CDF _Single===

x: -1.6780314212901808
args: ()

Output: cdf single = x

cdf_single: 0.04667048257184286

===Scipy _CDF _Single===

x: -1.511945422478884
args: ()

Output: cdf single = x

cdf_single: 0.06527387370714316

===Scipy _CDF _Single===

x: -1.3458594236675876
args: ()

Output: cdf single = x

cdf_single: 0.0891739284325546

===Scipy _CDF _Single===

x: -1.1797734248562912
args: ()

Output: cdf single = x

cdf_single: 0.11904517091845407

===Scipy _CDF _Single===

x: -1.0136874260449946
args: ()

Output: cdf single = x

cdf_single: 0.1553659629078898

===Scipy _CDF _Single===

x: -0.8476014272336981
args: ()

Output: cdf single = x

cdf_single: 0.198329989619725

===Scipy _CDF _Single===

x: -0.6815154284224016
args: ()

Output: cdf single = x

cdf_single: 0.2477727038629137

===Scipy _CDF _Single===

x: -0.5154294296111053
args: ()

Output: cdf single = x

cdf_single: 0.3031264858639671

===Scipy _CDF _Single===

x: -0.3493434307998088
args: ()

Output: cdf single = x

cdf_single: 0.36341574837126106

===Scipy _CDF _Single===

x: -0.18325743198851258
args: ()

Output: cdf single = x

cdf_single: 0.4272980165352935

===Scipy _CDF _Single===

x: -0.017171433177216106
args: ()

Output: cdf single = x

cdf_single: 0.4931499259254989

===Scipy _CDF _Single===

x: 0.14891456563408037
args: ()

Output: cdf single = x

cdf_single: 0.5591894761728143

===Scipy _CDF _Single===

x: 0.31500056444537683
args: ()

Output: cdf single = x

cdf_single: 0.6236193873493631

===Scipy _CDF _Single===

x: 0.4810865632566733
args: ()

Output: cdf single = x

cdf_single: 0.6847725112676408

===Scipy _CDF _Single===

x: 0.6471725620679698
args: ()

Output: cdf single = x

cdf_single: 0.741239866456637

===Scipy _CDF _Single===

x: 0.8132585608792663
args: ()

Output: cdf single = x

cdf_single: 0.791965084811642

===Scipy _CDF _Single===

x: 0.9793445596905628
args: ()

Output: cdf single = x

cdf_single: 0.8362951198292746

===Scipy _CDF _Single===

x: 1.1454305585018592
args: ()

Output: cdf single = x

cdf_single: 0.8739845771350881

===Scipy _CDF _Single===

x: 1.3115165573131558
args: ()

Output: cdf single = x

cdf_single: 0.9051583482188597

===Scipy _CDF _Single===

x: 1.4776025561244521
args: ()

Output: cdf single = x

cdf_single: 0.9302429051060689

===Scipy _CDF _Single===

x: 1.6436885549357487
args: ()

Output: cdf single = x

cdf_single: 0.9498797243690822

===Scipy _CDF _Single===

x: 1.809774553747045
args: ()

Output: cdf single = x

cdf_single: 0.9648346222218607

===Scipy _CDF _Single===

x: 1.9758605525583415
args: ()

Output: cdf single = x

cdf_single: 0.9759147134820173

===Scipy _CDF _Single===

x: 2.141946551369638
args: ()

Output: cdf single = x

cdf_single: 0.9839011083607813

===Scipy _CDF _Single===

x: 2.3080325501809345
args: ()

Output: cdf single = x

cdf_single: 0.9895013369314155

===Scipy _CDF _Single===

x: 2.4741185489922315
args: ()

Output: cdf single = x

cdf_single: 0.9933217316020989

===Scipy _CDF _Single===

x: 2.640204547803528
args: ()

Output: cdf single = x

cdf_single: 0.9958571998953879

===Scipy _CDF _Single===

x: 2.8062905466148247
args: ()

Output: cdf single = x

cdf_single: 0.997494225914932

===Scipy _CDF _Single===

x: 2.972376545426121
args: ()

Output: cdf single = x

cdf_single: 0.998522479880146

===Scipy _CDF _Single===

x: 3.1384625442374174
args: ()

Output: cdf single = x

cdf_single: 0.999150816803414
_cdf = _cdfvec(x, *args) = [0.0022512  0.00374151 0.00606291 0.00958072 0.01476681 0.02220483
 0.03258301 0.04667048 0.06527387 0.08917393 0.11904517 0.15536596
 0.19832999 0.2477727  0.30312649 0.36341575 0.42729802 0.49314993
 0.55918948 0.62361939 0.68477251 0.74123987 0.79196508 0.83629512
 0.87398458 0.90515835 0.93024291 0.94987972 0.96483462 0.97591471
 0.98390111 0.98950134 0.99332173 0.9958572  0.99749423 0.99852248
 0.99915082]
prob_less_or_equal: [0.0022512  0.00374151 0.00606291 0.00958072 0.01476681 0.02220483
 0.03258301 0.04667048 0.06527387 0.08917393 0.11904517 0.15536596
 0.19832999 0.2477727  0.30312649 0.36341575 0.42729802 0.49314993
 0.55918948 0.62361939 0.68477251 0.74123987 0.79196508 0.83629512
 0.87398458 0.90515835 0.93024291 0.94987972 0.96483462 0.97591471
 0.98390111 0.98950134 0.99332173 0.9958572  0.99749423 0.99852248
 0.999     ]
cdf_over: [0.9977488  0.99625849 0.99393709 0.99041928 0.98523319 0.97779517
 0.96741699 0.95332952 0.93472613 0.91082607 0.88095483 0.84463404
 0.80167001 0.7522273  0.69687351 0.63658425 0.57270198 0.50685007
 0.44081052 0.37638061 0.31522749 0.25876013 0.20803492 0.16370488
 0.12601542 0.09484165 0.06975709 0.05012028 0.03516538 0.02408529
 0.01609889 0.01049866 0.00667827 0.0041428  0.00250577 0.00147752
 0.001     ]

===Test Distribute All Probs===

cond_data: [17 16 17 22 12 15 12 10 13 12 24 24 20 11 17 19 15 12 15 11 20 19 14 10
 16 18]
player: myles turner
stat: pts
condition: 2 before
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.10256385803222656

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (15.810735577380212, 5.407830400148151)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.83121612, -2.64629907, -2.46138203, -2.27646499, -2.09154795,
       -1.90663091, -1.72171386, -1.53679682, -1.35187978, -1.16696274,
       -0.9820457 , -0.79712866, -0.61221161, -0.42729457, -0.24237753,
       -0.05746049,  0.12745655,  0.31237359,  0.49729064,  0.68220768,
        0.86712472,  1.05204176,  1.2369588 ,  1.42187585,  1.60679289,
        1.79170993,  1.97662697,  2.16154401,  2.34646105,  2.5313781 ,
        2.71629514,  2.90121218,  3.08612922,  3.27104626,  3.45596331,
        3.64088035,  3.82579739])]

===Scipy _CDF===

x: [-2.83121612 -2.64629907 -2.46138203 -2.27646499 -2.09154795 -1.90663091
 -1.72171386 -1.53679682 -1.35187978 -1.16696274 -0.9820457  -0.79712866
 -0.61221161 -0.42729457 -0.24237753 -0.05746049  0.12745655  0.31237359
  0.49729064  0.68220768  0.86712472  1.05204176  1.2369588   1.42187585
  1.60679289  1.79170993  1.97662697  2.16154401  2.34646105  2.5313781
  2.71629514  2.90121218  3.08612922  3.27104626  3.45596331  3.64088035
  3.82579739]
args: ()

===Scipy _CDF _Single===

x: -2.8312161152392585
args: ()

Output: cdf single = x

cdf_single: 0.0023185688580798117

===Scipy _CDF _Single===

x: -2.6462990734672744
args: ()

Output: cdf single = x

cdf_single: 0.004068891675688945

===Scipy _CDF _Single===

x: -2.461382031695291
args: ()

Output: cdf single = x

cdf_single: 0.006920145231659079

===Scipy _CDF _Single===

x: -2.2764649899233067
args: ()

Output: cdf single = x

cdf_single: 0.011409096865033483

===Scipy _CDF _Single===

x: -2.0915479481513226
args: ()

Output: cdf single = x

cdf_single: 0.01823948648461343

===Scipy _CDF _Single===

x: -1.906630906379339
args: ()

Output: cdf single = x

cdf_single: 0.028284199979251065

===Scipy _CDF _Single===

x: -1.721713864607355
args: ()

Output: cdf single = x

cdf_single: 0.042560682255470425

===Scipy _CDF _Single===

x: -1.536796822835371
args: ()

Output: cdf single = x

cdf_single: 0.062171535859670134

===Scipy _CDF _Single===

x: -1.3518797810633871
args: ()

Output: cdf single = x

cdf_single: 0.08820688829020937

===Scipy _CDF _Single===

x: -1.1669627392914033
args: ()

Output: cdf single = x

cdf_single: 0.12161270862212514

===Scipy _CDF _Single===

x: -0.9820456975194194
args: ()

Output: cdf single = x

cdf_single: 0.16303866788382454

===Scipy _CDF _Single===

x: -0.7971286557474355
args: ()

Output: cdf single = x

cdf_single: 0.21268815770386607

===Scipy _CDF _Single===

x: -0.6122116139754515
args: ()

Output: cdf single = x

cdf_single: 0.27019887926140534

===Scipy _CDF _Single===

x: -0.42729457220346767
args: ()

Output: cdf single = x

cdf_single: 0.3345823928612989

===Scipy _CDF _Single===

x: -0.24237753043148377
args: ()

Output: cdf single = x

cdf_single: 0.40424382174921186

===Scipy _CDF _Single===

x: -0.05746048865949988
args: ()

Output: cdf single = x

cdf_single: 0.47708918978100445

===Scipy _CDF _Single===

x: 0.1274565531124837
args: ()

Output: cdf single = x

cdf_single: 0.5507104708730616

===Scipy _CDF _Single===

x: 0.3123735948844676
args: ()

Output: cdf single = x

cdf_single: 0.6226216923495659

===Scipy _CDF _Single===

x: 0.4972906366564515
args: ()

Output: cdf single = x

cdf_single: 0.6905079431624246

===Scipy _CDF _Single===

x: 0.6822076784284354
args: ()

Output: cdf single = x

cdf_single: 0.752446179946382

===Scipy _CDF _Single===

x: 0.8671247202004193
args: ()

Output: cdf single = x

cdf_single: 0.8070631613141529

===Scipy _CDF _Single===

x: 1.0520417619724032
args: ()

Output: cdf single = x

cdf_single: 0.8536098051471672

===Scipy _CDF _Single===

x: 1.236958803744387
args: ()

Output: cdf single = x

cdf_single: 0.8919488114078623

===Scipy _CDF _Single===

x: 1.421875845516371
args: ()

Output: cdf single = x

cdf_single: 0.9224688517875166

===Scipy _CDF _Single===

x: 1.6067928872883548
args: ()

Output: cdf single = x

cdf_single: 0.9459500954705423

===Scipy _CDF _Single===

x: 1.7917099290603389
args: ()

Output: cdf single = x

cdf_single: 0.9634102783903591

===Scipy _CDF _Single===

x: 1.9766269708323227
args: ()

Output: cdf single = x

cdf_single: 0.9759580944103587

===Scipy _CDF _Single===

x: 2.1615440126043066
args: ()

Output: cdf single = x

cdf_single: 0.9846733295185812

===Scipy _CDF _Single===

x: 2.3464610543762903
args: ()

Output: cdf single = x

cdf_single: 0.9905236766048979

===Scipy _CDF _Single===

x: 2.5313780961482744
args: ()

Output: cdf single = x

cdf_single: 0.9943192348508206

===Scipy _CDF _Single===

x: 2.7162951379202585
args: ()

Output: cdf single = x

cdf_single: 0.9966991481160729

===Scipy _CDF _Single===

x: 2.901212179692242
args: ()

Output: cdf single = x

cdf_single: 0.9981413895691502

===Scipy _CDF _Single===

x: 3.086129221464226
args: ()

Output: cdf single = x

cdf_single: 0.9989860966255527

===Scipy _CDF _Single===

x: 3.2710462632362103
args: ()

Output: cdf single = x

cdf_single: 0.9994642480992825

===Scipy _CDF _Single===

x: 3.4559633050081944
args: ()

Output: cdf single = x

cdf_single: 0.9997258350186267

===Scipy _CDF _Single===

x: 3.640880346780178
args: ()

Output: cdf single = x

cdf_single: 0.9998641463020534

===Scipy _CDF _Single===

x: 3.825797388552162
args: ()

Output: cdf single = x

cdf_single: 0.9999348252657749
_cdf = _cdfvec(x, *args) = [0.00231857 0.00406889 0.00692015 0.0114091  0.01823949 0.0282842
 0.04256068 0.06217154 0.08820689 0.12161271 0.16303867 0.21268816
 0.27019888 0.33458239 0.40424382 0.47708919 0.55071047 0.62262169
 0.69050794 0.75244618 0.80706316 0.85360981 0.89194881 0.92246885
 0.9459501  0.96341028 0.97595809 0.98467333 0.99052368 0.99431923
 0.99669915 0.99814139 0.9989861  0.99946425 0.99972584 0.99986415
 0.99993483]
prob_less_or_equal: [0.00231857 0.00406889 0.00692015 0.0114091  0.01823949 0.0282842
 0.04256068 0.06217154 0.08820689 0.12161271 0.16303867 0.21268816
 0.27019888 0.33458239 0.40424382 0.47708919 0.55071047 0.62262169
 0.69050794 0.75244618 0.80706316 0.85360981 0.89194881 0.92246885
 0.9459501  0.96341028 0.97595809 0.98467333 0.99052368 0.99431923
 0.99669915 0.99814139 0.9989861  0.999      0.999      0.999
 0.999     ]
cdf_over: [0.99768143 0.99593111 0.99307985 0.9885909  0.98176051 0.9717158
 0.95743932 0.93782846 0.91179311 0.87838729 0.83696133 0.78731184
 0.72980112 0.66541761 0.59575618 0.52291081 0.44928953 0.37737831
 0.30949206 0.24755382 0.19293684 0.14639019 0.10805119 0.07753115
 0.0540499  0.03658972 0.02404191 0.01532667 0.00947632 0.00568077
 0.00330085 0.00185861 0.0010139  0.001      0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [ 7 19 16 15 12 10 32 13 24 22 19 13 11 22 15 11 15 25 19 14 23 16 13]
player: myles turner
stat: pts
condition: home
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.12485289573669434

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (16.785838319428883, 5.74134934742476)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.83658742, -2.66241233, -2.48823725, -2.31406217, -2.13988709,
       -1.965712  , -1.79153692, -1.61736184, -1.44318675, -1.26901167,
       -1.09483659, -0.9206615 , -0.74648642, -0.57231134, -0.39813625,
       -0.22396117, -0.04978609,  0.124389  ,  0.29856408,  0.47273916,
        0.64691425,  0.82108933,  0.99526441,  1.16943949,  1.34361458,
        1.51778966,  1.69196474,  1.86613983,  2.04031491,  2.21448999,
        2.38866508,  2.56284016,  2.73701524,  2.91119033,  3.08536541,
        3.25954049,  3.43371558])]

===Scipy _CDF===

x: [-2.83658742 -2.66241233 -2.48823725 -2.31406217 -2.13988709 -1.965712
 -1.79153692 -1.61736184 -1.44318675 -1.26901167 -1.09483659 -0.9206615
 -0.74648642 -0.57231134 -0.39813625 -0.22396117 -0.04978609  0.124389
  0.29856408  0.47273916  0.64691425  0.82108933  0.99526441  1.16943949
  1.34361458  1.51778966  1.69196474  1.86613983  2.04031491  2.21448999
  2.38866508  2.56284016  2.73701524  2.91119033  3.08536541  3.25954049
  3.43371558]
args: ()

===Scipy _CDF _Single===

x: -2.8365874176832278
args: ()

Output: cdf single = x

cdf_single: 0.002279924684833913

===Scipy _CDF _Single===

x: -2.662412334529902
args: ()

Output: cdf single = x

cdf_single: 0.0038791387857456793

===Scipy _CDF _Single===

x: -2.4882372513765763
args: ()

Output: cdf single = x

cdf_single: 0.006418902962719569

===Scipy _CDF _Single===

x: -2.3140621682232507
args: ()

Output: cdf single = x

cdf_single: 0.010332156120430074

===Scipy _CDF _Single===

x: -2.1398870850699248
args: ()

Output: cdf single = x

cdf_single: 0.016181946539575567

===Scipy _CDF _Single===

x: -1.9657120019165992
args: ()

Output: cdf single = x

cdf_single: 0.024665943824001467

===Scipy _CDF _Single===

x: -1.7915369187632735
args: ()

Output: cdf single = x

cdf_single: 0.03660358782506223

===Scipy _CDF _Single===

x: -1.6173618356099477
args: ()

Output: cdf single = x

cdf_single: 0.0529000993754556

===Scipy _CDF _Single===

x: -1.4431867524566215
args: ()

Output: cdf single = x

cdf_single: 0.07448393516119023

===Scipy _CDF _Single===

x: -1.2690116693032958
args: ()

Output: cdf single = x

cdf_single: 0.10221845105556368

===Scipy _CDF _Single===

x: -1.09483658614997
args: ()

Output: cdf single = x

cdf_single: 0.13679411739887942

===Scipy _CDF _Single===

x: -0.9206615029966444
args: ()

Output: cdf single = x

cdf_single: 0.1786135905392755

===Scipy _CDF _Single===

x: -0.7464864198433186
args: ()

Output: cdf single = x

cdf_single: 0.22768681603280302

===Scipy _CDF _Single===

x: -0.5723113366899929
args: ()

Output: cdf single = x

cdf_single: 0.2835555353826821

===Scipy _CDF _Single===

x: -0.39813625353666715
args: ()

Output: cdf single = x

cdf_single: 0.3452648760682451

===Scipy _CDF _Single===

x: -0.2239611703833414
args: ()

Output: cdf single = x

cdf_single: 0.41139375866038563

===Scipy _CDF _Single===

x: -0.04978608723001598
args: ()

Output: cdf single = x

cdf_single: 0.4801464268581329

===Scipy _CDF _Single===

x: 0.12438899592330976
args: ()

Output: cdf single = x

cdf_single: 0.5494963571684653

===Scipy _CDF _Single===

x: 0.2985640790766355
args: ()

Output: cdf single = x

cdf_single: 0.6173636616603813

===Scipy _CDF _Single===

x: 0.47273916222996126
args: ()

Output: cdf single = x

cdf_single: 0.6818003585213708

===Scipy _CDF _Single===

x: 0.646914245383287
args: ()

Output: cdf single = x

cdf_single: 0.741156277185661

===Scipy _CDF _Single===

x: 0.8210893285366128
args: ()

Output: cdf single = x

cdf_single: 0.7942023059571931

===Scipy _CDF _Single===

x: 0.9952644116899385
args: ()

Output: cdf single = x

cdf_single: 0.8401961591511533

===Scipy _CDF _Single===

x: 1.1694394948432643
args: ()

Output: cdf single = x

cdf_single: 0.8788866973680387

===Scipy _CDF _Single===

x: 1.34361457799659
args: ()

Output: cdf single = x

cdf_single: 0.9104634735284266

===Scipy _CDF _Single===

x: 1.5177896611499158
args: ()

Output: cdf single = x

cdf_single: 0.9354662838564168

===Scipy _CDF _Single===

x: 1.6919647443032415
args: ()

Output: cdf single = x

cdf_single: 0.9546736520266541

===Scipy _CDF _Single===

x: 1.8661398274565673
args: ()

Output: cdf single = x

cdf_single: 0.9689890974744036

===Scipy _CDF _Single===

x: 2.040314910609893
args: ()

Output: cdf single = x

cdf_single: 0.9793405146733691

===Scipy _CDF _Single===

x: 2.2144899937632188
args: ()

Output: cdf single = x

cdf_single: 0.9866024548564248

===Scipy _CDF _Single===

x: 2.3886650769165443
args: ()

Output: cdf single = x

cdf_single: 0.991545145109507

===Scipy _CDF _Single===

x: 2.5628401600698703
args: ()

Output: cdf single = x

cdf_single: 0.9948090083838592

===Scipy _CDF _Single===

x: 2.7370152432231967
args: ()

Output: cdf single = x

cdf_single: 0.9969000289933027

===Scipy _CDF _Single===

x: 2.911190326376522
args: ()

Output: cdf single = x

cdf_single: 0.9981997268960193

===Scipy _CDF _Single===

x: 3.085365409529848
args: ()

Output: cdf single = x

cdf_single: 0.9989834889348899

===Scipy _CDF _Single===

x: 3.2595404926831737
args: ()

Output: cdf single = x

cdf_single: 0.999442035752062

===Scipy _CDF _Single===

x: 3.4337155758364997
args: ()

Output: cdf single = x

cdf_single: 0.9997023157176729
_cdf = _cdfvec(x, *args) = [0.00227992 0.00387914 0.0064189  0.01033216 0.01618195 0.02466594
 0.03660359 0.0529001  0.07448394 0.10221845 0.13679412 0.17861359
 0.22768682 0.28355554 0.34526488 0.41139376 0.48014643 0.54949636
 0.61736366 0.68180036 0.74115628 0.79420231 0.84019616 0.8788867
 0.91046347 0.93546628 0.95467365 0.9689891  0.97934051 0.98660245
 0.99154515 0.99480901 0.99690003 0.99819973 0.99898349 0.99944204
 0.99970232]
prob_less_or_equal: [0.00227992 0.00387914 0.0064189  0.01033216 0.01618195 0.02466594
 0.03660359 0.0529001  0.07448394 0.10221845 0.13679412 0.17861359
 0.22768682 0.28355554 0.34526488 0.41139376 0.48014643 0.54949636
 0.61736366 0.68180036 0.74115628 0.79420231 0.84019616 0.8788867
 0.91046347 0.93546628 0.95467365 0.9689891  0.97934051 0.98660245
 0.99154515 0.99480901 0.99690003 0.99819973 0.99898349 0.999
 0.999     ]
cdf_over: [0.99772008 0.99612086 0.9935811  0.98966784 0.98381805 0.97533406
 0.96339641 0.9470999  0.92551606 0.89778155 0.86320588 0.82138641
 0.77231318 0.71644446 0.65473512 0.58860624 0.51985357 0.45050364
 0.38263634 0.31819964 0.25884372 0.20579769 0.15980384 0.1211133
 0.08953653 0.06453372 0.04532635 0.0310109  0.02065949 0.01339755
 0.00845485 0.00519099 0.00309997 0.00180027 0.00101651 0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [ 7 19 16 15 12 10 32 13 24 22 19 13 11 22 15 11 15 25 19 14 23 16 13]
player: myles turner
stat: pts
condition: Indianapolis IN
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.06150221824645996

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (16.78584115982015, 5.74134929830066)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.83658794, -2.66241285, -2.48823777, -2.31406268, -2.1398876 ,
       -1.96571251, -1.79153743, -1.61736234, -1.44318726, -1.26901217,
       -1.09483709, -0.92066201, -0.74648692, -0.57231184, -0.39813675,
       -0.22396167, -0.04978658,  0.1243885 ,  0.29856359,  0.47273867,
        0.64691376,  0.82108884,  0.99526393,  1.16943901,  1.34361409,
        1.51778918,  1.69196426,  1.86613935,  2.04031443,  2.21448952,
        2.3886646 ,  2.56283969,  2.73701477,  2.91118986,  3.08536494,
        3.25954003,  3.43371511])]

===Scipy _CDF===

x: [-2.83658794 -2.66241285 -2.48823777 -2.31406268 -2.1398876  -1.96571251
 -1.79153743 -1.61736234 -1.44318726 -1.26901217 -1.09483709 -0.92066201
 -0.74648692 -0.57231184 -0.39813675 -0.22396167 -0.04978658  0.1243885
  0.29856359  0.47273867  0.64691376  0.82108884  0.99526393  1.16943901
  1.34361409  1.51778918  1.69196426  1.86613935  2.04031443  2.21448952
  2.3886646   2.56283969  2.73701477  2.91118986  3.08536494  3.25954003
  3.43371511]
args: ()

===Scipy _CDF _Single===

x: -2.83658793667901
args: ()

Output: cdf single = x

cdf_single: 0.002279920979244254

===Scipy _CDF _Single===

x: -2.6624128520354082
args: ()

Output: cdf single = x

cdf_single: 0.003879132821030988

===Scipy _CDF _Single===

x: -2.488237767391807
args: ()

Output: cdf single = x

cdf_single: 0.006418893648569125

===Scipy _CDF _Single===

x: -2.3140626827482054
args: ()

Output: cdf single = x

cdf_single: 0.010332142010722105

===Scipy _CDF _Single===

x: -2.139887598104604
args: ()

Output: cdf single = x

cdf_single: 0.016181925804100744

===Scipy _CDF _Single===

x: -1.9657125134610023
args: ()

Output: cdf single = x

cdf_single: 0.024665914262185788

===Scipy _CDF _Single===

x: -1.7915374288174006
args: ()

Output: cdf single = x

cdf_single: 0.036603546939557356

===Scipy _CDF _Single===

x: -1.6173623441737992
args: ()

Output: cdf single = x

cdf_single: 0.0529000445188737

===Scipy _CDF _Single===

x: -1.443187259530197
args: ()

Output: cdf single = x

cdf_single: 0.07448386375938074

===Scipy _CDF _Single===

x: -1.2690121748865957
args: ()

Output: cdf single = x

cdf_single: 0.10221836089621465

===Scipy _CDF _Single===

x: -1.094837090242994
args: ()

Output: cdf single = x

cdf_single: 0.13679400695710672

===Scipy _CDF _Single===

x: -0.9206620055993925
args: ()

Output: cdf single = x

cdf_single: 0.1786134592960183

===Scipy _CDF _Single===

x: -0.746486920955791
args: ()

Output: cdf single = x

cdf_single: 0.2276866647318585

===Scipy _CDF _Single===

x: -0.5723118363121893
args: ()

Output: cdf single = x

cdf_single: 0.28355536617219995

===Scipy _CDF _Single===

x: -0.39813675166858775
args: ()

Output: cdf single = x

cdf_single: 0.3452646924846593

===Scipy _CDF _Single===

x: -0.22396166702498618
args: ()

Output: cdf single = x

cdf_single: 0.4113935654362503

===Scipy _CDF _Single===

x: -0.049786582381384926
args: ()

Output: cdf single = x

cdf_single: 0.4801462295659802

===Scipy _CDF _Single===

x: 0.12438850226221665
args: ()

Output: cdf single = x

cdf_single: 0.5494961617439056

===Scipy _CDF _Single===

x: 0.29856358690581825
args: ()

Output: cdf single = x

cdf_single: 0.6173634738717307

===Scipy _CDF _Single===

x: 0.4727386715494198
args: ()

Output: cdf single = x

cdf_single: 0.681800183464007

===Scipy _CDF _Single===

x: 0.6469137561930214
args: ()

Output: cdf single = x

cdf_single: 0.7411561188742404

===Scipy _CDF _Single===

x: 0.8210888408366229
args: ()

Output: cdf single = x

cdf_single: 0.7942021670691357

===Scipy _CDF _Single===

x: 0.9952639254802246
args: ()

Output: cdf single = x

cdf_single: 0.8401960409454771

===Scipy _CDF _Single===

x: 1.1694390101238261
args: ()

Output: cdf single = x

cdf_single: 0.8788865997719293

===Scipy _CDF _Single===

x: 1.3436140947674278
args: ()

Output: cdf single = x

cdf_single: 0.9104633953571148

===Scipy _CDF _Single===

x: 1.5177891794110292
args: ()

Output: cdf single = x

cdf_single: 0.93546622311527

===Scipy _CDF _Single===

x: 1.6919642640546309
args: ()

Output: cdf single = x

cdf_single: 0.9546736062399641

===Scipy _CDF _Single===

x: 1.8661393486982325
args: ()

Output: cdf single = x

cdf_single: 0.9689890639920368

===Scipy _CDF _Single===

x: 2.040314433341834
args: ()

Output: cdf single = x

cdf_single: 0.9793404909206318

===Scipy _CDF _Single===

x: 2.2144895179854354
args: ()

Output: cdf single = x

cdf_single: 0.9866024385096611

===Scipy _CDF _Single===

x: 2.3886646026290372
args: ()

Output: cdf single = x

cdf_single: 0.991545134195846

===Scipy _CDF _Single===

x: 2.5628396872726387
args: ()

Output: cdf single = x

cdf_single: 0.99480900131532

===Scipy _CDF _Single===

x: 2.737014771916241
args: ()

Output: cdf single = x

cdf_single: 0.9969000245520101

===Scipy _CDF _Single===

x: 2.9111898565598424
args: ()

Output: cdf single = x

cdf_single: 0.9981997241888861

===Scipy _CDF _Single===

x: 3.085364941203444
args: ()

Output: cdf single = x

cdf_single: 0.9989834873341151

===Scipy _CDF _Single===

x: 3.2595400258470457
args: ()

Output: cdf single = x

cdf_single: 0.9994420348337899

===Scipy _CDF _Single===

x: 3.433715110490647
args: ()

Output: cdf single = x

cdf_single: 0.9997023152066588
_cdf = _cdfvec(x, *args) = [0.00227992 0.00387913 0.00641889 0.01033214 0.01618193 0.02466591
 0.03660355 0.05290004 0.07448386 0.10221836 0.13679401 0.17861346
 0.22768666 0.28355537 0.34526469 0.41139357 0.48014623 0.54949616
 0.61736347 0.68180018 0.74115612 0.79420217 0.84019604 0.8788866
 0.9104634  0.93546622 0.95467361 0.96898906 0.97934049 0.98660244
 0.99154513 0.994809   0.99690002 0.99819972 0.99898349 0.99944203
 0.99970232]
prob_less_or_equal: [0.00227992 0.00387913 0.00641889 0.01033214 0.01618193 0.02466591
 0.03660355 0.05290004 0.07448386 0.10221836 0.13679401 0.17861346
 0.22768666 0.28355537 0.34526469 0.41139357 0.48014623 0.54949616
 0.61736347 0.68180018 0.74115612 0.79420217 0.84019604 0.8788866
 0.9104634  0.93546622 0.95467361 0.96898906 0.97934049 0.98660244
 0.99154513 0.994809   0.99690002 0.99819972 0.99898349 0.999
 0.999     ]
cdf_over: [0.99772008 0.99612087 0.99358111 0.98966786 0.98381807 0.97533409
 0.96339645 0.94709996 0.92551614 0.89778164 0.86320599 0.82138654
 0.77231334 0.71644463 0.65473531 0.58860643 0.51985377 0.45050384
 0.38263653 0.31819982 0.25884388 0.20579783 0.15980396 0.1211134
 0.0895366  0.06453378 0.04532639 0.03101094 0.02065951 0.01339756
 0.00845487 0.005191   0.00309998 0.00180028 0.00101651 0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [ 7 19 16 15 12 10 32 13 24 22 19  8 19 11 23 15 25 19 14 23 16 13]
player: myles turner
stat: pts
condition: 7:00
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.0862877368927002

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (17.186735583247625, 6.016934370631446)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.77329543, -2.60709784, -2.44090025, -2.27470265, -2.10850506,
       -1.94230747, -1.77610988, -1.60991229, -1.4437147 , -1.27751711,
       -1.11131951, -0.94512192, -0.77892433, -0.61272674, -0.44652915,
       -0.28033156, -0.11413397,  0.05206363,  0.21826122,  0.38445881,
        0.5506564 ,  0.71685399,  0.88305158,  1.04924917,  1.21544677,
        1.38164436,  1.54784195,  1.71403954,  1.88023713,  2.04643472,
        2.21263231,  2.3788299 ,  2.5450275 ,  2.71122509,  2.87742268,
        3.04362027,  3.20981786])]

===Scipy _CDF===

x: [-2.77329543 -2.60709784 -2.44090025 -2.27470265 -2.10850506 -1.94230747
 -1.77610988 -1.60991229 -1.4437147  -1.27751711 -1.11131951 -0.94512192
 -0.77892433 -0.61272674 -0.44652915 -0.28033156 -0.11413397  0.05206363
  0.21826122  0.38445881  0.5506564   0.71685399  0.88305158  1.04924917
  1.21544677  1.38164436  1.54784195  1.71403954  1.88023713  2.04643472
  2.21263231  2.3788299   2.5450275   2.71122509  2.87742268  3.04362027
  3.20981786]
args: ()

===Scipy _CDF _Single===

x: -2.7732954284320104
args: ()

Output: cdf single = x

cdf_single: 0.0027745858978466998

===Scipy _CDF _Single===

x: -2.6070978370338085
args: ()

Output: cdf single = x

cdf_single: 0.004565663271013943

===Scipy _CDF _Single===

x: -2.4409002456356075
args: ()

Output: cdf single = x

cdf_single: 0.007325350529022917

===Scipy _CDF _Single===

x: -2.2747026542374056
args: ()

Output: cdf single = x

cdf_single: 0.0114618865834257

===Scipy _CDF _Single===

x: -2.108505062839204
args: ()

Output: cdf single = x

cdf_single: 0.017493662646229965

===Scipy _CDF _Single===

x: -1.9423074714410027
args: ()

Output: cdf single = x

cdf_single: 0.026049944538084752

===Scipy _CDF _Single===

x: -1.7761098800428012
args: ()

Output: cdf single = x

cdf_single: 0.037857404043290785

===Scipy _CDF _Single===

x: -1.6099122886445998
args: ()

Output: cdf single = x

cdf_single: 0.05370850293660995

===Scipy _CDF _Single===

x: -1.443714697246398
args: ()

Output: cdf single = x

cdf_single: 0.07440962273395604

===Scipy _CDF _Single===

x: -1.2775171058481964
args: ()

Output: cdf single = x

cdf_single: 0.10070987259362829

===Scipy _CDF _Single===

x: -1.1113195144499948
args: ()

Output: cdf single = x

cdf_single: 0.13321542126740285

===Scipy _CDF _Single===

x: -0.9451219230517933
args: ()

Output: cdf single = x

cdf_single: 0.17229831705499424

===Scipy _CDF _Single===

x: -0.7789243316535918
args: ()

Output: cdf single = x

cdf_single: 0.21801214497294744

===Scipy _CDF _Single===

x: -0.6127267402553902
args: ()

Output: cdf single = x

cdf_single: 0.2700285191859751

===Scipy _CDF _Single===

x: -0.4465291488571887
args: ()

Output: cdf single = x

cdf_single: 0.32760753092095607

===Scipy _CDF _Single===

x: -0.2803315574589872
args: ()

Output: cdf single = x

cdf_single: 0.38961157082266856

===Scipy _CDF _Single===

x: -0.11413396606078595
args: ()

Output: cdf single = x

cdf_single: 0.4545657985600655

===Scipy _CDF _Single===

x: 0.05206362533741558
args: ()

Output: cdf single = x

cdf_single: 0.5207610017931222

===Scipy _CDF _Single===

x: 0.2182612167356171
args: ()

Output: cdf single = x

cdf_single: 0.5863872047298683

===Scipy _CDF _Single===

x: 0.3844588081338186
args: ()

Output: cdf single = x

cdf_single: 0.6496807896844624

===Scipy _CDF _Single===

x: 0.5506563995320202
args: ()

Output: cdf single = x

cdf_single: 0.7090653807520769

===Scipy _CDF _Single===

x: 0.7168539909302217
args: ()

Output: cdf single = x

cdf_single: 0.7632679032440622

===Scipy _CDF _Single===

x: 0.8830515823284232
args: ()

Output: cdf single = x

cdf_single: 0.8113957988215678

===Scipy _CDF _Single===

x: 1.0492491737266247
args: ()

Output: cdf single = x

cdf_single: 0.852968274034709

===Scipy _CDF _Single===

x: 1.2154467651248262
args: ()

Output: cdf single = x

cdf_single: 0.8879021295289167

===Scipy _CDF _Single===

x: 1.3816443565230279
args: ()

Output: cdf single = x

cdf_single: 0.9164595363369556

===Scipy _CDF _Single===

x: 1.5478419479212293
args: ()

Output: cdf single = x

cdf_single: 0.9391698228916375

===Scipy _CDF _Single===

x: 1.7140395393194308
args: ()

Output: cdf single = x

cdf_single: 0.9567392677653221

===Scipy _CDF _Single===

x: 1.8802371307176324
args: ()

Output: cdf single = x

cdf_single: 0.9699621163700433

===Scipy _CDF _Single===

x: 2.046434722115834
args: ()

Output: cdf single = x

cdf_single: 0.9796431905979386

===Scipy _CDF _Single===

x: 2.2126323135140353
args: ()

Output: cdf single = x

cdf_single: 0.98653849732142

===Scipy _CDF _Single===

x: 2.378829904912237
args: ()

Output: cdf single = x

cdf_single: 0.9913161559858181

===Scipy _CDF _Single===

x: 2.545027496310439
args: ()

Output: cdf single = x

cdf_single: 0.9945365433181726

===Scipy _CDF _Single===

x: 2.7112250877086406
args: ()

Output: cdf single = x

cdf_single: 0.9966482448387596

===Scipy _CDF _Single===

x: 2.877422679106842
args: ()

Output: cdf single = x

cdf_single: 0.997995309230103

===Scipy _CDF _Single===

x: 3.0436202705050435
args: ()

Output: cdf single = x

cdf_single: 0.9988312500754949

===Scipy _CDF _Single===

x: 3.2098178619032454
args: ()

Output: cdf single = x

cdf_single: 0.9993359044788325
_cdf = _cdfvec(x, *args) = [0.00277459 0.00456566 0.00732535 0.01146189 0.01749366 0.02604994
 0.0378574  0.0537085  0.07440962 0.10070987 0.13321542 0.17229832
 0.21801214 0.27002852 0.32760753 0.38961157 0.4545658  0.520761
 0.5863872  0.64968079 0.70906538 0.7632679  0.8113958  0.85296827
 0.88790213 0.91645954 0.93916982 0.95673927 0.96996212 0.97964319
 0.9865385  0.99131616 0.99453654 0.99664824 0.99799531 0.99883125
 0.9993359 ]
prob_less_or_equal: [0.00277459 0.00456566 0.00732535 0.01146189 0.01749366 0.02604994
 0.0378574  0.0537085  0.07440962 0.10070987 0.13321542 0.17229832
 0.21801214 0.27002852 0.32760753 0.38961157 0.4545658  0.520761
 0.5863872  0.64968079 0.70906538 0.7632679  0.8113958  0.85296827
 0.88790213 0.91645954 0.93916982 0.95673927 0.96996212 0.97964319
 0.9865385  0.99131616 0.99453654 0.99664824 0.99799531 0.99883125
 0.999     ]
cdf_over: [0.99722541 0.99543434 0.99267465 0.98853811 0.98250634 0.97395006
 0.9621426  0.9462915  0.92559038 0.89929013 0.86678458 0.82770168
 0.78198786 0.72997148 0.67239247 0.61038843 0.5454342  0.479239
 0.4136128  0.35031921 0.29093462 0.2367321  0.1886042  0.14703173
 0.11209787 0.08354046 0.06083018 0.04326073 0.03003788 0.02035681
 0.0134615  0.00868384 0.00546346 0.00335176 0.00200469 0.00116875
 0.001     ]

===Test Distribute All Probs===

cond_data: [19 22]
player: myles turner
stat: pts
condition: A Thompson F opp starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.12187409400939941

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (20.503946398209337, 7.013071608836886)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.85238031e+00, -2.70978944e+00, -2.56719857e+00, -2.42460770e+00,
       -2.28201682e+00, -2.13942595e+00, -1.99683508e+00, -1.85424421e+00,
       -1.71165333e+00, -1.56906246e+00, -1.42647159e+00, -1.28388072e+00,
       -1.14128984e+00, -9.98698971e-01, -8.56108098e-01, -7.13517226e-01,
       -5.70926353e-01, -4.28335481e-01, -2.85744608e-01, -1.43153736e-01,
       -5.62862955e-04,  1.42028010e-01,  2.84618882e-01,  4.27209755e-01,
        5.69800627e-01,  7.12391500e-01,  8.54982372e-01,  9.97573245e-01,
        1.14016412e+00,  1.28275499e+00,  1.42534586e+00,  1.56793674e+00,
        1.71052761e+00,  1.85311848e+00,  1.99570935e+00,  2.13830023e+00,
        2.28089110e+00])]

===Scipy _CDF===

x: [-2.85238031e+00 -2.70978944e+00 -2.56719857e+00 -2.42460770e+00
 -2.28201682e+00 -2.13942595e+00 -1.99683508e+00 -1.85424421e+00
 -1.71165333e+00 -1.56906246e+00 -1.42647159e+00 -1.28388072e+00
 -1.14128984e+00 -9.98698971e-01 -8.56108098e-01 -7.13517226e-01
 -5.70926353e-01 -4.28335481e-01 -2.85744608e-01 -1.43153736e-01
 -5.62862955e-04  1.42028010e-01  2.84618882e-01  4.27209755e-01
  5.69800627e-01  7.12391500e-01  8.54982372e-01  9.97573245e-01
  1.14016412e+00  1.28275499e+00  1.42534586e+00  1.56793674e+00
  1.71052761e+00  1.85311848e+00  1.99570935e+00  2.13830023e+00
  2.28089110e+00]
args: ()

===Scipy _CDF _Single===

x: -2.852380314069969
args: ()

Output: cdf single = x

cdf_single: 0.0021696574917972056

===Scipy _CDF _Single===

x: -2.70978944151422
args: ()

Output: cdf single = x

cdf_single: 0.0033662966743595126

===Scipy _CDF _Single===

x: -2.5671985689584713
args: ()

Output: cdf single = x

cdf_single: 0.0051261941886481125

===Scipy _CDF _Single===

x: -2.4246076964027226
args: ()

Output: cdf single = x

cdf_single: 0.007662468557344547

===Scipy _CDF _Single===

x: -2.282016823846974
args: ()

Output: cdf single = x

cdf_single: 0.011244173504014073

===Scipy _CDF _Single===

x: -2.139425951291225
args: ()

Output: cdf single = x

cdf_single: 0.016200593528548964

===Scipy _CDF _Single===

x: -1.9968350787354765
args: ()

Output: cdf single = x

cdf_single: 0.02292155077520232

===Scipy _CDF _Single===

x: -1.8542442061797277
args: ()

Output: cdf single = x

cdf_single: 0.03185211515271915

===Scipy _CDF _Single===

x: -1.7116533336239788
args: ()

Output: cdf single = x

cdf_single: 0.04348028668706332

===Scipy _CDF _Single===

x: -1.56906246106823
args: ()

Output: cdf single = x

cdf_single: 0.058316692822889406

===Scipy _CDF _Single===

x: -1.4264715885124815
args: ()

Output: cdf single = x

cdf_single: 0.07686613114749719

===Scipy _CDF _Single===

x: -1.2838807159567327
args: ()

Output: cdf single = x

cdf_single: 0.09959184781231688

===Scipy _CDF _Single===

x: -1.141289843400984
args: ()

Output: cdf single = x

cdf_single: 0.12687466365174227

===Scipy _CDF _Single===

x: -0.9986989708452352
args: ()

Output: cdf single = x

cdf_single: 0.15897026968772157

===Scipy _CDF _Single===

x: -0.8561080982894865
args: ()

Output: cdf single = x

cdf_single: 0.19596899481662156

===Scipy _CDF _Single===

x: -0.7135172257337378
args: ()

Output: cdf single = x

cdf_single: 0.23776287886844405

===Scipy _CDF _Single===

x: -0.5709263531779893
args: ()

Output: cdf single = x

cdf_single: 0.2840247831300237

===Scipy _CDF _Single===

x: -0.4283354806222406
args: ()

Output: cdf single = x

cdf_single: 0.3342034453617143

===Scipy _CDF _Single===

x: -0.2857446080664919
args: ()

Output: cdf single = x

cdf_single: 0.3875368680888736

===Scipy _CDF _Single===

x: -0.14315373551074317
args: ()

Output: cdf single = x

cdf_single: 0.4430843835588001

===Scipy _CDF _Single===

x: -0.0005628629549944554
args: ()

Output: cdf single = x

cdf_single: 0.4997754501810377

===Scipy _CDF _Single===

x: 0.14202800960075426
args: ()

Output: cdf single = x

cdf_single: 0.556471059256366

===Scipy _CDF _Single===

x: 0.284618882156503
args: ()

Output: cdf single = x

cdf_single: 0.612031928269758

===Scipy _CDF _Single===

x: 0.4272097547122517
args: ()

Output: cdf single = x

cdf_single: 0.6653867215080946

===Scipy _CDF _Single===

x: 0.5698006272680004
args: ()

Output: cdf single = x

cdf_single: 0.7155935349713628

===Scipy _CDF _Single===

x: 0.7123914998237492
args: ()

Output: cdf single = x

cdf_single: 0.761888811148567

===Scipy _CDF _Single===

x: 0.8549823723794978
args: ()

Output: cdf single = x

cdf_single: 0.8037195467193093

===Scipy _CDF _Single===

x: 0.9975732449352466
args: ()

Output: cdf single = x

cdf_single: 0.8407568298882406

===Scipy _CDF _Single===

x: 1.1401641174909953
args: ()

Output: cdf single = x

cdf_single: 0.8728910331910202

===Scipy _CDF _Single===

x: 1.282754990046744
args: ()

Output: cdf single = x

cdf_single: 0.9002110361646255

===Scipy _CDF _Single===

x: 1.4253458626024926
args: ()

Output: cdf single = x

cdf_single: 0.9229713755095614

===Scipy _CDF _Single===

x: 1.5679367351582414
args: ()

Output: cdf single = x

cdf_single: 0.941552051204094

===Scipy _CDF _Single===

x: 1.7105276077139906
args: ()

Output: cdf single = x

cdf_single: 0.956415823626479

===Scipy _CDF _Single===

x: 1.8531184802697394
args: ()

Output: cdf single = x

cdf_single: 0.968067310712123

===Scipy _CDF _Single===

x: 1.9957093528254881
args: ()

Output: cdf single = x

cdf_single: 0.9770172157750573

===Scipy _CDF _Single===

x: 2.138300225381237
args: ()

Output: cdf single = x

cdf_single: 0.9837538078556813

===Scipy _CDF _Single===

x: 2.2808910979369856
args: ()

Output: cdf single = x

cdf_single: 0.9887225540714843
_cdf = _cdfvec(x, *args) = [0.00216966 0.0033663  0.00512619 0.00766247 0.01124417 0.01620059
 0.02292155 0.03185212 0.04348029 0.05831669 0.07686613 0.09959185
 0.12687466 0.15897027 0.19596899 0.23776288 0.28402478 0.33420345
 0.38753687 0.44308438 0.49977545 0.55647106 0.61203193 0.66538672
 0.71559353 0.76188881 0.80371955 0.84075683 0.87289103 0.90021104
 0.92297138 0.94155205 0.95641582 0.96806731 0.97701722 0.98375381
 0.98872255]
prob_less_or_equal: [0.00216966 0.0033663  0.00512619 0.00766247 0.01124417 0.01620059
 0.02292155 0.03185212 0.04348029 0.05831669 0.07686613 0.09959185
 0.12687466 0.15897027 0.19596899 0.23776288 0.28402478 0.33420345
 0.38753687 0.44308438 0.49977545 0.55647106 0.61203193 0.66538672
 0.71559353 0.76188881 0.80371955 0.84075683 0.87289103 0.90021104
 0.92297138 0.94155205 0.95641582 0.96806731 0.97701722 0.98375381
 0.98872255]
cdf_over: [0.99783034 0.9966337  0.99487381 0.99233753 0.98875583 0.98379941
 0.97707845 0.96814788 0.95651971 0.94168331 0.92313387 0.90040815
 0.87312534 0.84102973 0.80403101 0.76223712 0.71597522 0.66579655
 0.61246313 0.55691562 0.50022455 0.44352894 0.38796807 0.33461328
 0.28440647 0.23811119 0.19628045 0.15924317 0.12710897 0.09978896
 0.07702862 0.05844795 0.04358418 0.03193269 0.02298278 0.01624619
 0.01127745]

stat_name: reb
player_stat_model_name: loggamma
player_stat_model_avg: 6.73
player_stat_model_max: 16.46

===Test Distribute All Probs===

cond_data: [10  4  5  4  9  4  3  9  2  6  4  7 11  6  6  6  6  4  7  6  5  6  4  6
  6  5  7  7  8  8  9  8  8 10  7  9  5  4  5  4  7 14  6  8  6  9 11  9]
player: myles turner
stat: reb
condition: all
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.35658907890319824

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-171.05332993643884, 33.482365899170425, 202.43383160067808)

===Scipy CDF===

test_argsreduce = goodargs = [array([5.12369196, 5.15355843, 5.18342489, 5.21329136, 5.24315783,
       5.2730243 , 5.30289077, 5.33275723, 5.3626237 , 5.39249017,
       5.42235664, 5.4522231 , 5.48208957, 5.51195604, 5.54182251,
       5.57168897]), array([202.4338316, 202.4338316, 202.4338316, 202.4338316, 202.4338316,
       202.4338316, 202.4338316, 202.4338316, 202.4338316, 202.4338316,
       202.4338316, 202.4338316, 202.4338316, 202.4338316, 202.4338316,
       202.4338316])]

===Scipy _CDF===

x: [5.12369196 5.15355843 5.18342489 5.21329136 5.24315783 5.2730243
 5.30289077 5.33275723 5.3626237  5.39249017 5.42235664 5.4522231
 5.48208957 5.51195604 5.54182251 5.57168897]
args: (array([202.4338316, 202.4338316, 202.4338316, 202.4338316, 202.4338316,
       202.4338316, 202.4338316, 202.4338316, 202.4338316, 202.4338316,
       202.4338316, 202.4338316, 202.4338316, 202.4338316, 202.4338316,
       202.4338316]),)

===Scipy _CDF _Single===

x: 5.1236919593154955
args: (202.43383160067808,)

Output: cdf single = x

cdf_single: 0.005344482724213894

===Scipy _CDF _Single===

x: 5.1535584270260335
args: (202.43383160067808,)

Output: cdf single = x

cdf_single: 0.015732593241859223

===Scipy _CDF _Single===

x: 5.1834248947365715
args: (202.43383160067808,)

Output: cdf single = x

cdf_single: 0.040434901337220545

===Scipy _CDF _Single===

x: 5.2132913624471104
args: (202.43383160067808,)

Output: cdf single = x

cdf_single: 0.09073981215587439

===Scipy _CDF _Single===

x: 5.2431578301576485
args: (202.43383160067808,)

Output: cdf single = x

cdf_single: 0.17807262477855768

===Scipy _CDF _Single===

x: 5.2730242978681865
args: (202.43383160067808,)

Output: cdf single = x

cdf_single: 0.3067207690155981

===Scipy _CDF _Single===

x: 5.3028907655787245
args: (202.43383160067808,)

Output: cdf single = x

cdf_single: 0.46674793942005344

===Scipy _CDF _Single===

x: 5.332757233289263
args: (202.43383160067808,)

Output: cdf single = x

cdf_single: 0.6340075685412148

===Scipy _CDF _Single===

x: 5.3626237009998015
args: (202.43383160067808,)

Output: cdf single = x

cdf_single: 0.7801493091814615

===Scipy _CDF _Single===

x: 5.3924901687103395
args: (202.43383160067808,)

Output: cdf single = x

cdf_single: 0.8863321786220617

===Scipy _CDF _Single===

x: 5.4223566364208775
args: (202.43383160067808,)

Output: cdf single = x

cdf_single: 0.9501398393968729

===Scipy _CDF _Single===

x: 5.452223104131416
args: (202.43383160067808,)

Output: cdf single = x

cdf_single: 0.9816751637876162

===Scipy _CDF _Single===

x: 5.4820895718419544
args: (202.43383160067808,)

Output: cdf single = x

cdf_single: 0.9944195627833573

===Scipy _CDF _Single===

x: 5.5119560395524925
args: (202.43383160067808,)

Output: cdf single = x

cdf_single: 0.9986060580758249

===Scipy _CDF _Single===

x: 5.5418225072630305
args: (202.43383160067808,)

Output: cdf single = x

cdf_single: 0.9997170715039876

===Scipy _CDF _Single===

x: 5.571688974973569
args: (202.43383160067808,)

Output: cdf single = x

cdf_single: 0.9999537543609629
_cdf = _cdfvec(x, *args) = [0.00534448 0.01573259 0.0404349  0.09073981 0.17807262 0.30672077
 0.46674794 0.63400757 0.78014931 0.88633218 0.95013984 0.98167516
 0.99441956 0.99860606 0.99971707 0.99995375]
prob_less_or_equal: [0.00534448 0.01573259 0.0404349  0.09073981 0.17807262 0.30672077
 0.46674794 0.63400757 0.78014931 0.88633218 0.95013984 0.98167516
 0.99441956 0.99860606 0.999      0.999     ]
cdf_over: [0.99465552 0.98426741 0.9595651  0.90926019 0.82192738 0.69327923
 0.53325206 0.36599243 0.21985069 0.11366782 0.04986016 0.01832484
 0.00558044 0.00139394 0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [10  4  5  4  9  4  7 11  6  6  6  6  7  6  6  5  7  8  9  8  8 10  7  9
  5  4  5  4  7 14  6  8  6  9 11  9]
player: myles turner
stat: reb
condition: 0 lag
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.3053603172302246

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-151.26155461993488, 31.40939400322392, 155.3184369035743)

===Scipy CDF===

test_argsreduce = goodargs = [array([4.83172498, 4.86356259, 4.8954002 , 4.92723781, 4.95907542,
       4.99091302, 5.02275063, 5.05458824, 5.08642585, 5.11826346,
       5.15010107, 5.18193868, 5.21377629, 5.2456139 , 5.2774515 ,
       5.30928911]), array([155.3184369, 155.3184369, 155.3184369, 155.3184369, 155.3184369,
       155.3184369, 155.3184369, 155.3184369, 155.3184369, 155.3184369,
       155.3184369, 155.3184369, 155.3184369, 155.3184369, 155.3184369,
       155.3184369])]

===Scipy _CDF===

x: [4.83172498 4.86356259 4.8954002  4.92723781 4.95907542 4.99091302
 5.02275063 5.05458824 5.08642585 5.11826346 5.15010107 5.18193868
 5.21377629 5.2456139  5.2774515  5.30928911]
args: (array([155.3184369, 155.3184369, 155.3184369, 155.3184369, 155.3184369,
       155.3184369, 155.3184369, 155.3184369, 155.3184369, 155.3184369,
       155.3184369, 155.3184369, 155.3184369, 155.3184369, 155.3184369,
       155.3184369]),)

===Scipy _CDF _Single===

x: 4.831724980251379
args: (155.3184369035743,)

Output: cdf single = x

cdf_single: 0.005462249678008638

===Scipy _CDF _Single===

x: 4.863562589085773
args: (155.3184369035743,)

Output: cdf single = x

cdf_single: 0.014878812894189354

===Scipy _CDF _Single===

x: 4.895400197920167
args: (155.3184369035743,)

Output: cdf single = x

cdf_single: 0.03611597123367155

===Scipy _CDF _Single===

x: 4.927237806754561
args: (155.3184369035743,)

Output: cdf single = x

cdf_single: 0.0780809502083191

===Scipy _CDF _Single===

x: 4.959075415588955
args: (155.3184369035743,)

Output: cdf single = x

cdf_single: 0.15043361053477108

===Scipy _CDF _Single===

x: 4.990913024423349
args: (155.3184369035743,)

Output: cdf single = x

cdf_single: 0.258809587590754

===Scipy _CDF _Single===

x: 5.0227506332577425
args: (155.3184369035743,)

Output: cdf single = x

cdf_single: 0.39921977863242697

===Scipy _CDF _Single===

x: 5.054588242092136
args: (155.3184369035743,)

Output: cdf single = x

cdf_single: 0.5558469875159169

===Scipy _CDF _Single===

x: 5.08642585092653
args: (155.3184369035743,)

Output: cdf single = x

cdf_single: 0.7055712796494601

===Scipy _CDF _Single===

x: 5.118263459760924
args: (155.3184369035743,)

Output: cdf single = x

cdf_single: 0.8276282437150851

===Scipy _CDF _Single===

x: 5.150101068595318
args: (155.3184369035743,)

Output: cdf single = x

cdf_single: 0.9120587842915417

===Scipy _CDF _Single===

x: 5.181938677429712
args: (155.3184369035743,)

Output: cdf single = x

cdf_single: 0.961359678521692

===Scipy _CDF _Single===

x: 5.213776286264106
args: (155.3184369035743,)

Output: cdf single = x

cdf_single: 0.9855313637344262

===Scipy _CDF _Single===

x: 5.2456138950985
args: (155.3184369035743,)

Output: cdf single = x

cdf_single: 0.9954273437619559

===Scipy _CDF _Single===

x: 5.277451503932894
args: (155.3184369035743,)

Output: cdf single = x

cdf_single: 0.9987911753934788

===Scipy _CDF _Single===

x: 5.309289112767288
args: (155.3184369035743,)

Output: cdf single = x

cdf_single: 0.99973496393554
_cdf = _cdfvec(x, *args) = [0.00546225 0.01487881 0.03611597 0.07808095 0.15043361 0.25880959
 0.39921978 0.55584699 0.70557128 0.82762824 0.91205878 0.96135968
 0.98553136 0.99542734 0.99879118 0.99973496]
prob_less_or_equal: [0.00546225 0.01487881 0.03611597 0.07808095 0.15043361 0.25880959
 0.39921978 0.55584699 0.70557128 0.82762824 0.91205878 0.96135968
 0.98553136 0.99542734 0.99879118 0.999     ]
cdf_over: [0.99453775 0.98512119 0.96388403 0.92191905 0.84956639 0.74119041
 0.60078022 0.44415301 0.29442872 0.17237176 0.08794122 0.03864032
 0.01446864 0.00457266 0.00120882 0.001     ]

===Test Distribute All Probs===

cond_data: [10  4  5  4  9  4  3  9]
player: myles turner
stat: reb
condition: P Siakam PF starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.5667741298675537

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-101.21874346367358, 22.67039083157686, 113.74100817286654)

===Scipy CDF===

test_argsreduce = goodargs = [array([4.48685438, 4.53096478, 4.57507518, 4.61918558, 4.66329598,
       4.70740638, 4.75151678, 4.79562718, 4.83973758, 4.88384798,
       4.92795838, 4.97206878, 5.01617918, 5.06028958, 5.10439998,
       5.14851038]), array([113.74100817, 113.74100817, 113.74100817, 113.74100817,
       113.74100817, 113.74100817, 113.74100817, 113.74100817,
       113.74100817, 113.74100817, 113.74100817, 113.74100817,
       113.74100817, 113.74100817, 113.74100817, 113.74100817])]

===Scipy _CDF===

x: [4.48685438 4.53096478 4.57507518 4.61918558 4.66329598 4.70740638
 4.75151678 4.79562718 4.83973758 4.88384798 4.92795838 4.97206878
 5.01617918 5.06028958 5.10439998 5.14851038]
args: (array([113.74100817, 113.74100817, 113.74100817, 113.74100817,
       113.74100817, 113.74100817, 113.74100817, 113.74100817,
       113.74100817, 113.74100817, 113.74100817, 113.74100817,
       113.74100817, 113.74100817, 113.74100817, 113.74100817]),)

===Scipy _CDF _Single===

x: 4.486854382853991
args: (113.74100817286654,)

Output: cdf single = x

cdf_single: 0.006228453331681644

===Scipy _CDF _Single===

x: 4.530964782512701
args: (113.74100817286654,)

Output: cdf single = x

cdf_single: 0.019605244326385104

===Scipy _CDF _Single===

x: 4.57507518217141
args: (113.74100817286654,)

Output: cdf single = x

cdf_single: 0.05274918679706583

===Scipy _CDF _Single===

x: 4.61918558183012
args: (113.74100817286654,)

Output: cdf single = x

cdf_single: 0.12116852341667204

===Scipy _CDF _Single===

x: 4.6632959814888295
args: (113.74100817286654,)

Output: cdf single = x

cdf_single: 0.23791124434937574

===Scipy _CDF _Single===

x: 4.707406381147539
args: (113.74100817286654,)

Output: cdf single = x

cdf_single: 0.4012030954605032

===Scipy _CDF _Single===

x: 4.751516780806249
args: (113.74100817286654,)

Output: cdf single = x

cdf_single: 0.5868281993641549

===Scipy _CDF _Single===

x: 4.795627180464958
args: (113.74100817286654,)

Output: cdf single = x

cdf_single: 0.7567848422157545

===Scipy _CDF _Single===

x: 4.839737580123668
args: (113.74100817286654,)

Output: cdf single = x

cdf_single: 0.8809470295957

===Scipy _CDF _Single===

x: 4.883847979782377
args: (113.74100817286654,)

Output: cdf single = x

cdf_single: 0.9526157222839136

===Scipy _CDF _Single===

x: 4.927958379441087
args: (113.74100817286654,)

Output: cdf single = x

cdf_single: 0.9849680113125888

===Scipy _CDF _Single===

x: 4.972068779099796
args: (113.74100817286654,)

Output: cdf single = x

cdf_single: 0.9962674661710826

===Scipy _CDF _Single===

x: 5.016179178758506
args: (113.74100817286654,)

Output: cdf single = x

cdf_single: 0.9992867939096172

===Scipy _CDF _Single===

x: 5.0602895784172155
args: (113.74100817286654,)

Output: cdf single = x

cdf_single: 0.9998968283850717

===Scipy _CDF _Single===

x: 5.104399978075925
args: (113.74100817286654,)

Output: cdf single = x

cdf_single: 0.999988880548008

===Scipy _CDF _Single===

x: 5.148510377734635
args: (113.74100817286654,)

Output: cdf single = x

cdf_single: 0.9999991212860263
_cdf = _cdfvec(x, *args) = [0.00622845 0.01960524 0.05274919 0.12116852 0.23791124 0.4012031
 0.5868282  0.75678484 0.88094703 0.95261572 0.98496801 0.99626747
 0.99928679 0.99989683 0.99998888 0.99999912]
prob_less_or_equal: [0.00622845 0.01960524 0.05274919 0.12116852 0.23791124 0.4012031
 0.5868282  0.75678484 0.88094703 0.95261572 0.98496801 0.99626747
 0.999      0.999      0.999      0.999     ]
cdf_over: [0.99377155 0.98039476 0.94725081 0.87883148 0.76208876 0.5987969
 0.4131718  0.24321516 0.11905297 0.04738428 0.01503199 0.00373253
 0.001      0.001      0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [10  4  5  4  9  4  3  9  7 11  6  6  6  6  4  7  6  5  9]
player: myles turner
stat: reb
condition: A Nesmith SF starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.5877797603607178

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-60.14362084579004, 16.660652612849276, 54.67560594031851)

===Scipy CDF===

test_argsreduce = goodargs = [array([3.63993064, 3.69995229, 3.75997395, 3.81999561, 3.88001727,
       3.94003893, 4.00006059, 4.06008224, 4.1201039 , 4.18012556,
       4.24014722, 4.30016888, 4.36019054, 4.42021219, 4.48023385,
       4.54025551]), array([54.67560594, 54.67560594, 54.67560594, 54.67560594, 54.67560594,
       54.67560594, 54.67560594, 54.67560594, 54.67560594, 54.67560594,
       54.67560594, 54.67560594, 54.67560594, 54.67560594, 54.67560594,
       54.67560594])]

===Scipy _CDF===

x: [3.63993064 3.69995229 3.75997395 3.81999561 3.88001727 3.94003893
 4.00006059 4.06008224 4.1201039  4.18012556 4.24014722 4.30016888
 4.36019054 4.42021219 4.48023385 4.54025551]
args: (array([54.67560594, 54.67560594, 54.67560594, 54.67560594, 54.67560594,
       54.67560594, 54.67560594, 54.67560594, 54.67560594, 54.67560594,
       54.67560594, 54.67560594, 54.67560594, 54.67560594, 54.67560594,
       54.67560594]),)

===Scipy _CDF _Single===

x: 3.6399306350712557
args: (54.67560594031851,)

Output: cdf single = x

cdf_single: 0.006665665399551419

===Scipy _CDF _Single===

x: 3.6999522934802886
args: (54.67560594031851,)

Output: cdf single = x

cdf_single: 0.018930023280027394

===Scipy _CDF _Single===

x: 3.7599739518893216
args: (54.67560594031851,)

Output: cdf single = x

cdf_single: 0.047429871932769006

===Scipy _CDF _Single===

x: 3.819995610298354
args: (54.67560594031851,)

Output: cdf single = x

cdf_single: 0.10449150165970728

===Scipy _CDF _Single===

x: 3.880017268707387
args: (54.67560594031851,)

Output: cdf single = x

cdf_single: 0.2020489619134821

===Scipy _CDF _Single===

x: 3.94003892711642
args: (54.67560594031851,)

Output: cdf single = x

cdf_single: 0.3431321688936652

===Scipy _CDF _Single===

x: 4.0000605855254525
args: (54.67560594031851,)

Output: cdf single = x

cdf_single: 0.5139889551103771

===Scipy _CDF _Single===

x: 4.0600822439344855
args: (54.67560594031851,)

Output: cdf single = x

cdf_single: 0.6854320813728045

===Scipy _CDF _Single===

x: 4.120103902343518
args: (54.67560594031851,)

Output: cdf single = x

cdf_single: 0.8263795516510344

===Scipy _CDF _Single===

x: 4.180125560752551
args: (54.67560594031851,)

Output: cdf single = x

cdf_single: 0.9201950378453295

===Scipy _CDF _Single===

x: 4.240147219161584
args: (54.67560594031851,)

Output: cdf single = x

cdf_single: 0.9701174522191973

===Scipy _CDF _Single===

x: 4.300168877570617
args: (54.67560594031851,)

Output: cdf single = x

cdf_single: 0.9910738188279767

===Scipy _CDF _Single===

x: 4.36019053597965
args: (54.67560594031851,)

Output: cdf single = x

cdf_single: 0.9979157619369264

===Scipy _CDF _Single===

x: 4.420212194388683
args: (54.67560594031851,)

Output: cdf single = x

cdf_single: 0.9996271622702964

===Scipy _CDF _Single===

x: 4.480233852797716
args: (54.67560594031851,)

Output: cdf single = x

cdf_single: 0.9999499307104058

===Scipy _CDF _Single===

x: 4.540255511206748
args: (54.67560594031851,)

Output: cdf single = x

cdf_single: 0.9999950557775865
_cdf = _cdfvec(x, *args) = [0.00666567 0.01893002 0.04742987 0.1044915  0.20204896 0.34313217
 0.51398896 0.68543208 0.82637955 0.92019504 0.97011745 0.99107382
 0.99791576 0.99962716 0.99994993 0.99999506]
prob_less_or_equal: [0.00666567 0.01893002 0.04742987 0.1044915  0.20204896 0.34313217
 0.51398896 0.68543208 0.82637955 0.92019504 0.97011745 0.99107382
 0.99791576 0.999      0.999      0.999     ]
cdf_over: [0.99333433 0.98106998 0.95257013 0.8955085  0.79795104 0.65686783
 0.48601104 0.31456792 0.17362045 0.07980496 0.02988255 0.00892618
 0.00208424 0.001      0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [10  4  5  4  9  4  3  9  2  6  4  7 11  6  6  6  6  4  7  6  5  6  4  6
  6  5  7  7  8  8  9  8  8 10  7  9  5  4  5  4  7 14  6  8  6  9 11  9]
player: myles turner
stat: reb
condition: M Turner C starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.49775123596191406

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-127.28846730355266, 27.363460545475316, 134.18081823589725)

===Scipy CDF===

test_argsreduce = goodargs = [array([4.6700404 , 4.70658549, 4.74313057, 4.77967566, 4.81622074,
       4.85276583, 4.88931091, 4.925856  , 4.96240109, 4.99894617,
       5.03549126, 5.07203634, 5.10858143, 5.14512651, 5.1816716 ,
       5.21821668]), array([134.18081824, 134.18081824, 134.18081824, 134.18081824,
       134.18081824, 134.18081824, 134.18081824, 134.18081824,
       134.18081824, 134.18081824, 134.18081824, 134.18081824,
       134.18081824, 134.18081824, 134.18081824, 134.18081824])]

===Scipy _CDF===

x: [4.6700404  4.70658549 4.74313057 4.77967566 4.81622074 4.85276583
 4.88931091 4.925856   4.96240109 4.99894617 5.03549126 5.07203634
 5.10858143 5.14512651 5.1816716  5.21821668]
args: (array([134.18081824, 134.18081824, 134.18081824, 134.18081824,
       134.18081824, 134.18081824, 134.18081824, 134.18081824,
       134.18081824, 134.18081824, 134.18081824, 134.18081824,
       134.18081824, 134.18081824, 134.18081824, 134.18081824]),)

===Scipy _CDF _Single===

x: 4.67004040264502
args: (134.18081823589725,)

Output: cdf single = x

cdf_single: 0.005744818201425631

===Scipy _CDF _Single===

x: 4.7065854879546105
args: (134.18081823589725,)

Output: cdf single = x

cdf_single: 0.01648535051237204

===Scipy _CDF _Single===

x: 4.7431305732642
args: (134.18081823589725,)

Output: cdf single = x

cdf_single: 0.04156982143457411

===Scipy _CDF _Single===

x: 4.77967565857379
args: (134.18081823589725,)

Output: cdf single = x

cdf_single: 0.09204021326123034

===Scipy _CDF _Single===

x: 4.816220743883381
args: (134.18081823589725,)

Output: cdf single = x

cdf_single: 0.17905259265195544

===Scipy _CDF _Single===

x: 4.852765829192971
args: (134.18081823589725,)

Output: cdf single = x

cdf_single: 0.30687740047831724

===Scipy _CDF _Single===

x: 4.889310914502561
args: (134.18081823589725,)

Output: cdf single = x

cdf_single: 0.46596260432329867

===Scipy _CDF _Single===

x: 4.925855999812152
args: (134.18081823589725,)

Output: cdf single = x

cdf_single: 0.6326972525213613

===Scipy _CDF _Single===

x: 4.9624010851217415
args: (134.18081823589725,)

Output: cdf single = x

cdf_single: 0.7789521548163565

===Scipy _CDF _Single===

x: 4.998946170431331
args: (134.18081823589725,)

Output: cdf single = x

cdf_single: 0.8856344997242565

===Scipy _CDF _Single===

x: 5.035491255740921
args: (134.18081823589725,)

Output: cdf single = x

cdf_single: 0.9499149137237404

===Scipy _CDF _Single===

x: 5.072036341050512
args: (134.18081823589725,)

Output: cdf single = x

cdf_single: 0.9816886076977833

===Scipy _CDF _Single===

x: 5.108581426360102
args: (134.18081823589725,)

Output: cdf single = x

cdf_single: 0.9944808258625591

===Scipy _CDF _Single===

x: 5.145126511669692
args: (134.18081823589725,)

Output: cdf single = x

cdf_single: 0.9986445401648167

===Scipy _CDF _Single===

x: 5.181671596979283
args: (134.18081823589725,)

Output: cdf single = x

cdf_single: 0.9997317576608657

===Scipy _CDF _Single===

x: 5.2182166822888725
args: (134.18081823589725,)

Output: cdf single = x

cdf_single: 0.9999576832642469
_cdf = _cdfvec(x, *args) = [0.00574482 0.01648535 0.04156982 0.09204021 0.17905259 0.3068774
 0.4659626  0.63269725 0.77895215 0.8856345  0.94991491 0.98168861
 0.99448083 0.99864454 0.99973176 0.99995768]
prob_less_or_equal: [0.00574482 0.01648535 0.04156982 0.09204021 0.17905259 0.3068774
 0.4659626  0.63269725 0.77895215 0.8856345  0.94991491 0.98168861
 0.99448083 0.99864454 0.999      0.999     ]
cdf_over: [0.99425518 0.98351465 0.95843018 0.90795979 0.82094741 0.6931226
 0.5340374  0.36730275 0.22104785 0.1143655  0.05008509 0.01831139
 0.00551917 0.00135546 0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [10  4  9  4  6  4  7 11  4  7  6  5  6  9  6]
player: myles turner
stat: reb
condition: A Nembhard PG starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.39310169219970703

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-68.50304639879863, 18.214110419886893, 62.04384653995106)

===Scipy CDF===

test_argsreduce = goodargs = [array([3.78843895, 3.84334144, 3.89824393, 3.95314642, 4.00804891,
       4.0629514 , 4.11785389, 4.17275638, 4.22765887, 4.28256135,
       4.33746384, 4.39236633, 4.44726882, 4.50217131, 4.5570738 ,
       4.61197629]), array([62.04384654, 62.04384654, 62.04384654, 62.04384654, 62.04384654,
       62.04384654, 62.04384654, 62.04384654, 62.04384654, 62.04384654,
       62.04384654, 62.04384654, 62.04384654, 62.04384654, 62.04384654,
       62.04384654])]

===Scipy _CDF===

x: [3.78843895 3.84334144 3.89824393 3.95314642 4.00804891 4.0629514
 4.11785389 4.17275638 4.22765887 4.28256135 4.33746384 4.39236633
 4.44726882 4.50217131 4.5570738  4.61197629]
args: (array([62.04384654, 62.04384654, 62.04384654, 62.04384654, 62.04384654,
       62.04384654, 62.04384654, 62.04384654, 62.04384654, 62.04384654,
       62.04384654, 62.04384654, 62.04384654, 62.04384654, 62.04384654,
       62.04384654]),)

===Scipy _CDF _Single===

x: 3.788438952443066
args: (62.04384653995106,)

Output: cdf single = x

cdf_single: 0.0064430118378270744

===Scipy _CDF _Single===

x: 3.8433414416092764
args: (62.04384653995106,)

Output: cdf single = x

cdf_single: 0.018029605684299895

===Scipy _CDF _Single===

x: 3.898243930775487
args: (62.04384653995106,)

Output: cdf single = x

cdf_single: 0.044683318502940536

===Scipy _CDF _Single===

x: 3.9531464199416972
args: (62.04384653995106,)

Output: cdf single = x

cdf_single: 0.0978013402494302

===Scipy _CDF _Single===

x: 4.008048909107908
args: (62.04384653995106,)

Output: cdf single = x

cdf_single: 0.18878988069696143

===Scipy _CDF _Single===

x: 4.062951398274118
args: (62.04384653995106,)

Output: cdf single = x

cdf_single: 0.32164789587834725

===Scipy _CDF _Single===

x: 4.1178538874403285
args: (62.04384653995106,)

Output: cdf single = x

cdf_single: 0.48557399011679514

===Scipy _CDF _Single===

x: 4.1727563766065385
args: (62.04384653995106,)

Output: cdf single = x

cdf_single: 0.6549170699082122

===Scipy _CDF _Single===

x: 4.227658865772749
args: (62.04384653995106,)

Output: cdf single = x

cdf_single: 0.7999714362971213

===Scipy _CDF _Single===

x: 4.282561354938959
args: (62.04384653995106,)

Output: cdf single = x

cdf_single: 0.9019469016920344

===Scipy _CDF _Single===

x: 4.33746384410517
args: (62.04384653995106,)

Output: cdf single = x

cdf_single: 0.9601543324549519

===Scipy _CDF _Single===

x: 4.39236633327138
args: (62.04384653995106,)

Output: cdf single = x

cdf_single: 0.9868253056837859

===Scipy _CDF _Single===

x: 4.44726882243759
args: (62.04384653995106,)

Output: cdf single = x

cdf_single: 0.9965184269577811

===Scipy _CDF _Single===

x: 4.502171311603801
args: (62.04384653995106,)

Output: cdf single = x

cdf_single: 0.9992774022613915

===Scipy _CDF _Single===

x: 4.557073800770011
args: (62.04384653995106,)

Output: cdf single = x

cdf_single: 0.9998842428671597

===Scipy _CDF _Single===

x: 4.611976289936222
args: (62.04384653995106,)

Output: cdf single = x

cdf_single: 0.9999859364927022
_cdf = _cdfvec(x, *args) = [0.00644301 0.01802961 0.04468332 0.09780134 0.18878988 0.3216479
 0.48557399 0.65491707 0.79997144 0.9019469  0.96015433 0.98682531
 0.99651843 0.9992774  0.99988424 0.99998594]
prob_less_or_equal: [0.00644301 0.01802961 0.04468332 0.09780134 0.18878988 0.3216479
 0.48557399 0.65491707 0.79997144 0.9019469  0.96015433 0.98682531
 0.99651843 0.999      0.999      0.999     ]
cdf_over: [0.99355699 0.98197039 0.95531668 0.90219866 0.81121012 0.6783521
 0.51442601 0.34508293 0.20002856 0.0980531  0.03984567 0.01317469
 0.00348157 0.001      0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [10  4  5  9  6  6  6  6  4  7  6  5  6  4  6  5  7  7  8  8  8  8 10  7
  9  5  4  5  4  7 14  6  8  9 11  9]
player: myles turner
stat: reb
condition: T Haliburton PG starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.3854069709777832

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-94.81012940978388, 22.811162120379304, 86.95303768312631)

===Scipy CDF===

test_argsreduce = goodargs = [array([4.17822327, 4.22206146, 4.26589965, 4.30973783, 4.35357602,
       4.39741421, 4.4412524 , 4.48509058, 4.52892877, 4.57276696,
       4.61660515, 4.66044333, 4.70428152, 4.74811971, 4.79195789,
       4.83579608]), array([86.95303768, 86.95303768, 86.95303768, 86.95303768, 86.95303768,
       86.95303768, 86.95303768, 86.95303768, 86.95303768, 86.95303768,
       86.95303768, 86.95303768, 86.95303768, 86.95303768, 86.95303768,
       86.95303768])]

===Scipy _CDF===

x: [4.17822327 4.22206146 4.26589965 4.30973783 4.35357602 4.39741421
 4.4412524  4.48509058 4.52892877 4.57276696 4.61660515 4.66044333
 4.70428152 4.74811971 4.79195789 4.83579608]
args: (array([86.95303768, 86.95303768, 86.95303768, 86.95303768, 86.95303768,
       86.95303768, 86.95303768, 86.95303768, 86.95303768, 86.95303768,
       86.95303768, 86.95303768, 86.95303768, 86.95303768, 86.95303768,
       86.95303768]),)

===Scipy _CDF _Single===

x: 4.178223270993922
args: (86.95303768312631,)

Output: cdf single = x

cdf_single: 0.005888038375796413

===Scipy _CDF _Single===

x: 4.222061458400719
args: (86.95303768312631,)

Output: cdf single = x

cdf_single: 0.01601785411025644

===Scipy _CDF _Single===

x: 4.265899645807515
args: (86.95303768312631,)

Output: cdf single = x

cdf_single: 0.038878177879518236

===Scipy _CDF _Single===

x: 4.309737833214312
args: (86.95303768312631,)

Output: cdf single = x

cdf_single: 0.08404927696959164

===Scipy _CDF _Single===

x: 4.353576020621108
args: (86.95303768312631,)

Output: cdf single = x

cdf_single: 0.16174830974513726

===Scipy _CDF _Single===

x: 4.397414208027905
args: (86.95303768312631,)

Output: cdf single = x

cdf_single: 0.277391182684721

===Scipy _CDF _Single===

x: 4.4412523954347005
args: (86.95303768312631,)

Output: cdf single = x

cdf_single: 0.425380281651633

===Scipy _CDF _Single===

x: 4.485090582841496
args: (86.95303768312631,)

Output: cdf single = x

cdf_single: 0.5871473248906871

===Scipy _CDF _Single===

x: 4.528928770248293
args: (86.95303768312631,)

Output: cdf single = x

cdf_single: 0.7371568577380145

===Scipy _CDF _Single===

x: 4.572766957655089
args: (86.95303768312631,)

Output: cdf single = x

cdf_single: 0.8543241725264095

===Scipy _CDF _Single===

x: 4.616605145061886
args: (86.95303768312631,)

Output: cdf single = x

cdf_single: 0.9308324116596166

===Scipy _CDF _Single===

x: 4.660443332468682
args: (86.95303768312631,)

Output: cdf single = x

cdf_single: 0.9722741076496355

===Scipy _CDF _Single===

x: 4.704281519875478
args: (86.95303768312631,)

Output: cdf single = x

cdf_single: 0.9907437589177543

===Scipy _CDF _Single===

x: 4.7481197072822745
args: (86.95303768312631,)

Output: cdf single = x

cdf_single: 0.9974592668388821

===Scipy _CDF _Single===

x: 4.79195789468907
args: (86.95303768312631,)

Output: cdf single = x

cdf_single: 0.9994336865328233

===Scipy _CDF _Single===

x: 4.835796082095867
args: (86.95303768312631,)

Output: cdf single = x

cdf_single: 0.9998987445350287
_cdf = _cdfvec(x, *args) = [0.00588804 0.01601785 0.03887818 0.08404928 0.16174831 0.27739118
 0.42538028 0.58714732 0.73715686 0.85432417 0.93083241 0.97227411
 0.99074376 0.99745927 0.99943369 0.99989874]
prob_less_or_equal: [0.00588804 0.01601785 0.03887818 0.08404928 0.16174831 0.27739118
 0.42538028 0.58714732 0.73715686 0.85432417 0.93083241 0.97227411
 0.99074376 0.99745927 0.999      0.999     ]
cdf_over: [0.99411196 0.98398215 0.96112182 0.91595072 0.83825169 0.72260882
 0.57461972 0.41285268 0.26284314 0.14567583 0.06916759 0.02772589
 0.00925624 0.00254073 0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [10  7 11  6  6  6  4  7  6  5  5  4  5  4  7 14  6  8  6  9 11  9]
player: myles turner
stat: reb
condition: B Hield SG bench
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.2955148220062256

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-129.19201374225395, 28.201467205509164, 126.02835656996368)

===Scipy CDF===

test_argsreduce = goodargs = [array([4.59876828, 4.63422742, 4.66968657, 4.70514572, 4.74060487,
       4.77606402, 4.81152316, 4.84698231, 4.88244146, 4.91790061,
       4.95335976, 4.9888189 , 5.02427805, 5.0597372 , 5.09519635,
       5.1306555 ]), array([126.02835657, 126.02835657, 126.02835657, 126.02835657,
       126.02835657, 126.02835657, 126.02835657, 126.02835657,
       126.02835657, 126.02835657, 126.02835657, 126.02835657,
       126.02835657, 126.02835657, 126.02835657, 126.02835657])]

===Scipy _CDF===

x: [4.59876828 4.63422742 4.66968657 4.70514572 4.74060487 4.77606402
 4.81152316 4.84698231 4.88244146 4.91790061 4.95335976 4.9888189
 5.02427805 5.0597372  5.09519635 5.1306555 ]
args: (array([126.02835657, 126.02835657, 126.02835657, 126.02835657,
       126.02835657, 126.02835657, 126.02835657, 126.02835657,
       126.02835657, 126.02835657, 126.02835657, 126.02835657,
       126.02835657, 126.02835657, 126.02835657, 126.02835657]),)

===Scipy _CDF _Single===

x: 4.5987682767412394
args: (126.02835656996368,)

Output: cdf single = x

cdf_single: 0.005590971510979633

===Scipy _CDF _Single===

x: 4.634227424760483
args: (126.02835656996368,)

Output: cdf single = x

cdf_single: 0.015132149737596917

===Scipy _CDF _Single===

x: 4.669686572779727
args: (126.02835656996368,)

Output: cdf single = x

cdf_single: 0.036565354252112485

===Scipy _CDF _Single===

x: 4.705145720798971
args: (126.02835656996368,)

Output: cdf single = x

cdf_single: 0.07881527235146045

===Scipy _CDF _Single===

x: 4.740604868818214
args: (126.02835656996368,)

Output: cdf single = x

cdf_single: 0.15156331447141805

===Scipy _CDF _Single===

x: 4.776064016837458
args: (126.02835656996368,)

Output: cdf single = x

cdf_single: 0.2604582009827816

===Scipy _CDF _Single===

x: 4.811523164856702
args: (126.02835656996368,)

Output: cdf single = x

cdf_single: 0.4014672378501825

===Scipy _CDF _Single===

x: 4.846982312875946
args: (126.02835656996368,)

Output: cdf single = x

cdf_single: 0.558622154374715

===Scipy _CDF _Single===

x: 4.88244146089519
args: (126.02835656996368,)

Output: cdf single = x

cdf_single: 0.7085774012917125

===Scipy _CDF _Single===

x: 4.917900608914434
args: (126.02835656996368,)

Output: cdf single = x

cdf_single: 0.8304142968517684

===Scipy _CDF _Single===

x: 4.953359756933677
args: (126.02835656996368,)

Output: cdf single = x

cdf_single: 0.914230232694419

===Scipy _CDF _Single===

x: 4.988818904952922
args: (126.02835656996368,)

Output: cdf single = x

cdf_single: 0.9627663380164992

===Scipy _CDF _Single===

x: 5.024278052972165
args: (126.02835656996368,)

Output: cdf single = x

cdf_single: 0.9862822979316502

===Scipy _CDF _Single===

x: 5.059737200991409
args: (126.02835656996368,)

Output: cdf single = x

cdf_single: 0.9957554341417755

===Scipy _CDF _Single===

x: 5.095196349010653
args: (126.02835656996368,)

Output: cdf single = x

cdf_single: 0.9989077706120983

===Scipy _CDF _Single===

x: 5.130655497029896
args: (126.02835656996368,)

Output: cdf single = x

cdf_single: 0.9997684661608882
_cdf = _cdfvec(x, *args) = [0.00559097 0.01513215 0.03656535 0.07881527 0.15156331 0.2604582
 0.40146724 0.55862215 0.7085774  0.8304143  0.91423023 0.96276634
 0.9862823  0.99575543 0.99890777 0.99976847]
prob_less_or_equal: [0.00559097 0.01513215 0.03656535 0.07881527 0.15156331 0.2604582
 0.40146724 0.55862215 0.7085774  0.8304143  0.91423023 0.96276634
 0.9862823  0.99575543 0.99890777 0.999     ]
cdf_over: [0.99440903 0.98486785 0.96343465 0.92118473 0.84843669 0.7395418
 0.59853276 0.44137785 0.2914226  0.1695857  0.08576977 0.03723366
 0.0137177  0.00424457 0.00109223 0.001     ]

===Test Distribute All Probs===

cond_data: [10  9  4  2  6  4  7 11  6  6  6  6  4  7  6  5  6  4  6  6  5  7  7  8
  9  8  8 10  9  5  4  4 14  6  9]
player: myles turner
stat: reb
condition: I Jackson SF bench
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.6800150871276855

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-193.2898134471378, 36.54869409934047, 238.32378351833162)

===Scipy CDF===

test_argsreduce = goodargs = [array([5.3022363 , 5.32959706, 5.35695781, 5.38431857, 5.41167933,
       5.43904009, 5.46640085, 5.49376161, 5.52112237, 5.54848312,
       5.57584388, 5.60320464, 5.6305654 , 5.65792616, 5.68528692,
       5.71264768]), array([238.32378352, 238.32378352, 238.32378352, 238.32378352,
       238.32378352, 238.32378352, 238.32378352, 238.32378352,
       238.32378352, 238.32378352, 238.32378352, 238.32378352,
       238.32378352, 238.32378352, 238.32378352, 238.32378352])]

===Scipy _CDF===

x: [5.3022363  5.32959706 5.35695781 5.38431857 5.41167933 5.43904009
 5.46640085 5.49376161 5.52112237 5.54848312 5.57584388 5.60320464
 5.6305654  5.65792616 5.68528692 5.71264768]
args: (array([238.32378352, 238.32378352, 238.32378352, 238.32378352,
       238.32378352, 238.32378352, 238.32378352, 238.32378352,
       238.32378352, 238.32378352, 238.32378352, 238.32378352,
       238.32378352, 238.32378352, 238.32378352, 238.32378352]),)

===Scipy _CDF _Single===

x: 5.302236296607784
args: (238.32378351833162,)

Output: cdf single = x

cdf_single: 0.005377356252582428

===Scipy _CDF _Single===

x: 5.3295970553063565
args: (238.32378351833162,)

Output: cdf single = x

cdf_single: 0.015794253026220326

===Scipy _CDF _Single===

x: 5.356957814004929
args: (238.32378351833162,)

Output: cdf single = x

cdf_single: 0.04049204457685109

===Scipy _CDF _Single===

x: 5.384318572703502
args: (238.32378351833162,)

Output: cdf single = x

cdf_single: 0.09064466916555426

===Scipy _CDF _Single===

x: 5.411679331402074
args: (238.32378351833162,)

Output: cdf single = x

cdf_single: 0.17750817156553803

===Scipy _CDF _Single===

x: 5.439040090100647
args: (238.32378351833162,)

Output: cdf single = x

cdf_single: 0.30527940977977036

===Scipy _CDF _Single===

x: 5.4664008487992195
args: (238.32378351833162,)

Output: cdf single = x

cdf_single: 0.4641980372400849

===Scipy _CDF _Single===

x: 5.493761607497793
args: (238.32378351833162,)

Output: cdf single = x

cdf_single: 0.6305792375460919

===Scipy _CDF _Single===

x: 5.521122366196365
args: (238.32378351833162,)

Output: cdf single = x

cdf_single: 0.7765309474747306

===Scipy _CDF _Single===

x: 5.548483124894937
args: (238.32378351833162,)

Output: cdf single = x

cdf_single: 0.8832940278075534

===Scipy _CDF _Single===

x: 5.57584388359351
args: (238.32378351833162,)

Output: cdf single = x

cdf_single: 0.9480996800058086

===Scipy _CDF _Single===

x: 5.6032046422920825
args: (238.32378351833162,)

Output: cdf single = x

cdf_single: 0.98057821513124

===Scipy _CDF _Single===

x: 5.630565400990656
args: (238.32378351833162,)

Output: cdf single = x

cdf_single: 0.9939478643566939

===Scipy _CDF _Single===

x: 5.657926159689228
args: (238.32378351833162,)

Output: cdf single = x

cdf_single: 0.9984442716282804

===Scipy _CDF _Single===

x: 5.685286918387801
args: (238.32378351833162,)

Output: cdf single = x

cdf_single: 0.9996729730273727

===Scipy _CDF _Single===

x: 5.712647677086373
args: (238.32378351833162,)

Output: cdf single = x

cdf_single: 0.9999442440747357
_cdf = _cdfvec(x, *args) = [0.00537736 0.01579425 0.04049204 0.09064467 0.17750817 0.30527941
 0.46419804 0.63057924 0.77653095 0.88329403 0.94809968 0.98057822
 0.99394786 0.99844427 0.99967297 0.99994424]
prob_less_or_equal: [0.00537736 0.01579425 0.04049204 0.09064467 0.17750817 0.30527941
 0.46419804 0.63057924 0.77653095 0.88329403 0.94809968 0.98057822
 0.99394786 0.99844427 0.999      0.999     ]
cdf_over: [0.99462264 0.98420575 0.95950796 0.90935533 0.82249183 0.69472059
 0.53580196 0.36942076 0.22346905 0.11670597 0.05190032 0.01942178
 0.00605214 0.00155573 0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [10  4  9  4  3  9  4  7 11  6  6  6  6  4  7  6  5  6  4  6  6  5  7  7
  8  8  9  8  8 10  7  9]
player: myles turner
stat: reb
condition: B Mathurin SG bench
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.3839728832244873

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-58.11893866664176, 16.68105983698443, 49.263094312351896)

===Scipy CDF===

test_argsreduce = goodargs = [array([3.51410152, 3.57404975, 3.63399797, 3.6939462 , 3.75389443,
       3.81384266, 3.87379089, 3.93373912, 3.99368735, 4.05363558,
       4.11358381, 4.17353204, 4.23348027, 4.2934285 , 4.35337673,
       4.41332496]), array([49.26309431, 49.26309431, 49.26309431, 49.26309431, 49.26309431,
       49.26309431, 49.26309431, 49.26309431, 49.26309431, 49.26309431,
       49.26309431, 49.26309431, 49.26309431, 49.26309431, 49.26309431,
       49.26309431])]

===Scipy _CDF===

x: [3.51410152 3.57404975 3.63399797 3.6939462  3.75389443 3.81384266
 3.87379089 3.93373912 3.99368735 4.05363558 4.11358381 4.17353204
 4.23348027 4.2934285  4.35337673 4.41332496]
args: (array([49.26309431, 49.26309431, 49.26309431, 49.26309431, 49.26309431,
       49.26309431, 49.26309431, 49.26309431, 49.26309431, 49.26309431,
       49.26309431, 49.26309431, 49.26309431, 49.26309431, 49.26309431,
       49.26309431]),)

===Scipy _CDF _Single===

x: 3.5141015163002245
args: (49.263094312351896,)

Output: cdf single = x

cdf_single: 0.006595917595114673

===Scipy _CDF _Single===

x: 3.5740497455957545
args: (49.263094312351896,)

Output: cdf single = x

cdf_single: 0.017715597498326192

===Scipy _CDF _Single===

x: 3.6339979748912845
args: (49.263094312351896,)

Output: cdf single = x

cdf_single: 0.042617437044919104

===Scipy _CDF _Single===

x: 3.6939462041868145
args: (49.263094312351896,)

Output: cdf single = x

cdf_single: 0.09152720974892437

===Scipy _CDF _Single===

x: 3.7538944334823445
args: (49.263094312351896,)

Output: cdf single = x

cdf_single: 0.17511664014782105

===Scipy _CDF _Single===

x: 3.8138426627778745
args: (49.263094312351896,)

Output: cdf single = x

cdf_single: 0.2983883818854621

===Scipy _CDF _Single===

x: 3.873790892073404
args: (49.263094312351896,)

Output: cdf single = x

cdf_single: 0.453871746510562

===Scipy _CDF _Single===

x: 3.933739121368934
args: (49.263094312351896,)

Output: cdf single = x

cdf_single: 0.6200364157078018

===Scipy _CDF _Single===

x: 3.9936873506644646
args: (49.263094312351896,)

Output: cdf single = x

cdf_single: 0.7690118899484435

===Scipy _CDF _Single===

x: 4.053635579959995
args: (49.263094312351896,)

Output: cdf single = x

cdf_single: 0.8798898852647445

===Scipy _CDF _Single===

x: 4.113583809255524
args: (49.263094312351896,)

Output: cdf single = x

cdf_single: 0.9476374709729058

===Scipy _CDF _Single===

x: 4.173532038551055
args: (49.263094312351896,)

Output: cdf single = x

cdf_single: 0.981221761557047

===Scipy _CDF _Single===

x: 4.233480267846585
args: (49.263094312351896,)

Output: cdf single = x

cdf_single: 0.9945613307604076

===Scipy _CDF _Single===

x: 4.293428497142115
args: (49.263094312351896,)

Output: cdf single = x

cdf_single: 0.9987507334514065

===Scipy _CDF _Single===

x: 4.353376726437645
args: (49.263094312351896,)

Output: cdf single = x

cdf_single: 0.9997765201116044

===Scipy _CDF _Single===

x: 4.413324955733175
args: (49.263094312351896,)

Output: cdf single = x

cdf_single: 0.9999694365957259
_cdf = _cdfvec(x, *args) = [0.00659592 0.0177156  0.04261744 0.09152721 0.17511664 0.29838838
 0.45387175 0.62003642 0.76901189 0.87988989 0.94763747 0.98122176
 0.99456133 0.99875073 0.99977652 0.99996944]
prob_less_or_equal: [0.00659592 0.0177156  0.04261744 0.09152721 0.17511664 0.29838838
 0.45387175 0.62003642 0.76901189 0.87988989 0.94763747 0.98122176
 0.99456133 0.99875073 0.999      0.999     ]
cdf_over: [0.99340408 0.9822844  0.95738256 0.90847279 0.82488336 0.70161162
 0.54612825 0.37996358 0.23098811 0.12011011 0.05236253 0.01877824
 0.00543867 0.00124927 0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [10  4  9  4  9  6  4  7 11  6  6  6  6  4  7  6  4  6  5  7  7  8  8  9
  8  7  9  5  4  5 14  6  6 11  9]
player: myles turner
stat: reb
condition: TJ McConnell PG bench
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.3476390838623047

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-51.332830638578585, 15.735247648295253, 41.09224658510805)

===Scipy CDF===

test_argsreduce = goodargs = [array([3.29405871, 3.3576103 , 3.42116189, 3.48471348, 3.54826507,
       3.61181666, 3.67536825, 3.73891984, 3.80247143, 3.86602302,
       3.92957461, 3.9931262 , 4.05667779, 4.12022938, 4.18378097,
       4.24733256]), array([41.09224659, 41.09224659, 41.09224659, 41.09224659, 41.09224659,
       41.09224659, 41.09224659, 41.09224659, 41.09224659, 41.09224659,
       41.09224659, 41.09224659, 41.09224659, 41.09224659, 41.09224659,
       41.09224659])]

===Scipy _CDF===

x: [3.29405871 3.3576103  3.42116189 3.48471348 3.54826507 3.61181666
 3.67536825 3.73891984 3.80247143 3.86602302 3.92957461 3.9931262
 4.05667779 4.12022938 4.18378097 4.24733256]
args: (array([41.09224659, 41.09224659, 41.09224659, 41.09224659, 41.09224659,
       41.09224659, 41.09224659, 41.09224659, 41.09224659, 41.09224659,
       41.09224659, 41.09224659, 41.09224659, 41.09224659, 41.09224659,
       41.09224659]),)

===Scipy _CDF _Single===

x: 3.294058714366286
args: (41.09224658510805,)

Output: cdf single = x

cdf_single: 0.006708395102326877

===Scipy _CDF _Single===

x: 3.3576103039155196
args: (41.09224658510805,)

Output: cdf single = x

cdf_single: 0.017279692892126948

===Scipy _CDF _Single===

x: 3.421161893464753
args: (41.09224658510805,)

Output: cdf single = x

cdf_single: 0.0402978448400627

===Scipy _CDF _Single===

x: 3.4847134830139863
args: (41.09224658510805,)

Output: cdf single = x

cdf_single: 0.08479086216928053

===Scipy _CDF _Single===

x: 3.5482650725632197
args: (41.09224658510805,)

Output: cdf single = x

cdf_single: 0.16055679206335144

===Scipy _CDF _Single===

x: 3.611816662112453
args: (41.09224658510805,)

Output: cdf single = x

cdf_single: 0.27330001369656975

===Scipy _CDF _Single===

x: 3.6753682516616863
args: (41.09224658510805,)

Output: cdf single = x

cdf_single: 0.4186431724124362

===Scipy _CDF _Single===

x: 3.7389198412109197
args: (41.09224658510805,)

Output: cdf single = x

cdf_single: 0.579487503319887

===Scipy _CDF _Single===

x: 3.802471430760153
args: (41.09224658510805,)

Output: cdf single = x

cdf_single: 0.7308069602386843

===Scipy _CDF _Single===

x: 3.8660230203093864
args: (41.09224658510805,)

Output: cdf single = x

cdf_single: 0.8505825385358461

===Scipy _CDF _Single===

x: 3.92957460985862
args: (41.09224658510805,)

Output: cdf single = x

cdf_single: 0.9294779320708305

===Scipy _CDF _Single===

x: 3.9931261994078535
args: (41.09224658510805,)

Output: cdf single = x

cdf_single: 0.9722214642479526

===Scipy _CDF _Single===

x: 4.056677788957087
args: (41.09224658510805,)

Output: cdf single = x

cdf_single: 0.9910332412450691

===Scipy _CDF _Single===

x: 4.12022937850632
args: (41.09224658510805,)

Output: cdf single = x

cdf_single: 0.9976705562253729

===Scipy _CDF _Single===

x: 4.1837809680555536
args: (41.09224658510805,)

Output: cdf single = x

cdf_single: 0.9995217558695789

===Scipy _CDF _Single===

x: 4.247332557604787
args: (41.09224658510805,)

Output: cdf single = x

cdf_single: 0.9999238358836194
_cdf = _cdfvec(x, *args) = [0.0067084  0.01727969 0.04029784 0.08479086 0.16055679 0.27330001
 0.41864317 0.5794875  0.73080696 0.85058254 0.92947793 0.97222146
 0.99103324 0.99767056 0.99952176 0.99992384]
prob_less_or_equal: [0.0067084  0.01727969 0.04029784 0.08479086 0.16055679 0.27330001
 0.41864317 0.5794875  0.73080696 0.85058254 0.92947793 0.97222146
 0.99103324 0.99767056 0.999      0.999     ]
cdf_over: [0.9932916  0.98272031 0.95970216 0.91520914 0.83944321 0.72669999
 0.58135683 0.4205125  0.26919304 0.14941746 0.07052207 0.02777854
 0.00896676 0.00232944 0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [10  4  5  4  9  3  9  6  6  8 10  7  9  5  4  5  7 14  6  8  9 11  9]
player: myles turner
stat: reb
condition: J Smith PF bench
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.34203600883483887

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-190.40831002175764, 37.12320707448155, 206.09403909221828)

===Scipy CDF===

test_argsreduce = goodargs = [array([5.14255971, 5.16949704, 5.19643437, 5.22337169, 5.25030902,
       5.27724635, 5.30418368, 5.33112101, 5.35805833, 5.38499566,
       5.41193299, 5.43887032, 5.46580764, 5.49274497, 5.5196823 ,
       5.54661963]), array([206.09403909, 206.09403909, 206.09403909, 206.09403909,
       206.09403909, 206.09403909, 206.09403909, 206.09403909,
       206.09403909, 206.09403909, 206.09403909, 206.09403909,
       206.09403909, 206.09403909, 206.09403909, 206.09403909])]

===Scipy _CDF===

x: [5.14255971 5.16949704 5.19643437 5.22337169 5.25030902 5.27724635
 5.30418368 5.33112101 5.35805833 5.38499566 5.41193299 5.43887032
 5.46580764 5.49274497 5.5196823  5.54661963]
args: (array([206.09403909, 206.09403909, 206.09403909, 206.09403909,
       206.09403909, 206.09403909, 206.09403909, 206.09403909,
       206.09403909, 206.09403909, 206.09403909, 206.09403909,
       206.09403909, 206.09403909, 206.09403909, 206.09403909]),)

===Scipy _CDF _Single===

x: 5.142559710391719
args: (206.09403909221828,)

Output: cdf single = x

cdf_single: 0.0051840878881499585

===Scipy _CDF _Single===

x: 5.16949703824687
args: (206.09403909221828,)

Output: cdf single = x

cdf_single: 0.013977400840268404

===Scipy _CDF _Single===

x: 5.1964343661020225
args: (206.09403909221828,)

Output: cdf single = x

cdf_single: 0.03367505537924963

===Scipy _CDF _Single===

x: 5.223371693957175
args: (206.09403909221828,)

Output: cdf single = x

cdf_single: 0.0724905547177287

===Scipy _CDF _Single===

x: 5.250309021812326
args: (206.09403909221828,)

Output: cdf single = x

cdf_single: 0.13954734064301494

===Scipy _CDF _Single===

x: 5.277246349667478
args: (206.09403909221828,)

Output: cdf single = x

cdf_single: 0.24075337370385558

===Scipy _CDF _Single===

x: 5.30418367752263
args: (206.09403909221828,)

Output: cdf single = x

cdf_single: 0.3737177159648891

===Scipy _CDF _Single===

x: 5.331121005377781
args: (206.09403909221828,)

Output: cdf single = x

cdf_single: 0.5252225911844242

===Scipy _CDF _Single===

x: 5.3580583332329335
args: (206.09403909221828,)

Output: cdf single = x

cdf_single: 0.674376732992733

===Scipy _CDF _Single===

x: 5.384995661088085
args: (206.09403909221828,)

Output: cdf single = x

cdf_single: 0.8007547929326538

===Scipy _CDF _Single===

x: 5.411932988943237
args: (206.09403909221828,)

Output: cdf single = x

cdf_single: 0.8925458251531904

===Scipy _CDF _Single===

x: 5.438870316798389
args: (206.09403909221828,)

Output: cdf single = x

cdf_single: 0.9494623193145482

===Scipy _CDF _Single===

x: 5.46580764465354
args: (206.09403909221828,)

Output: cdf single = x

cdf_single: 0.9794645353967413

===Scipy _CDF _Single===

x: 5.492744972508692
args: (206.09403909221828,)

Output: cdf single = x

cdf_single: 0.9928509081521407

===Scipy _CDF _Single===

x: 5.519682300363844
args: (206.09403909221828,)

Output: cdf single = x

cdf_single: 0.9978839576010144

===Scipy _CDF _Single===

x: 5.546619628218996
args: (206.09403909221828,)

Output: cdf single = x

cdf_single: 0.9994712897452434
_cdf = _cdfvec(x, *args) = [0.00518409 0.0139774  0.03367506 0.07249055 0.13954734 0.24075337
 0.37371772 0.52522259 0.67437673 0.80075479 0.89254583 0.94946232
 0.97946454 0.99285091 0.99788396 0.99947129]
prob_less_or_equal: [0.00518409 0.0139774  0.03367506 0.07249055 0.13954734 0.24075337
 0.37371772 0.52522259 0.67437673 0.80075479 0.89254583 0.94946232
 0.97946454 0.99285091 0.99788396 0.999     ]
cdf_over: [0.99481591 0.9860226  0.96632494 0.92750945 0.86045266 0.75924663
 0.62628228 0.47477741 0.32562327 0.19924521 0.10745417 0.05053768
 0.02053546 0.00714909 0.00211604 0.001     ]

===Test Distribute All Probs===

cond_data: [10  4  5  4  9  4  3  9  2  6  4  7  6  6  6  6  4  7  6  5  9]
player: myles turner
stat: reb
condition: O Toppin PF bench
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.3333427906036377

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-68.70555083116615, 17.479695873112878, 71.5384753155879)

===Scipy CDF===

test_argsreduce = goodargs = [array([3.95919645, 4.01640568, 4.07361492, 4.13082415, 4.18803338,
       4.24524262, 4.30245185, 4.35966108, 4.41687032, 4.47407955,
       4.53128878, 4.58849802, 4.64570725, 4.70291648, 4.76012572,
       4.81733495]), array([71.53847532, 71.53847532, 71.53847532, 71.53847532, 71.53847532,
       71.53847532, 71.53847532, 71.53847532, 71.53847532, 71.53847532,
       71.53847532, 71.53847532, 71.53847532, 71.53847532, 71.53847532,
       71.53847532])]

===Scipy _CDF===

x: [3.95919645 4.01640568 4.07361492 4.13082415 4.18803338 4.24524262
 4.30245185 4.35966108 4.41687032 4.47407955 4.53128878 4.58849802
 4.64570725 4.70291648 4.76012572 4.81733495]
args: (array([71.53847532, 71.53847532, 71.53847532, 71.53847532, 71.53847532,
       71.53847532, 71.53847532, 71.53847532, 71.53847532, 71.53847532,
       71.53847532, 71.53847532, 71.53847532, 71.53847532, 71.53847532,
       71.53847532]),)

===Scipy _CDF _Single===

x: 3.959196449042203
args: (71.5384753155879,)

Output: cdf single = x

cdf_single: 0.006931293902163883

===Scipy _CDF _Single===

x: 4.016405682386942
args: (71.5384753155879,)

Output: cdf single = x

cdf_single: 0.021713582924189966

===Scipy _CDF _Single===

x: 4.0736149157316826
args: (71.5384753155879,)

Output: cdf single = x

cdf_single: 0.058181615441340775

===Scipy _CDF _Single===

x: 4.130824149076422
args: (71.5384753155879,)

Output: cdf single = x

cdf_single: 0.1329605003112505

===Scipy _CDF _Single===

x: 4.188033382421162
args: (71.5384753155879,)

Output: cdf single = x

cdf_single: 0.2590803480360484

===Scipy _CDF _Single===

x: 4.245242615765902
args: (71.5384753155879,)

Output: cdf single = x

cdf_single: 0.4321085988690016

===Scipy _CDF _Single===

x: 4.302451849110642
args: (71.5384753155879,)

Output: cdf single = x

cdf_single: 0.6229645095553128

===Scipy _CDF _Single===

x: 4.359661082455381
args: (71.5384753155879,)

Output: cdf single = x

cdf_single: 0.7901478404623822

===Scipy _CDF _Single===

x: 4.4168703158001215
args: (71.5384753155879,)

Output: cdf single = x

cdf_single: 0.9049425567795393

===Scipy _CDF _Single===

x: 4.474079549144861
args: (71.5384753155879,)

Output: cdf single = x

cdf_single: 0.9658840421081816

===Scipy _CDF _Single===

x: 4.531288782489601
args: (71.5384753155879,)

Output: cdf single = x

cdf_single: 0.990535405491568

===Scipy _CDF _Single===

x: 4.5884980158343405
args: (71.5384753155879,)

Output: cdf single = x

cdf_single: 0.998017226176862

===Scipy _CDF _Single===

x: 4.645707249179081
args: (71.5384753155879,)

Output: cdf single = x

cdf_single: 0.999693369557124

===Scipy _CDF _Single===

x: 4.70291648252382
args: (71.5384753155879,)

Output: cdf single = x

cdf_single: 0.9999657755494432

===Scipy _CDF _Single===

x: 4.76012571586856
args: (71.5384753155879,)

Output: cdf single = x

cdf_single: 0.9999973051378263

===Scipy _CDF _Single===

x: 4.8173349492133
args: (71.5384753155879,)

Output: cdf single = x

cdf_single: 0.9999998537570254
_cdf = _cdfvec(x, *args) = [0.00693129 0.02171358 0.05818162 0.1329605  0.25908035 0.4321086
 0.62296451 0.79014784 0.90494256 0.96588404 0.99053541 0.99801723
 0.99969337 0.99996578 0.99999731 0.99999985]
prob_less_or_equal: [0.00693129 0.02171358 0.05818162 0.1329605  0.25908035 0.4321086
 0.62296451 0.79014784 0.90494256 0.96588404 0.99053541 0.99801723
 0.999      0.999      0.999      0.999     ]
cdf_over: [0.99306871 0.97828642 0.94181838 0.8670395  0.74091965 0.5678914
 0.37703549 0.20985216 0.09505744 0.03411596 0.00946459 0.00198277
 0.001      0.001      0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [ 4  9  4  3  4  7 11  6  6  6  4  7  6  6  5  7  7]
player: myles turner
stat: reb
condition: 2 after
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.34505224227905273

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-124.5389043375436, 26.062738546628186, 150.21039105117362)

===Scipy CDF===

test_argsreduce = goodargs = [array([4.79761185, 4.83598081, 4.87434976, 4.91271871, 4.95108767,
       4.98945662, 5.02782557, 5.06619453, 5.10456348, 5.14293243,
       5.18130139, 5.21967034, 5.25803929, 5.29640825, 5.3347772 ,
       5.37314615]), array([150.21039105, 150.21039105, 150.21039105, 150.21039105,
       150.21039105, 150.21039105, 150.21039105, 150.21039105,
       150.21039105, 150.21039105, 150.21039105, 150.21039105,
       150.21039105, 150.21039105, 150.21039105, 150.21039105])]

===Scipy _CDF===

x: [4.79761185 4.83598081 4.87434976 4.91271871 4.95108767 4.98945662
 5.02782557 5.06619453 5.10456348 5.14293243 5.18130139 5.21967034
 5.25803929 5.29640825 5.3347772  5.37314615]
args: (array([150.21039105, 150.21039105, 150.21039105, 150.21039105,
       150.21039105, 150.21039105, 150.21039105, 150.21039105,
       150.21039105, 150.21039105, 150.21039105, 150.21039105,
       150.21039105, 150.21039105, 150.21039105, 150.21039105]),)

===Scipy _CDF _Single===

x: 4.797611851641748
args: (150.21039105117362,)

Output: cdf single = x

cdf_single: 0.006042069203348685

===Scipy _CDF _Single===

x: 4.835980805012128
args: (150.21039105117362,)

Output: cdf single = x

cdf_single: 0.019288840188686807

===Scipy _CDF _Single===

x: 4.874349758382509
args: (150.21039105117362,)

Output: cdf single = x

cdf_single: 0.05238655959117941

===Scipy _CDF _Single===

x: 4.912718711752889
args: (150.21039105117362,)

Output: cdf single = x

cdf_single: 0.12099949963521614

===Scipy _CDF _Single===

x: 4.95108766512327
args: (150.21039105117362,)

Output: cdf single = x

cdf_single: 0.23818711896312725

===Scipy _CDF _Single===

x: 4.989456618493651
args: (150.21039105117362,)

Output: cdf single = x

cdf_single: 0.40189134582675107

===Scipy _CDF _Single===

x: 5.027825571864031
args: (150.21039105117362,)

Output: cdf single = x

cdf_single: 0.5875249483911388

===Scipy _CDF _Single===

x: 5.066194525234412
args: (150.21039105117362,)

Output: cdf single = x

cdf_single: 0.7570614163658956

===Scipy _CDF _Single===

x: 5.104563478604793
args: (150.21039105117362,)

Output: cdf single = x

cdf_single: 0.8807527351015088

===Scipy _CDF _Single===

x: 5.142932431975173
args: (150.21039105117362,)

Output: cdf single = x

cdf_single: 0.9522361831943764

===Scipy _CDF _Single===

x: 5.181301385345554
args: (150.21039105117362,)

Output: cdf single = x

cdf_single: 0.9846727845141898

===Scipy _CDF _Single===

x: 5.219670338715934
args: (150.21039105117362,)

Output: cdf single = x

cdf_single: 0.9961238563628052

===Scipy _CDF _Single===

x: 5.258039292086315
args: (150.21039105117362,)

Output: cdf single = x

cdf_single: 0.9992390850800582

===Scipy _CDF _Single===

x: 5.296408245456696
args: (150.21039105117362,)

Output: cdf single = x

cdf_single: 0.9998856971603141

===Scipy _CDF _Single===

x: 5.3347771988270765
args: (150.21039105117362,)

Output: cdf single = x

cdf_single: 0.9999870416225454

===Scipy _CDF _Single===

x: 5.3731461521974575
args: (150.21039105117362,)

Output: cdf single = x

cdf_single: 0.9999989063064202
_cdf = _cdfvec(x, *args) = [0.00604207 0.01928884 0.05238656 0.1209995  0.23818712 0.40189135
 0.58752495 0.75706142 0.88075274 0.95223618 0.98467278 0.99612386
 0.99923909 0.9998857  0.99998704 0.99999891]
prob_less_or_equal: [0.00604207 0.01928884 0.05238656 0.1209995  0.23818712 0.40189135
 0.58752495 0.75706142 0.88075274 0.95223618 0.98467278 0.99612386
 0.999      0.999      0.999      0.999     ]
cdf_over: [0.99395793 0.98071116 0.94761344 0.8790005  0.76181288 0.59810865
 0.41247505 0.24293858 0.11924726 0.04776382 0.01532722 0.00387614
 0.001      0.001      0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [5 4 5 9 4]
player: myles turner
stat: reb
condition: tue
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.39963483810424805

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-118.60038378213922, 24.3801674989482, 162.2682910993751)

===Scipy CDF===

test_argsreduce = goodargs = [array([4.8851339 , 4.92615085, 4.96716779, 5.00818474, 5.04920168,
       5.09021863, 5.13123557, 5.17225252, 5.21326947, 5.25428641,
       5.29530336, 5.3363203 , 5.37733725, 5.41835419, 5.45937114,
       5.50038808]), array([162.2682911, 162.2682911, 162.2682911, 162.2682911, 162.2682911,
       162.2682911, 162.2682911, 162.2682911, 162.2682911, 162.2682911,
       162.2682911, 162.2682911, 162.2682911, 162.2682911, 162.2682911,
       162.2682911])]

===Scipy _CDF===

x: [4.8851339  4.92615085 4.96716779 5.00818474 5.04920168 5.09021863
 5.13123557 5.17225252 5.21326947 5.25428641 5.29530336 5.3363203
 5.37733725 5.41835419 5.45937114 5.50038808]
args: (array([162.2682911, 162.2682911, 162.2682911, 162.2682911, 162.2682911,
       162.2682911, 162.2682911, 162.2682911, 162.2682911, 162.2682911,
       162.2682911, 162.2682911, 162.2682911, 162.2682911, 162.2682911,
       162.2682911]),)

===Scipy _CDF _Single===

x: 4.885133901860084
args: (162.2682910993751,)

Output: cdf single = x

cdf_single: 0.00642295886376518

===Scipy _CDF _Single===

x: 4.926150847295062
args: (162.2682910993751,)

Output: cdf single = x

cdf_single: 0.022958548141014334

===Scipy _CDF _Single===

x: 4.9671677927300415
args: (162.2682910993751,)

Output: cdf single = x

cdf_single: 0.06710404509481434

===Scipy _CDF _Single===

x: 5.00818473816502
args: (162.2682910993751,)

Output: cdf single = x

cdf_single: 0.16046488672824985

===Scipy _CDF _Single===

x: 5.049201683599999
args: (162.2682910993751,)

Output: cdf single = x

cdf_single: 0.31542639316883225

===Scipy _CDF _Single===

x: 5.090218629034977
args: (162.2682910993751,)

Output: cdf single = x

cdf_single: 0.5153539976541102

===Scipy _CDF _Single===

x: 5.131235574469956
args: (162.2682910993751,)

Output: cdf single = x

cdf_single: 0.7138493318751792

===Scipy _CDF _Single===

x: 5.1722525199049345
args: (162.2682910993751,)

Output: cdf single = x

cdf_single: 0.8639258879642873

===Scipy _CDF _Single===

x: 5.213269465339914
args: (162.2682910993751,)

Output: cdf single = x

cdf_single: 0.9493973247955547

===Scipy _CDF _Single===

x: 5.254286410774892
args: (162.2682910993751,)

Output: cdf single = x

cdf_single: 0.9856487150397025

===Scipy _CDF _Single===

x: 5.29530335620987
args: (162.2682910993751,)

Output: cdf single = x

cdf_single: 0.9969635223359723

===Scipy _CDF _Single===

x: 5.336320301644849
args: (162.2682910993751,)

Output: cdf single = x

cdf_single: 0.9995301844111221

===Scipy _CDF _Single===

x: 5.3773372470798275
args: (162.2682910993751,)

Output: cdf single = x

cdf_single: 0.9999478318260191

===Scipy _CDF _Single===

x: 5.418354192514807
args: (162.2682910993751,)

Output: cdf single = x

cdf_single: 0.9999959174665908

===Scipy _CDF _Single===

x: 5.459371137949785
args: (162.2682910993751,)

Output: cdf single = x

cdf_single: 0.9999997788248561

===Scipy _CDF _Single===

x: 5.500388083384764
args: (162.2682910993751,)

Output: cdf single = x

cdf_single: 0.9999999918520349
_cdf = _cdfvec(x, *args) = [0.00642296 0.02295855 0.06710405 0.16046489 0.31542639 0.515354
 0.71384933 0.86392589 0.94939732 0.98564872 0.99696352 0.99953018
 0.99994783 0.99999592 0.99999978 0.99999999]
prob_less_or_equal: [0.00642296 0.02295855 0.06710405 0.16046489 0.31542639 0.515354
 0.71384933 0.86392589 0.94939732 0.98564872 0.99696352 0.999
 0.999      0.999      0.999      0.999     ]
cdf_over: [0.99357704 0.97704145 0.93289595 0.83953511 0.68457361 0.484646
 0.28615067 0.13607411 0.05060268 0.01435128 0.00303648 0.001
 0.001      0.001      0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [ 5  4  3  9  7 11  6  6  6  4  7  6  5  4  7  7  9  8  7  5  5 14  6  6
  9 11]
player: myles turner
stat: reb
condition: 2 before
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.36748433113098145

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-150.40505022771728, 30.860641040262095, 163.59414851843778)

===Scipy CDF===

test_argsreduce = goodargs = [array([4.88988706, 4.92229079, 4.95469453, 4.98709826, 5.01950199,
       5.05190573, 5.08430946, 5.1167132 , 5.14911693, 5.18152066,
       5.2139244 , 5.24632813, 5.27873186, 5.3111356 , 5.34353933,
       5.37594307]), array([163.59414852, 163.59414852, 163.59414852, 163.59414852,
       163.59414852, 163.59414852, 163.59414852, 163.59414852,
       163.59414852, 163.59414852, 163.59414852, 163.59414852,
       163.59414852, 163.59414852, 163.59414852, 163.59414852])]

===Scipy _CDF===

x: [4.88988706 4.92229079 4.95469453 4.98709826 5.01950199 5.05190573
 5.08430946 5.1167132  5.14911693 5.18152066 5.2139244  5.24632813
 5.27873186 5.3111356  5.34353933 5.37594307]
args: (array([163.59414852, 163.59414852, 163.59414852, 163.59414852,
       163.59414852, 163.59414852, 163.59414852, 163.59414852,
       163.59414852, 163.59414852, 163.59414852, 163.59414852,
       163.59414852, 163.59414852, 163.59414852, 163.59414852]),)

===Scipy _CDF _Single===

x: 4.889887058108747
args: (163.59414851843778,)

Output: cdf single = x

cdf_single: 0.005561163714367981

===Scipy _CDF _Single===

x: 4.922290792000579
args: (163.59414851843778,)

Output: cdf single = x

cdf_single: 0.015791681197269213

===Scipy _CDF _Single===

x: 4.954694525892411
args: (163.59414851843778,)

Output: cdf single = x

cdf_single: 0.03951390146023444

===Scipy _CDF _Single===

x: 4.987098259784243
args: (163.59414851843778,)

Output: cdf single = x

cdf_single: 0.08708953957943973

===Scipy _CDF _Single===

x: 5.019501993676075
args: (163.59414851843778,)

Output: cdf single = x

cdf_single: 0.16923220884970963

===Scipy _CDF _Single===

x: 5.051905727567907
args: (163.59414851843778,)

Output: cdf single = x

cdf_single: 0.29074659858905094

===Scipy _CDF _Single===

x: 5.084309461459739
args: (163.59414851843778,)

Output: cdf single = x

cdf_single: 0.4440018037545667

===Scipy _CDF _Single===

x: 5.11671319535157
args: (163.59414851843778,)

Output: cdf single = x

cdf_single: 0.6079538622480951

===Scipy _CDF _Single===

x: 5.1491169292434025
args: (163.59414851843778,)

Output: cdf single = x

cdf_single: 0.7559488391897337

===Scipy _CDF _Single===

x: 5.181520663135235
args: (163.59414851843778,)

Output: cdf single = x

cdf_single: 0.8680592161340198

===Scipy _CDF _Single===

x: 5.213924397027067
args: (163.59414851843778,)

Output: cdf single = x

cdf_single: 0.9389315040070554

===Scipy _CDF _Single===

x: 5.246328130918898
args: (163.59414851843778,)

Output: cdf single = x

cdf_single: 0.9761039725663132

===Scipy _CDF _Single===

x: 5.27873186481073
args: (163.59414851843778,)

Output: cdf single = x

cdf_single: 0.9921837135275424

===Scipy _CDF _Single===

x: 5.311135598702562
args: (163.59414851843778,)

Output: cdf single = x

cdf_single: 0.9978848296468811

===Scipy _CDF _Single===

x: 5.3435393325943945
args: (163.59414851843778,)

Output: cdf single = x

cdf_single: 0.9995310295896052

===Scipy _CDF _Single===

x: 5.375943066486226
args: (163.59414851843778,)

Output: cdf single = x

cdf_single: 0.9999155946834851
_cdf = _cdfvec(x, *args) = [0.00556116 0.01579168 0.0395139  0.08708954 0.16923221 0.2907466
 0.4440018  0.60795386 0.75594884 0.86805922 0.9389315  0.97610397
 0.99218371 0.99788483 0.99953103 0.99991559]
prob_less_or_equal: [0.00556116 0.01579168 0.0395139  0.08708954 0.16923221 0.2907466
 0.4440018  0.60795386 0.75594884 0.86805922 0.9389315  0.97610397
 0.99218371 0.99788483 0.999      0.999     ]
cdf_over: [0.99443884 0.98420832 0.9604861  0.91291046 0.83076779 0.7092534
 0.5559982  0.39204614 0.24405116 0.13194078 0.0610685  0.02389603
 0.00781629 0.00211517 0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [ 4  9  4 11  6  6  6  6  7  6  6  8  8 10  7  5  4  7 14  6  8  9  9]
player: myles turner
stat: reb
condition: home
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.5841431617736816

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-53.450356118136845, 16.375733398967018, 41.151166222823996)

===Scipy CDF===

test_argsreduce = goodargs = [array([3.29453062, 3.35559659, 3.41666256, 3.47772852, 3.53879449,
       3.59986046, 3.66092642, 3.72199239, 3.78305836, 3.84412433,
       3.90519029, 3.96625626, 4.02732223, 4.0883882 , 4.14945416,
       4.21052013]), array([41.15116622, 41.15116622, 41.15116622, 41.15116622, 41.15116622,
       41.15116622, 41.15116622, 41.15116622, 41.15116622, 41.15116622,
       41.15116622, 41.15116622, 41.15116622, 41.15116622, 41.15116622,
       41.15116622])]

===Scipy _CDF===

x: [3.29453062 3.35559659 3.41666256 3.47772852 3.53879449 3.59986046
 3.66092642 3.72199239 3.78305836 3.84412433 3.90519029 3.96625626
 4.02732223 4.0883882  4.14945416 4.21052013]
args: (array([41.15116622, 41.15116622, 41.15116622, 41.15116622, 41.15116622,
       41.15116622, 41.15116622, 41.15116622, 41.15116622, 41.15116622,
       41.15116622, 41.15116622, 41.15116622, 41.15116622, 41.15116622,
       41.15116622]),)

===Scipy _CDF _Single===

x: 3.2945306206279614
args: (41.151166222823996,)

Output: cdf single = x

cdf_single: 0.006573961838539746

===Scipy _CDF _Single===

x: 3.3555965879123995
args: (41.151166222823996,)

Output: cdf single = x

cdf_single: 0.016391008484454322

===Scipy _CDF _Single===

x: 3.416662555196838
args: (41.151166222823996,)

Output: cdf single = x

cdf_single: 0.037285703792837334

===Scipy _CDF _Single===

x: 3.477728522481276
args: (41.151166222823996,)

Output: cdf single = x

cdf_single: 0.07713945590656167

===Scipy _CDF _Single===

x: 3.538794489765714
args: (41.151166222823996,)

Output: cdf single = x

cdf_single: 0.14480107406559042

===Scipy _CDF _Single===

x: 3.599860457050152
args: (41.151166222823996,)

Output: cdf single = x

cdf_single: 0.24631843747153073

===Scipy _CDF _Single===

x: 3.66092642433459
args: (41.151166222823996,)

Output: cdf single = x

cdf_single: 0.379904220398152

===Scipy _CDF _Single===

x: 3.721992391619028
args: (41.151166222823996,)

Output: cdf single = x

cdf_single: 0.5328370031439684

===Scipy _CDF _Single===

x: 3.783058358903466
args: (41.151166222823996,)

Output: cdf single = x

cdf_single: 0.6838621732533605

===Scipy _CDF _Single===

x: 3.844124326187904
args: (41.151166222823996,)

Output: cdf single = x

cdf_single: 0.8113507290499121

===Scipy _CDF _Single===

x: 3.9051902934723426
args: (41.151166222823996,)

Output: cdf single = x

cdf_single: 0.9024666031032257

===Scipy _CDF _Single===

x: 3.96625626075678
args: (41.151166222823996,)

Output: cdf single = x

cdf_single: 0.9570416419749928

===Scipy _CDF _Single===

x: 4.027322228041218
args: (41.151166222823996,)

Output: cdf single = x

cdf_single: 0.9841422908481788

===Scipy _CDF _Single===

x: 4.088388195325656
args: (41.151166222823996,)

Output: cdf single = x

cdf_single: 0.9951722568169452

===Scipy _CDF _Single===

x: 4.149454162610095
args: (41.151166222823996,)

Output: cdf single = x

cdf_single: 0.998807188969574

===Scipy _CDF _Single===

x: 4.210520129894532
args: (41.151166222823996,)

Output: cdf single = x

cdf_single: 0.9997646905043363
_cdf = _cdfvec(x, *args) = [0.00657396 0.01639101 0.0372857  0.07713946 0.14480107 0.24631844
 0.37990422 0.532837   0.68386217 0.81135073 0.9024666  0.95704164
 0.98414229 0.99517226 0.99880719 0.99976469]
prob_less_or_equal: [0.00657396 0.01639101 0.0372857  0.07713946 0.14480107 0.24631844
 0.37990422 0.532837   0.68386217 0.81135073 0.9024666  0.95704164
 0.98414229 0.99517226 0.99880719 0.999     ]
cdf_over: [0.99342604 0.98360899 0.9627143  0.92286054 0.85519893 0.75368156
 0.62009578 0.467163   0.31613783 0.18864927 0.0975334  0.04295836
 0.01585771 0.00482774 0.00119281 0.001     ]

===Test Distribute All Probs===

cond_data: [ 4  9  4 11  6  6  6  6  7  6  6  8  8 10  7  5  4  7 14  6  8  9  9]
player: myles turner
stat: reb
condition: Indianapolis IN
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.4473848342895508

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-167.17397743699115, 33.80091931598633, 174.56250235461886)

===Scipy CDF===

test_argsreduce = goodargs = [array([4.96063361, 4.99021861, 5.0198036 , 5.04938859, 5.07897359,
       5.10855858, 5.13814358, 5.16772857, 5.19731356, 5.22689856,
       5.25648355, 5.28606855, 5.31565354, 5.34523853, 5.37482353,
       5.40440852]), array([174.56250235, 174.56250235, 174.56250235, 174.56250235,
       174.56250235, 174.56250235, 174.56250235, 174.56250235,
       174.56250235, 174.56250235, 174.56250235, 174.56250235,
       174.56250235, 174.56250235, 174.56250235, 174.56250235])]

===Scipy _CDF===

x: [4.96063361 4.99021861 5.0198036  5.04938859 5.07897359 5.10855858
 5.13814358 5.16772857 5.19731356 5.22689856 5.25648355 5.28606855
 5.31565354 5.34523853 5.37482353 5.40440852]
args: (array([174.56250235, 174.56250235, 174.56250235, 174.56250235,
       174.56250235, 174.56250235, 174.56250235, 174.56250235,
       174.56250235, 174.56250235, 174.56250235, 174.56250235,
       174.56250235, 174.56250235, 174.56250235, 174.56250235]),)

===Scipy _CDF _Single===

x: 4.960633610864212
args: (174.56250235461886,)

Output: cdf single = x

cdf_single: 0.005355601014157124

===Scipy _CDF _Single===

x: 4.990218605007464
args: (174.56250235461886,)

Output: cdf single = x

cdf_single: 0.014466416551322938

===Scipy _CDF _Single===

x: 5.019803599150717
args: (174.56250235461886,)

Output: cdf single = x

cdf_single: 0.03489420084447315

===Scipy _CDF _Single===

x: 5.049388593293969
args: (174.56250235461886,)

Output: cdf single = x

cdf_single: 0.0751357704619391

===Scipy _CDF _Single===

x: 5.078973587437222
args: (174.56250235461886,)

Output: cdf single = x

cdf_single: 0.14452193297439794

===Scipy _CDF _Single===

x: 5.108558581580474
args: (174.56250235461886,)

Output: cdf single = x

cdf_single: 0.24883106302083266

===Scipy _CDF _Single===

x: 5.138143575723726
args: (174.56250235461886,)

Output: cdf single = x

cdf_single: 0.3850010578641635

===Scipy _CDF _Single===

x: 5.167728569866979
args: (174.56250235461886,)

Output: cdf single = x

cdf_single: 0.538730695811932

===Scipy _CDF _Single===

x: 5.197313564010231
args: (174.56250235461886,)

Output: cdf single = x

cdf_single: 0.6881841122090644

===Scipy _CDF _Single===

x: 5.226898558153483
args: (174.56250235461886,)

Output: cdf single = x

cdf_single: 0.8127579309870825

===Scipy _CDF _Single===

x: 5.256483552296736
args: (174.56250235461886,)

Output: cdf single = x

cdf_single: 0.9013846528384282

===Scipy _CDF _Single===

x: 5.286068546439988
args: (174.56250235461886,)

Output: cdf single = x

cdf_single: 0.9549526497036107

===Scipy _CDF _Single===

x: 5.315653540583241
args: (174.56250235461886,)

Output: cdf single = x

cdf_single: 0.9823289076812634

===Scipy _CDF _Single===

x: 5.345238534726493
args: (174.56250235461886,)

Output: cdf single = x

cdf_single: 0.994100435037982

===Scipy _CDF _Single===

x: 5.374823528869745
args: (174.56250235461886,)

Output: cdf single = x

cdf_single: 0.9983376273362137

===Scipy _CDF _Single===

x: 5.4044085230129975
args: (174.56250235461886,)

Output: cdf single = x

cdf_single: 0.9996077294164374
_cdf = _cdfvec(x, *args) = [0.0053556  0.01446642 0.0348942  0.07513577 0.14452193 0.24883106
 0.38500106 0.5387307  0.68818411 0.81275793 0.90138465 0.95495265
 0.98232891 0.99410044 0.99833763 0.99960773]
prob_less_or_equal: [0.0053556  0.01446642 0.0348942  0.07513577 0.14452193 0.24883106
 0.38500106 0.5387307  0.68818411 0.81275793 0.90138465 0.95495265
 0.98232891 0.99410044 0.99833763 0.999     ]
cdf_over: [0.9946444  0.98553358 0.9651058  0.92486423 0.85547807 0.75116894
 0.61499894 0.4612693  0.31181589 0.18724207 0.09861535 0.04504735
 0.01767109 0.00589956 0.00166237 0.001     ]

===Test Distribute All Probs===

cond_data: [ 4  9  4 11  6  6  6  6  7  6  6  5  7  8  4  4  7 14  6  8  9  9]
player: myles turner
stat: reb
condition: 7:00
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.5458872318267822

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-79.16436178648837, 20.3610120853132, 69.01200410828663)

===Scipy CDF===

test_argsreduce = goodargs = [array([3.91259336, 3.96170684, 4.01082031, 4.05993378, 4.10904725,
       4.15816073, 4.2072742 , 4.25638767, 4.30550114, 4.35461461,
       4.40372809, 4.45284156, 4.50195503, 4.5510685 , 4.60018197,
       4.64929545]), array([69.01200411, 69.01200411, 69.01200411, 69.01200411, 69.01200411,
       69.01200411, 69.01200411, 69.01200411, 69.01200411, 69.01200411,
       69.01200411, 69.01200411, 69.01200411, 69.01200411, 69.01200411,
       69.01200411])]

===Scipy _CDF===

x: [3.91259336 3.96170684 4.01082031 4.05993378 4.10904725 4.15816073
 4.2072742  4.25638767 4.30550114 4.35461461 4.40372809 4.45284156
 4.50195503 4.5510685  4.60018197 4.64929545]
args: (array([69.01200411, 69.01200411, 69.01200411, 69.01200411, 69.01200411,
       69.01200411, 69.01200411, 69.01200411, 69.01200411, 69.01200411,
       69.01200411, 69.01200411, 69.01200411, 69.01200411, 69.01200411,
       69.01200411]),)

===Scipy _CDF _Single===

x: 3.9125933648431874
args: (69.01200410828663,)

Output: cdf single = x

cdf_single: 0.006292455578516851

===Scipy _CDF _Single===

x: 3.9617068369932933
args: (69.01200410828663,)

Output: cdf single = x

cdf_single: 0.016793215544310715

===Scipy _CDF _Single===

x: 4.0108203091434
args: (69.01200410828663,)

Output: cdf single = x

cdf_single: 0.040156710788484325

===Scipy _CDF _Single===

x: 4.0599337812935055
args: (69.01200410828663,)

Output: cdf single = x

cdf_single: 0.08584941946083155

===Scipy _CDF _Single===

x: 4.109047253443611
args: (69.01200410828663,)

Output: cdf single = x

cdf_single: 0.16390372367694556

===Scipy _CDF _Single===

x: 4.158160725593717
args: (69.01200410828663,)

Output: cdf single = x

cdf_single: 0.27959606950349486

===Scipy _CDF _Single===

x: 4.207274197743823
args: (69.01200410828663,)

Output: cdf single = x

cdf_single: 0.4273533493047136

===Scipy _CDF _Single===

x: 4.256387669893929
args: (69.01200410828663,)

Output: cdf single = x

cdf_single: 0.5887755345394022

===Scipy _CDF _Single===

x: 4.305501142044035
args: (69.01200410828663,)

Output: cdf single = x

cdf_single: 0.7384779593969634

===Scipy _CDF _Single===

x: 4.354614614194141
args: (69.01200410828663,)

Output: cdf single = x

cdf_single: 0.8553920060752284

===Scipy _CDF _Single===

x: 4.4037280863442465
args: (69.01200410828663,)

Output: cdf single = x

cdf_single: 0.9316401088302668

===Scipy _CDF _Single===

x: 4.452841558494352
args: (69.01200410828663,)

Output: cdf single = x

cdf_single: 0.9728015160224289

===Scipy _CDF _Single===

x: 4.501955030644458
args: (69.01200410828663,)

Output: cdf single = x

cdf_single: 0.9910252196843545

===Scipy _CDF _Single===

x: 4.551068502794564
args: (69.01200410828663,)

Output: cdf single = x

cdf_single: 0.9975784591907211

===Scipy _CDF _Single===

x: 4.600181974944671
args: (69.01200410828663,)

Output: cdf single = x

cdf_single: 0.999473094516159

===Scipy _CDF _Single===

x: 4.649295447094777
args: (69.01200410828663,)

Output: cdf single = x

cdf_single: 0.9999088064686438
_cdf = _cdfvec(x, *args) = [0.00629246 0.01679322 0.04015671 0.08584942 0.16390372 0.27959607
 0.42735335 0.58877553 0.73847796 0.85539201 0.93164011 0.97280152
 0.99102522 0.99757846 0.99947309 0.99990881]
prob_less_or_equal: [0.00629246 0.01679322 0.04015671 0.08584942 0.16390372 0.27959607
 0.42735335 0.58877553 0.73847796 0.85539201 0.93164011 0.97280152
 0.99102522 0.99757846 0.999      0.999     ]
cdf_over: [0.99370754 0.98320678 0.95984329 0.91415058 0.83609628 0.72040393
 0.57264665 0.41122447 0.26152204 0.14460799 0.06835989 0.02719848
 0.00897478 0.00242154 0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [ 3  7  8  8  9 10 14  9 11]
player: myles turner
stat: reb
condition: 10-14 prev
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.38650989532470703

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-66.79569373632863, 20.224640972152564, 42.462304323139634)

===Scipy CDF===

test_argsreduce = goodargs = [array([3.32741099, 3.37685563, 3.42630027, 3.4757449 , 3.52518954,
       3.57463417, 3.62407881, 3.67352344, 3.72296808, 3.77241271,
       3.82185735, 3.87130198, 3.92074662, 3.97019126, 4.01963589,
       4.06908053]), array([42.46230432, 42.46230432, 42.46230432, 42.46230432, 42.46230432,
       42.46230432, 42.46230432, 42.46230432, 42.46230432, 42.46230432,
       42.46230432, 42.46230432, 42.46230432, 42.46230432, 42.46230432,
       42.46230432])]

===Scipy _CDF===

x: [3.32741099 3.37685563 3.42630027 3.4757449  3.52518954 3.57463417
 3.62407881 3.67352344 3.72296808 3.77241271 3.82185735 3.87130198
 3.92074662 3.97019126 4.01963589 4.06908053]
args: (array([42.46230432, 42.46230432, 42.46230432, 42.46230432, 42.46230432,
       42.46230432, 42.46230432, 42.46230432, 42.46230432, 42.46230432,
       42.46230432, 42.46230432, 42.46230432, 42.46230432, 42.46230432,
       42.46230432]),)

===Scipy _CDF _Single===

x: 3.327410994785445
args: (42.462304323139634,)

Output: cdf single = x

cdf_single: 0.00600251939753736

===Scipy _CDF _Single===

x: 3.3768556302366703
args: (42.462304323139634,)

Output: cdf single = x

cdf_single: 0.012919687767608868

===Scipy _CDF _Single===

x: 3.426300265687896
args: (42.462304323139634,)

Output: cdf single = x

cdf_single: 0.026139618909434004

===Scipy _CDF _Single===

x: 3.4757449011391213
args: (42.462304323139634,)

Output: cdf single = x

cdf_single: 0.04962334032845403

===Scipy _CDF _Single===

x: 3.5251895365903465
args: (42.462304323139634,)

Output: cdf single = x

cdf_single: 0.08825583574060902

===Scipy _CDF _Single===

x: 3.5746341720415717
args: (42.462304323139634,)

Output: cdf single = x

cdf_single: 0.14688579943003763

===Scipy _CDF _Single===

x: 3.6240788074927974
args: (42.462304323139634,)

Output: cdf single = x

cdf_single: 0.22864155069396516

===Scipy _CDF _Single===

x: 3.6735234429440227
args: (42.462304323139634,)

Output: cdf single = x

cdf_single: 0.3329485778789045

===Scipy _CDF _Single===

x: 3.722968078395248
args: (42.462304323139634,)

Output: cdf single = x

cdf_single: 0.45417014971839353

===Scipy _CDF _Single===

x: 3.7724127138464736
args: (42.462304323139634,)

Output: cdf single = x

cdf_single: 0.5819014353968615

===Scipy _CDF _Single===

x: 3.821857349297699
args: (42.462304323139634,)

Output: cdf single = x

cdf_single: 0.7033371556747676

===Scipy _CDF _Single===

x: 3.871301984748924
args: (42.462304323139634,)

Output: cdf single = x

cdf_single: 0.806971613869341

===Scipy _CDF _Single===

x: 3.9207466202001497
args: (42.462304323139634,)

Output: cdf single = x

cdf_single: 0.8859372479720091

===Scipy _CDF _Single===

x: 3.970191255651375
args: (42.462304323139634,)

Output: cdf single = x

cdf_single: 0.9393569504890946

===Scipy _CDF _Single===

x: 4.019635891102601
args: (42.462304323139634,)

Output: cdf single = x

cdf_single: 0.9712522871336162

===Scipy _CDF _Single===

x: 4.069080526553826
args: (42.462304323139634,)

Output: cdf single = x

cdf_single: 0.987956348728681
_cdf = _cdfvec(x, *args) = [0.00600252 0.01291969 0.02613962 0.04962334 0.08825584 0.1468858
 0.22864155 0.33294858 0.45417015 0.58190144 0.70333716 0.80697161
 0.88593725 0.93935695 0.97125229 0.98795635]
prob_less_or_equal: [0.00600252 0.01291969 0.02613962 0.04962334 0.08825584 0.1468858
 0.22864155 0.33294858 0.45417015 0.58190144 0.70333716 0.80697161
 0.88593725 0.93935695 0.97125229 0.98795635]
cdf_over: [0.99399748 0.98708031 0.97386038 0.95037666 0.91174416 0.8531142
 0.77135845 0.66705142 0.54582985 0.41809856 0.29666284 0.19302839
 0.11406275 0.06064305 0.02874771 0.01204365]

===Test Distribute All Probs===

cond_data: [ 7 10]
player: myles turner
stat: reb
condition: A Thompson F opp starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.4026210308074951

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-83.84157567566989, 22.82910573996873, 57.60947969186903)

===Scipy CDF===

test_argsreduce = goodargs = [array([3.69447562, 3.73827935, 3.78208309, 3.82588682, 3.86969055,
       3.91349428, 3.95729801, 4.00110174, 4.04490547, 4.0887092 ,
       4.13251293, 4.17631666, 4.22012039, 4.26392412, 4.30772785,
       4.35153158]), array([57.60947969, 57.60947969, 57.60947969, 57.60947969, 57.60947969,
       57.60947969, 57.60947969, 57.60947969, 57.60947969, 57.60947969,
       57.60947969, 57.60947969, 57.60947969, 57.60947969, 57.60947969,
       57.60947969])]

===Scipy _CDF===

x: [3.69447562 3.73827935 3.78208309 3.82588682 3.86969055 3.91349428
 3.95729801 4.00110174 4.04490547 4.0887092  4.13251293 4.17631666
 4.22012039 4.26392412 4.30772785 4.35153158]
args: (array([57.60947969, 57.60947969, 57.60947969, 57.60947969, 57.60947969,
       57.60947969, 57.60947969, 57.60947969, 57.60947969, 57.60947969,
       57.60947969, 57.60947969, 57.60947969, 57.60947969, 57.60947969,
       57.60947969]),)

===Scipy _CDF _Single===

x: 3.6944756240717043
args: (57.60947969186903,)

Output: cdf single = x

cdf_single: 0.005745800236883374

===Scipy _CDF _Single===

x: 3.738279354773657
args: (57.60947969186903,)

Output: cdf single = x

cdf_single: 0.01289180218196452

===Scipy _CDF _Single===

x: 3.7820830854756102
args: (57.60947969186903,)

Output: cdf single = x

cdf_single: 0.026966114292193585

===Scipy _CDF _Single===

x: 3.825886816177563
args: (57.60947969186903,)

Output: cdf single = x

cdf_single: 0.052501634410144

===Scipy _CDF _Single===

x: 3.869690546879516
args: (57.60947969186903,)

Output: cdf single = x

cdf_single: 0.0950265385992093

===Scipy _CDF _Single===

x: 3.913494277581469
args: (57.60947969186903,)

Output: cdf single = x

cdf_single: 0.15978290013495275

===Scipy _CDF _Single===

x: 3.957298008283422
args: (57.60947969186903,)

Output: cdf single = x

cdf_single: 0.24959816791565284

===Scipy _CDF _Single===

x: 4.001101738985375
args: (57.60947969186903,)

Output: cdf single = x

cdf_single: 0.36259349523301865

===Scipy _CDF _Single===

x: 4.044905469687328
args: (57.60947969186903,)

Output: cdf single = x

cdf_single: 0.4909890311217274

===Scipy _CDF _Single===

x: 4.088709200389281
args: (57.60947969186903,)

Output: cdf single = x

cdf_single: 0.6221710389071775

===Scipy _CDF _Single===

x: 4.1325129310912345
args: (57.60947969186903,)

Output: cdf single = x

cdf_single: 0.7421223658952492

===Scipy _CDF _Single===

x: 4.176316661793187
args: (57.60947969186903,)

Output: cdf single = x

cdf_single: 0.8398069087365388

===Scipy _CDF _Single===

x: 4.22012039249514
args: (57.60947969186903,)

Output: cdf single = x

cdf_single: 0.9102970513074262

===Scipy _CDF _Single===

x: 4.263924123197094
args: (57.60947969186903,)

Output: cdf single = x

cdf_single: 0.9551311545139299

===Scipy _CDF _Single===

x: 4.307727853899046
args: (57.60947969186903,)

Output: cdf single = x

cdf_single: 0.9801266464857723

===Scipy _CDF _Single===

x: 4.351531584600999
args: (57.60947969186903,)

Output: cdf single = x

cdf_single: 0.9922711200678684
_cdf = _cdfvec(x, *args) = [0.0057458  0.0128918  0.02696611 0.05250163 0.09502654 0.1597829
 0.24959817 0.3625935  0.49098903 0.62217104 0.74212237 0.83980691
 0.91029705 0.95513115 0.98012665 0.99227112]
prob_less_or_equal: [0.0057458  0.0128918  0.02696611 0.05250163 0.09502654 0.1597829
 0.24959817 0.3625935  0.49098903 0.62217104 0.74212237 0.83980691
 0.91029705 0.95513115 0.98012665 0.99227112]
cdf_over: [0.9942542  0.9871082  0.97303389 0.94749837 0.90497346 0.8402171
 0.75040183 0.6374065  0.50901097 0.37782896 0.25787763 0.16019309
 0.08970295 0.04486885 0.01987335 0.00772888]

stat_name: ast
player_stat_model_name: skewnorm
player_stat_model_avg: 1.36
player_stat_model_max: 6.5

===Test Distribute All Probs===

cond_data: [2 1 1 3 1 1 1 1 1 0 1 4 3 1 2 4 2 0 2 0 1 0 1 0 0 1 0 1 2 1 1 2 0 2 0 1 3
 0 0 3 0 2 2 0 4 2 1 1]
player: myles turner
stat: ast
condition: all
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.374250888824463

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.018087077032259296, 1.6447799291173548, 240.587939877328)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.31498808, 0.92297216, 1.53095623, 2.1389403 , 2.74692437,
       3.35490845, 3.96289252]), array([240.58793988, 240.58793988, 240.58793988, 240.58793988,
       240.58793988, 240.58793988, 240.58793988])]

===Scipy _CDF===

x: [0.31498808 0.92297216 1.53095623 2.1389403  2.74692437 3.35490845
 3.96289252]
args: (array([240.58793988, 240.58793988, 240.58793988, 240.58793988,
       240.58793988, 240.58793988, 240.58793988]),)

===Scipy _CDF _Single===

x: 0.3149880831232431
args: (240.587939877328,)

Output: cdf single = x

cdf_single: 0.2472292968071104

===Scipy _CDF _Single===

x: 0.9229721558232512
args: (240.587939877328,)

Output: cdf single = x

cdf_single: 0.6439782841496972

===Scipy _CDF _Single===

x: 1.5309562285232592
args: (240.587939877328,)

Output: cdf single = x

cdf_single: 0.8742197889963476

===Scipy _CDF _Single===

x: 2.138940301223267
args: (240.587939877328,)

Output: cdf single = x

cdf_single: 0.9675594964224404

===Scipy _CDF _Single===

x: 2.7469243739232754
args: (240.587939877328,)

Output: cdf single = x

cdf_single: 0.9939842995984615

===Scipy _CDF _Single===

x: 3.3549084466232832
args: (240.587939877328,)

Output: cdf single = x

cdf_single: 0.9992060874510519

===Scipy _CDF _Single===

x: 3.9628925193232916
args: (240.587939877328,)

Output: cdf single = x

cdf_single: 0.9999259528767545
_cdf = _cdfvec(x, *args) = [0.2472293  0.64397828 0.87421979 0.9675595  0.9939843  0.99920609
 0.99992595]
prob_less_or_equal: [0.2472293  0.64397828 0.87421979 0.9675595  0.9939843  0.999
 0.999     ]
cdf_over: [0.7527707  0.35602172 0.12578021 0.0324405  0.0060157  0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [2 1 1 3 1 1 4 3 1 2 4 2 2 0 0 1 1 1 1 2 0 2 0 1 3 0 0 3 0 2 2 0 4 2 1 1]
player: myles turner
stat: ast
condition: 0 lag
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.3242619037628174

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.02043328591303393, 1.9094361187740612, 210.42981510150403)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.2725581 , 0.79627293, 1.31998775, 1.84370257, 2.3674174 ,
       2.89113222, 3.41484704]), array([210.4298151, 210.4298151, 210.4298151, 210.4298151, 210.4298151,
       210.4298151, 210.4298151])]

===Scipy _CDF===

x: [0.2725581  0.79627293 1.31998775 1.84370257 2.3674174  2.89113222
 3.41484704]
args: (array([210.4298151, 210.4298151, 210.4298151, 210.4298151, 210.4298151,
       210.4298151, 210.4298151]),)

===Scipy _CDF _Single===

x: 0.27255810278019327
args: (210.42981510150403,)

Output: cdf single = x

cdf_single: 0.21480707801251714

===Scipy _CDF _Single===

x: 0.7962729263177528
args: (210.42981510150403,)

Output: cdf single = x

cdf_single: 0.5741265818148389

===Scipy _CDF _Single===

x: 1.3199877498553123
args: (210.42981510150403,)

Output: cdf single = x

cdf_single: 0.8131608919741581

===Scipy _CDF _Single===

x: 1.8437025733928718
args: (210.42981510150403,)

Output: cdf single = x

cdf_single: 0.9347735022047734

===Scipy _CDF _Single===

x: 2.3674173969304317
args: (210.42981510150403,)

Output: cdf single = x

cdf_single: 0.982087281842546

===Scipy _CDF _Single===

x: 2.8911322204679912
args: (210.42981510150403,)

Output: cdf single = x

cdf_single: 0.9961614341400307

===Scipy _CDF _Single===

x: 3.4148470440055507
args: (210.42981510150403,)

Output: cdf single = x

cdf_single: 0.9993618216231571
_cdf = _cdfvec(x, *args) = [0.21480708 0.57412658 0.81316089 0.9347735  0.98208728 0.99616143
 0.99936182]
prob_less_or_equal: [0.21480708 0.57412658 0.81316089 0.9347735  0.98208728 0.99616143
 0.999     ]
cdf_over: [0.78519292 0.42587342 0.18683911 0.0652265  0.01791272 0.00383857
 0.001     ]

===Test Distribute All Probs===

cond_data: [2 1 1 3 1 1 1 1 1 0 1 4 3 1 2 4 2 0 2 0 1 0 1 0 0 1 0 1 2 1 1 2 0 2 0 1 3
 0 0 3 0 2 2 0 4 2 1 1]
player: myles turner
stat: ast
condition: 0-4 prev
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.2631068229675293

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.018219742151334355, 1.644924057072836, 250.0)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.31504114, 0.92297194, 1.53090274, 2.13883354, 2.74676434,
       3.35469514, 3.96262594]), array([250., 250., 250., 250., 250., 250., 250.])]

===Scipy _CDF===

x: [0.31504114 0.92297194 1.53090274 2.13883354 2.74676434 3.35469514
 3.96262594]
args: (array([250., 250., 250., 250., 250., 250., 250.]),)

===Scipy _CDF _Single===

x: 0.31504113513514503
args: (250.0,)

Output: cdf single = x

cdf_single: 0.24726957778129327

===Scipy _CDF _Single===

x: 0.9229719363780384
args: (250.0,)

Output: cdf single = x

cdf_single: 0.6439781697872748

===Scipy _CDF _Single===

x: 1.5309027376209317
args: (250.0,)

Output: cdf single = x

cdf_single: 0.874206567451348

===Scipy _CDF _Single===

x: 2.138833538863825
args: (250.0,)

Output: cdf single = x

cdf_single: 0.9675508478398487

===Scipy _CDF _Single===

x: 2.746764340106718
args: (250.0,)

Output: cdf single = x

cdf_single: 0.9939813636885344

===Scipy _CDF _Single===

x: 3.3546951413496116
args: (250.0,)

Output: cdf single = x

cdf_single: 0.9992054750785523

===Scipy _CDF _Single===

x: 3.962625942592505
args: (250.0,)

Output: cdf single = x

cdf_single: 0.9999258701208195
_cdf = _cdfvec(x, *args) = [0.24726958 0.64397817 0.87420657 0.96755085 0.99398136 0.99920548
 0.99992587]
prob_less_or_equal: [0.24726958 0.64397817 0.87420657 0.96755085 0.99398136 0.999
 0.999     ]
cdf_over: [0.75273042 0.35602183 0.12579343 0.03244915 0.00601864 0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [2 1 1 3 1 1 1 1]
player: myles turner
stat: ast
condition: P Siakam PF starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.2657930850982666

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.015761021442330124, 1.746763298008457, 116.01454211047061)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.29526612, 0.86775353, 1.44024094, 2.01272836, 2.58521577,
       3.15770318, 3.73019059]), array([116.01454211, 116.01454211, 116.01454211, 116.01454211,
       116.01454211, 116.01454211, 116.01454211])]

===Scipy _CDF===

x: [0.29526612 0.86775353 1.44024094 2.01272836 2.58521577 3.15770318
 3.73019059]
args: (array([116.01454211, 116.01454211, 116.01454211, 116.01454211,
       116.01454211, 116.01454211, 116.01454211]),)

===Scipy _CDF _Single===

x: 0.2952661199318564
args: (116.01454211047061,)

Output: cdf single = x

cdf_single: 0.23220940437911572

===Scipy _CDF _Single===

x: 0.8677535320157566
args: (116.01454211047061,)

Output: cdf single = x

cdf_single: 0.6144707266175843

===Scipy _CDF _Single===

x: 1.4402409440996564
args: (116.01454211047061,)

Output: cdf single = x

cdf_single: 0.8502007569942228

===Scipy _CDF _Single===

x: 2.0127283561835565
args: (116.01454211047061,)

Output: cdf single = x

cdf_single: 0.9558567854410642

===Scipy _CDF _Single===

x: 2.5852157682674566
args: (116.01454211047061,)

Output: cdf single = x

cdf_single: 0.9902681925385438

===Scipy _CDF _Single===

x: 3.1577031803513567
args: (116.01454211047061,)

Output: cdf single = x

cdf_single: 0.9984098262116502

===Scipy _CDF _Single===

x: 3.730190592435257
args: (116.01454211047061,)

Output: cdf single = x

cdf_single: 0.9998086650211088
_cdf = _cdfvec(x, *args) = [0.2322094  0.61447073 0.85020076 0.95585679 0.99026819 0.99840983
 0.99980867]
prob_less_or_equal: [0.2322094  0.61447073 0.85020076 0.95585679 0.99026819 0.99840983
 0.999     ]
cdf_over: [0.7677906  0.38552927 0.14979924 0.04414321 0.00973181 0.00159017
 0.001     ]

===Test Distribute All Probs===

cond_data: [2 1 1 3 1 1 1 1 4 3 1 2 4 2 0 2 0 1 1]
player: myles turner
stat: ast
condition: A Nesmith SF starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.061697006225586

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.021379200786902298, 2.0759718354020884, 178.4435645329306)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.25114898, 0.73285108, 1.21455318, 1.69625529, 2.17795739,
       2.65965949, 3.1413616 ]), array([178.44356453, 178.44356453, 178.44356453, 178.44356453,
       178.44356453, 178.44356453, 178.44356453])]

===Scipy _CDF===

x: [0.25114898 0.73285108 1.21455318 1.69625529 2.17795739 2.65965949
 3.1413616 ]
args: (array([178.44356453, 178.44356453, 178.44356453, 178.44356453,
       178.44356453, 178.44356453, 178.44356453]),)

===Scipy _CDF _Single===

x: 0.25114897605820274
args: (178.4435645329306,)

Output: cdf single = x

cdf_single: 0.19830106838536762

===Scipy _CDF _Single===

x: 0.732851079596767
args: (178.4435645329306,)

Output: cdf single = x

cdf_single: 0.5363507368762991

===Scipy _CDF _Single===

x: 1.2145531831353311
args: (178.4435645329306,)

Output: cdf single = x

cdf_single: 0.7754634459394264

===Scipy _CDF _Single===

x: 1.6962552866738954
args: (178.4435645329306,)

Output: cdf single = x

cdf_single: 0.9101624557201903

===Scipy _CDF _Single===

x: 2.1779573902124594
args: (178.4435645329306,)

Output: cdf single = x

cdf_single: 0.9705907908200158

===Scipy _CDF _Single===

x: 2.6596594937510236
args: (178.4435645329306,)

Output: cdf single = x

cdf_single: 0.9921780314347513

===Scipy _CDF _Single===

x: 3.141361597289588
args: (178.4435645329306,)

Output: cdf single = x

cdf_single: 0.9983183573134754
_cdf = _cdfvec(x, *args) = [0.19830107 0.53635074 0.77546345 0.91016246 0.97059079 0.99217803
 0.99831836]
prob_less_or_equal: [0.19830107 0.53635074 0.77546345 0.91016246 0.97059079 0.99217803
 0.99831836]
cdf_over: [0.80169893 0.46364926 0.22453655 0.08983754 0.02940921 0.00782197
 0.00168164]

===Test Distribute All Probs===

cond_data: [2 1 1 3 1 1 1 1 1 0 1 4 3 1 2 4 2 0 2 0 1 0 1 0 0 1 0 1 2 1 1 2 0 2 0 1 3
 0 0 3 0 2 2 0 4 2 1 1]
player: myles turner
stat: ast
condition: M Turner C starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.338953971862793

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.018194558088692712, 1.6448970998439678, 248.1633578433493)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.31503099, 0.92297175, 1.53091252, 2.13885328, 2.74679404,
       3.35473481, 3.96267557]), array([248.16335784, 248.16335784, 248.16335784, 248.16335784,
       248.16335784, 248.16335784, 248.16335784])]

===Scipy _CDF===

x: [0.31503099 0.92297175 1.53091252 2.13885328 2.74679404 3.35473481
 3.96267557]
args: (array([248.16335784, 248.16335784, 248.16335784, 248.16335784,
       248.16335784, 248.16335784, 248.16335784]),)

===Scipy _CDF _Single===

x: 0.31503098773646554
args: (248.1633578433493,)

Output: cdf single = x

cdf_single: 0.2472618732090424

===Scipy _CDF _Single===

x: 0.9229717519914808
args: (248.1633578433493,)

Output: cdf single = x

cdf_single: 0.6439780736954209

===Scipy _CDF _Single===

x: 1.530912516246496
args: (248.1633578433493,)

Output: cdf single = x

cdf_single: 0.8742089845514217

===Scipy _CDF _Single===

x: 2.1388532805015115
args: (248.1633578433493,)

Output: cdf single = x

cdf_single: 0.9675524472150842

===Scipy _CDF _Single===

x: 2.746794044756527
args: (248.1633578433493,)

Output: cdf single = x

cdf_single: 0.9939819087426647

===Scipy _CDF _Single===

x: 3.354734809011542
args: (248.1633578433493,)

Output: cdf single = x

cdf_single: 0.9992055889925708

===Scipy _CDF _Single===

x: 3.9626755732665573
args: (248.1633578433493,)

Output: cdf single = x

cdf_single: 0.9999258855347625
_cdf = _cdfvec(x, *args) = [0.24726187 0.64397807 0.87420898 0.96755245 0.99398191 0.99920559
 0.99992589]
prob_less_or_equal: [0.24726187 0.64397807 0.87420898 0.96755245 0.99398191 0.999
 0.999     ]
cdf_over: [0.75273813 0.35602193 0.12579102 0.03244755 0.00601809 0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [2 3 1 1 0 1 4 3 0 2 0 1 0 1 4]
player: myles turner
stat: ast
condition: A Nembhard PG starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.3821709156036377

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.020034531837052297, 1.9508998064736136, 176.44570035791503)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.26656086, 0.77914485, 1.29172883, 1.80431282, 2.31689681,
       2.82948079, 3.34206478]), array([176.44570036, 176.44570036, 176.44570036, 176.44570036,
       176.44570036, 176.44570036, 176.44570036])]

===Scipy _CDF===

x: [0.26656086 0.77914485 1.29172883 1.80431282 2.31689681 2.82948079
 3.34206478]
args: (array([176.44570036, 176.44570036, 176.44570036, 176.44570036,
       176.44570036, 176.44570036, 176.44570036]),)

===Scipy _CDF _Single===

x: 0.26656086084556485
args: (176.44570035791503,)

Output: cdf single = x

cdf_single: 0.21019270598573703

===Scipy _CDF _Single===

x: 0.7791448473125937
args: (176.44570035791503,)

Output: cdf single = x

cdf_single: 0.5641056055057784

===Scipy _CDF _Single===

x: 1.2917288337796227
args: (176.44570035791503,)

Output: cdf single = x

cdf_single: 0.8035489316096946

===Scipy _CDF _Single===

x: 1.8043128202466514
args: (176.44570035791503,)

Output: cdf single = x

cdf_single: 0.9288177188737167

===Scipy _CDF _Single===

x: 2.31689680671368
args: (176.44570035791503,)

Output: cdf single = x

cdf_single: 0.9794906462330145

===Scipy _CDF _Single===

x: 2.8294807931807093
args: (176.44570035791503,)

Output: cdf single = x

cdf_single: 0.9953376401574515

===Scipy _CDF _Single===

x: 3.342064779647738
args: (176.44570035791503,)

Output: cdf single = x

cdf_single: 0.9991684234911706
_cdf = _cdfvec(x, *args) = [0.21019271 0.56410561 0.80354893 0.92881772 0.97949065 0.99533764
 0.99916842]
prob_less_or_equal: [0.21019271 0.56410561 0.80354893 0.92881772 0.97949065 0.99533764
 0.999     ]
cdf_over: [0.78980729 0.43589439 0.19645107 0.07118228 0.02050935 0.00466236
 0.001     ]

===Test Distribute All Probs===

cond_data: [2 1 1 1 1 2 4 2 0 2 0 1 0 1 0 1 0 1 2 1 2 0 2 0 1 3 0 0 3 0 2 2 0 2 1 1]
player: myles turner
stat: ast
condition: T Haliburton PG starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.2659411430358887

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.015391942271206934, 1.484549278913537, 183.37360258453208)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.34716998, 1.0207751 , 1.69438023, 2.36798535, 3.04159047,
       3.7151956 , 4.38880072]), array([183.37360258, 183.37360258, 183.37360258, 183.37360258,
       183.37360258, 183.37360258, 183.37360258])]

===Scipy _CDF===

x: [0.34716998 1.0207751  1.69438023 2.36798535 3.04159047 3.7151956
 4.38880072]
args: (array([183.37360258, 183.37360258, 183.37360258, 183.37360258,
       183.37360258, 183.37360258, 183.37360258]),)

===Scipy _CDF _Single===

x: 0.3471699791928728
args: (183.37360258453208,)

Output: cdf single = x

cdf_single: 0.27153637700478356

===Scipy _CDF _Single===

x: 1.0207751024474185
args: (183.37360258453208,)

Output: cdf single = x

cdf_single: 0.6926390674319347

===Scipy _CDF _Single===

x: 1.694380225701964
args: (183.37360258453208,)

Output: cdf single = x

cdf_single: 0.9098069454947729

===Scipy _CDF _Single===

x: 2.3679853489565095
args: (183.37360258453208,)

Output: cdf single = x

cdf_single: 0.982114755860807

===Scipy _CDF _Single===

x: 3.0415904722110554
args: (183.37360258453208,)

Output: cdf single = x

cdf_single: 0.9976466816841233

===Scipy _CDF _Single===

x: 3.715195595465601
args: (183.37360258453208,)

Output: cdf single = x

cdf_single: 0.9997969534481573

===Scipy _CDF _Single===

x: 4.388800718720146
args: (183.37360258453208,)

Output: cdf single = x

cdf_single: 0.9999886022550091
_cdf = _cdfvec(x, *args) = [0.27153638 0.69263907 0.90980695 0.98211476 0.99764668 0.99979695
 0.9999886 ]
prob_less_or_equal: [0.27153638 0.69263907 0.90980695 0.98211476 0.99764668 0.999
 0.999     ]
cdf_over: [0.72846362 0.30736093 0.09019305 0.01788524 0.00235332 0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [2 4 3 1 4 2 0 2 0 1 3 0 0 3 0 2 2 0 4 2 1 1]
player: myles turner
stat: ast
condition: B Hield SG bench
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.0511741638183594

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.023024716268821906, 2.141010439562143, 215.34471358634184)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.24428826, 0.71135745, 1.17842663, 1.64549581, 2.112565  ,
       2.57963418, 3.04670337]), array([215.34471359, 215.34471359, 215.34471359, 215.34471359,
       215.34471359, 215.34471359, 215.34471359])]

===Scipy _CDF===

x: [0.24428826 0.71135745 1.17842663 1.64549581 2.112565   2.57963418
 3.04670337]
args: (array([215.34471359, 215.34471359, 215.34471359, 215.34471359,
       215.34471359, 215.34471359, 215.34471359]),)

===Scipy _CDF _Single===

x: 0.244288260628839
args: (215.34471358634184,)

Output: cdf single = x

cdf_single: 0.19299242523248128

===Scipy _CDF _Single===

x: 0.711357445123105
args: (215.34471358634184,)

Output: cdf single = x

cdf_single: 0.5231372376872753

===Scipy _CDF _Single===

x: 1.1784266296173707
args: (215.34471358634184,)

Output: cdf single = x

cdf_single: 0.7613734334082527

===Scipy _CDF _Single===

x: 1.6454958141116367
args: (215.34471358634184,)

Output: cdf single = x

cdf_single: 0.9001323932059397

===Scipy _CDF _Single===

x: 2.1125649986059023
args: (215.34471358634184,)

Output: cdf single = x

cdf_single: 0.9653619828258805

===Scipy _CDF _Single===

x: 2.5796341831001683
args: (215.34471358634184,)

Output: cdf single = x

cdf_single: 0.990109497463069

===Scipy _CDF _Single===

x: 3.046703367594434
args: (215.34471358634184,)

Output: cdf single = x

cdf_single: 0.9976863409078962
_cdf = _cdfvec(x, *args) = [0.19299243 0.52313724 0.76137343 0.90013239 0.96536198 0.9901095
 0.99768634]
prob_less_or_equal: [0.19299243 0.52313724 0.76137343 0.90013239 0.96536198 0.9901095
 0.99768634]
cdf_over: [0.80700757 0.47686276 0.23862657 0.09986761 0.03463802 0.0098905
 0.00231366]

===Test Distribute All Probs===

cond_data: [2 1 1 1 0 1 4 3 1 2 4 2 0 2 0 1 0 1 0 0 1 0 1 2 1 2 0 2 1 3 0 3 2 4 1]
player: myles turner
stat: ast
condition: I Jackson SF bench
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.3041000366210938

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.01521117513177295, 1.7774639365131464, 101.85308156283024)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.28985689, 0.85245621, 1.41505553, 1.97765485, 2.54025417,
       3.10285349, 3.66545281]), array([101.85308156, 101.85308156, 101.85308156, 101.85308156,
       101.85308156, 101.85308156, 101.85308156])]

===Scipy _CDF===

x: [0.28985689 0.85245621 1.41505553 1.97765485 2.54025417 3.10285349
 3.66545281]
args: (array([101.85308156, 101.85308156, 101.85308156, 101.85308156,
       101.85308156, 101.85308156, 101.85308156]),)

===Scipy _CDF _Single===

x: 0.289856893604526
args: (101.85308156283024,)

Output: cdf single = x

cdf_single: 0.228074279577169

===Scipy _CDF _Single===

x: 0.8524562124754909
args: (101.85308156283024,)

Output: cdf single = x

cdf_single: 0.6060390677502371

===Scipy _CDF _Single===

x: 1.4150555313464555
args: (101.85308156283024,)

Output: cdf single = x

cdf_single: 0.8429477850607289

===Scipy _CDF _Single===

x: 1.9776548502174203
args: (101.85308156283024,)

Output: cdf single = x

cdf_single: 0.952032343041177

===Scipy _CDF _Single===

x: 2.540254169088385
args: (101.85308156283024,)

Output: cdf single = x

cdf_single: 0.9889228064433242

===Scipy _CDF _Single===

x: 3.10285348795935
args: (101.85308156283024,)

Output: cdf single = x

cdf_single: 0.9980833549895655

===Scipy _CDF _Single===

x: 3.6654528068303147
args: (101.85308156283024,)

Output: cdf single = x

cdf_single: 0.9997530986592498
_cdf = _cdfvec(x, *args) = [0.22807428 0.60603907 0.84294779 0.95203234 0.98892281 0.99808335
 0.9997531 ]
prob_less_or_equal: [0.22807428 0.60603907 0.84294779 0.95203234 0.98892281 0.99808335
 0.999     ]
cdf_over: [0.77192572 0.39396093 0.15705221 0.04796766 0.01107719 0.00191665
 0.001     ]

===Test Distribute All Probs===

cond_data: [2 3 1 1 1 1 1 4 3 1 2 4 2 0 2 0 1 0 1 0 0 1 0 1 2 1 1 2 0 2 0 1]
player: myles turner
stat: ast
condition: B Mathurin SG bench
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.579138994216919

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.017345901797081845, 1.6308608954433979, 204.6365693226398)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.31722197, 0.93039505, 1.54356813, 2.15674121, 2.76991429,
       3.38308737, 3.99626045]), array([204.63656932, 204.63656932, 204.63656932, 204.63656932,
       204.63656932, 204.63656932, 204.63656932])]

===Scipy _CDF===

x: [0.31722197 0.93039505 1.54356813 2.15674121 2.76991429 3.38308737
 3.99626045]
args: (array([204.63656932, 204.63656932, 204.63656932, 204.63656932,
       204.63656932, 204.63656932, 204.63656932]),)

===Scipy _CDF _Single===

x: 0.3172219673931334
args: (204.6365693226398,)

Output: cdf single = x

cdf_single: 0.2489248175088714

===Scipy _CDF _Single===

x: 0.9303950484290364
args: (204.6365693226398,)

Output: cdf single = x

cdf_single: 0.6478334186417344

===Scipy _CDF _Single===

x: 1.5435681294649395
args: (204.6365693226398,)

Output: cdf single = x

cdf_single: 0.8773070091691744

===Scipy _CDF _Single===

x: 2.1567412105008428
args: (204.6365693226398,)

Output: cdf single = x

cdf_single: 0.9689741659213955

===Scipy _CDF _Single===

x: 2.7699142915367454
args: (204.6365693226398,)

Output: cdf single = x

cdf_single: 0.9943928954823119

===Scipy _CDF _Single===

x: 3.3830873725726485
args: (204.6365693226398,)

Output: cdf single = x

cdf_single: 0.9992832417471902

===Scipy _CDF _Single===

x: 3.9962604536085515
args: (204.6365693226398,)

Output: cdf single = x

cdf_single: 0.9999356490674266
_cdf = _cdfvec(x, *args) = [0.24892482 0.64783342 0.87730701 0.96897417 0.9943929  0.99928324
 0.99993565]
prob_less_or_equal: [0.24892482 0.64783342 0.87730701 0.96897417 0.9943929  0.999
 0.999     ]
cdf_over: [0.75107518 0.35216658 0.12269299 0.03102583 0.0056071  0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [2 3 1 1 1 0 1 4 3 1 2 4 2 0 2 0 1 0 1 0 1 2 1 1 0 0 1 3 0 0 2 2 4 1 1]
player: myles turner
stat: ast
condition: TJ McConnell PG bench
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.3116061687469482

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.018086061278351356, 1.7450941850696342, 183.07438140881766)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.29688086, 0.86991583, 1.44295081, 2.01598578, 2.58902075,
       3.16205573, 3.7350907 ]), array([183.07438141, 183.07438141, 183.07438141, 183.07438141,
       183.07438141, 183.07438141, 183.07438141])]

===Scipy _CDF===

x: [0.29688086 0.86991583 1.44295081 2.01598578 2.58902075 3.16205573
 3.7350907 ]
args: (array([183.07438141, 183.07438141, 183.07438141, 183.07438141,
       183.07438141, 183.07438141, 183.07438141]),)

===Scipy _CDF _Single===

x: 0.29688085933177205
args: (183.07438140881766,)

Output: cdf single = x

cdf_single: 0.23344253023904635

===Scipy _CDF _Single===

x: 0.8699158327765418
args: (183.07438140881766,)

Output: cdf single = x

cdf_single: 0.6156535976584209

===Scipy _CDF _Single===

x: 1.4429508062213117
args: (183.07438140881766,)

Output: cdf single = x

cdf_single: 0.850965670435354

===Scipy _CDF _Single===

x: 2.015985779666081
args: (183.07438140881766,)

Output: cdf single = x

cdf_single: 0.9561985371991092

===Scipy _CDF _Single===

x: 2.589020753110851
args: (183.07438140881766,)

Output: cdf single = x

cdf_single: 0.9903750706374084

===Scipy _CDF _Single===

x: 3.162055726555621
args: (183.07438140881766,)

Output: cdf single = x

cdf_single: 0.9984334041850789

===Scipy _CDF _Single===

x: 3.7350907000003906
args: (183.07438140881766,)

Output: cdf single = x

cdf_single: 0.9998123524554837
_cdf = _cdfvec(x, *args) = [0.23344253 0.6156536  0.85096567 0.95619854 0.99037507 0.9984334
 0.99981235]
prob_less_or_equal: [0.23344253 0.6156536  0.85096567 0.95619854 0.99037507 0.9984334
 0.999     ]
cdf_over: [0.76655747 0.3843464  0.14903433 0.04380146 0.00962493 0.0015666
 0.001     ]

===Test Distribute All Probs===

cond_data: [2 1 1 3 1 1 1 0 0 0 2 0 1 3 0 0 0 2 2 0 2 1 1]
player: myles turner
stat: ast
condition: J Smith PF bench
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.104363203048706

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.012560898208257251, 1.3263538717106362, 133.17168688322226)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.3864428 , 1.1403894 , 1.89433601, 2.64828261, 3.40222922,
       4.15617583, 4.91012243]), array([133.17168688, 133.17168688, 133.17168688, 133.17168688,
       133.17168688, 133.17168688, 133.17168688])]

===Scipy _CDF===

x: [0.3864428  1.1403894  1.89433601 2.64828261 3.40222922 4.15617583
 4.91012243]
args: (array([133.17168688, 133.17168688, 133.17168688, 133.17168688,
       133.17168688, 133.17168688, 133.17168688]),)

===Scipy _CDF _Single===

x: 0.3864427956524108
args: (133.17168688322226,)

Output: cdf single = x

cdf_single: 0.30083123934491557

===Scipy _CDF _Single===

x: 1.1403894017042873
args: (133.17168688322226,)

Output: cdf single = x

cdf_single: 0.7458758936839688

===Scipy _CDF _Single===

x: 1.8943360077561633
args: (133.17168688322226,)

Output: cdf single = x

cdf_single: 0.9418195755409106

===Scipy _CDF _Single===

x: 2.6482826138080395
args: (133.17168688322226,)

Output: cdf single = x

cdf_single: 0.9919098138423793

===Scipy _CDF _Single===

x: 3.402229219859916
args: (133.17168688322226,)

Output: cdf single = x

cdf_single: 0.9993316144718918

===Scipy _CDF _Single===

x: 4.1561758259117925
args: (133.17168688322226,)

Output: cdf single = x

cdf_single: 0.9999676381116017

===Scipy _CDF _Single===

x: 4.910122431963669
args: (133.17168688322226,)

Output: cdf single = x

cdf_single: 0.999999089804537
_cdf = _cdfvec(x, *args) = [0.30083124 0.74587589 0.94181958 0.99190981 0.99933161 0.99996764
 0.99999909]
prob_less_or_equal: [0.30083124 0.74587589 0.94181958 0.99190981 0.999      0.999
 0.999     ]
cdf_over: [0.69916876 0.25412411 0.05818042 0.00809019 0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [2 1 1 3 1 1 1 1 1 0 1 4 1 2 4 2 0 2 0 1 1]
player: myles turner
stat: ast
condition: O Toppin PF bench
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.2554070949554443

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.019724774359276723, 1.8188005089485035, 224.230225017877)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.28575084, 0.83556375, 1.38537666, 1.93518957, 2.48500248,
       3.03481539, 3.5846283 ]), array([224.23022502, 224.23022502, 224.23022502, 224.23022502,
       224.23022502, 224.23022502, 224.23022502])]

===Scipy _CDF===

x: [0.28575084 0.83556375 1.38537666 1.93518957 2.48500248 3.03481539
 3.5846283 ]
args: (array([224.23022502, 224.23022502, 224.23022502, 224.23022502,
       224.23022502, 224.23022502, 224.23022502]),)

===Scipy _CDF _Single===

x: 0.2857508406239356
args: (224.230225017877,)

Output: cdf single = x

cdf_single: 0.22493103775060322

===Scipy _CDF _Single===

x: 0.8355637503300839
args: (224.230225017877,)

Output: cdf single = x

cdf_single: 0.5965996311289736

===Scipy _CDF _Single===

x: 1.385376660036232
args: (224.230225017877,)

Output: cdf single = x

cdf_single: 0.8340626760362075

===Scipy _CDF _Single===

x: 1.9351895697423802
args: (224.230225017877,)

Output: cdf single = x

cdf_single: 0.9470329627956525

===Scipy _CDF _Single===

x: 2.485002479448528
args: (224.230225017877,)

Output: cdf single = x

cdf_single: 0.9870449467682822

===Scipy _CDF _Single===

x: 3.0348153891546765
args: (224.230225017877,)

Output: cdf single = x

cdf_single: 0.9975931703882226

===Scipy _CDF _Single===

x: 3.5846282988608245
args: (224.230225017877,)

Output: cdf single = x

cdf_single: 0.9996624414001701
_cdf = _cdfvec(x, *args) = [0.22493104 0.59659963 0.83406268 0.94703296 0.98704495 0.99759317
 0.99966244]
prob_less_or_equal: [0.22493104 0.59659963 0.83406268 0.94703296 0.98704495 0.99759317
 0.999     ]
cdf_over: [0.77506896 0.40340037 0.16593732 0.05296704 0.01295505 0.00240683
 0.001     ]

===Test Distribute All Probs===

cond_data: [1 1 1 1 1 4 3 1 4 2 0 2 0 0 1 0 1]
player: myles turner
stat: ast
condition: 2 after
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.2521140575408936

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.015280654621796149, 1.7184532515790187, 111.69050585745603)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.29985084, 0.88176949, 1.46368815, 2.0456068 , 2.62752545,
       3.2094441 , 3.79136276]), array([111.69050586, 111.69050586, 111.69050586, 111.69050586,
       111.69050586, 111.69050586, 111.69050586])]

===Scipy _CDF===

x: [0.29985084 0.88176949 1.46368815 2.0456068  2.62752545 3.2094441
 3.79136276]
args: (array([111.69050586, 111.69050586, 111.69050586, 111.69050586,
       111.69050586, 111.69050586, 111.69050586]),)

===Scipy _CDF _Single===

x: 0.2998508421153302
args: (111.69050585745603,)

Output: cdf single = x

cdf_single: 0.2357090678331599

===Scipy _CDF _Single===

x: 0.8817694942992866
args: (111.69050585745603,)

Output: cdf single = x

cdf_single: 0.622098528509792

===Scipy _CDF _Single===

x: 1.463688146483243
args: (111.69050585745603,)

Output: cdf single = x

cdf_single: 0.8567208242942251

===Scipy _CDF _Single===

x: 2.0456067986671993
args: (111.69050585745603,)

Output: cdf single = x

cdf_single: 0.9592049279684299

===Scipy _CDF _Single===

x: 2.6275254508511563
args: (111.69050585745603,)

Output: cdf single = x

cdf_single: 0.9913991592382932

===Scipy _CDF _Single===

x: 3.2094441030351124
args: (111.69050585745603,)

Output: cdf single = x

cdf_single: 0.9986700809760501

===Scipy _CDF _Single===

x: 3.791362755219069
args: (111.69050585745603,)

Output: cdf single = x

cdf_single: 0.9998501770659811
_cdf = _cdfvec(x, *args) = [0.23570907 0.62209853 0.85672082 0.95920493 0.99139916 0.99867008
 0.99985018]
prob_less_or_equal: [0.23570907 0.62209853 0.85672082 0.95920493 0.99139916 0.99867008
 0.999     ]
cdf_over: [0.76429093 0.37790147 0.14327918 0.04079507 0.00860084 0.00132992
 0.001     ]

===Test Distribute All Probs===

cond_data: [1 1 1 1 0]
player: myles turner
stat: ast
condition: tue
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.3474950790405273

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.01108008733315059, 1.0185683847106104, 227.65628207392515)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.50176217, 1.48353229, 2.4653024 , 3.44707252, 4.42884263,
       5.41061275, 6.39238286]), array([227.65628207, 227.65628207, 227.65628207, 227.65628207,
       227.65628207, 227.65628207, 227.65628207])]

===Scipy _CDF===

x: [0.50176217 1.48353229 2.4653024  3.44707252 4.42884263 5.41061275
 6.39238286]
args: (array([227.65628207, 227.65628207, 227.65628207, 227.65628207,
       227.65628207, 227.65628207, 227.65628207]),)

===Scipy _CDF _Single===

x: 0.5017621742484727
args: (227.65628207392515,)

Output: cdf single = x

cdf_single: 0.38416517634520997

===Scipy _CDF _Single===

x: 1.4835322890592855
args: (227.65628207392515,)

Output: cdf single = x

cdf_single: 0.8620669557704432

===Scipy _CDF _Single===

x: 2.465302403870098
args: (227.65628207392515,)

Output: cdf single = x

cdf_single: 0.9863102341060901

===Scipy _CDF _Single===

x: 3.4470725186809106
args: (227.65628207392515,)

Output: cdf single = x

cdf_single: 0.9994333035544402

===Scipy _CDF _Single===

x: 4.428842633491723
args: (227.65628207392515,)

Output: cdf single = x

cdf_single: 0.9999905259883924

===Scipy _CDF _Single===

x: 5.410612748302536
args: (227.65628207392515,)

Output: cdf single = x

cdf_single: 0.999999937190537

===Scipy _CDF _Single===

x: 6.392382863113348
args: (227.65628207392515,)

Output: cdf single = x

cdf_single: 0.9999999998366804
_cdf = _cdfvec(x, *args) = [0.38416518 0.86206696 0.98631023 0.9994333  0.99999053 0.99999994
 1.        ]
prob_less_or_equal: [0.38416518 0.86206696 0.98631023 0.999      0.999      0.999
 0.999     ]
cdf_over: [0.61583482 0.13793304 0.01368977 0.001      0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [1 1 1 1 4 3 1 2 2 0 2 0 1 1 0 1 1 2 0 3 0 2 2 4 2 1]
player: myles turner
stat: ast
condition: 2 before
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.6759529113769531

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.019688101902855335, 1.8602271765752172, 200.16278865643844)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.27936755, 0.8169363 , 1.35450505, 1.8920738 , 2.42964255,
       2.9672113 , 3.50478005]), array([200.16278866, 200.16278866, 200.16278866, 200.16278866,
       200.16278866, 200.16278866, 200.16278866])]

===Scipy _CDF===

x: [0.27936755 0.8169363  1.35450505 1.8920738  2.42964255 2.9672113
 3.50478005]
args: (array([200.16278866, 200.16278866, 200.16278866, 200.16278866,
       200.16278866, 200.16278866, 200.16278866]),)

===Scipy _CDF _Single===

x: 0.27936754631207383
args: (200.16278865643844,)

Output: cdf single = x

cdf_single: 0.2200372257493883

===Scipy _CDF _Single===

x: 0.8169362973723913
args: (200.16278865643844,)

Output: cdf single = x

cdf_single: 0.5860351665944902

===Scipy _CDF _Single===

x: 1.3545050484327086
args: (200.16278865643844,)

Output: cdf single = x

cdf_single: 0.8244246961469055

===Scipy _CDF _Single===

x: 1.892073799493026
args: (200.16278865643844,)

Output: cdf single = x

cdf_single: 0.9415188513553472

===Scipy _CDF _Single===

x: 2.429642550553343
args: (200.16278865643844,)

Output: cdf single = x

cdf_single: 0.98488627976438

===Scipy _CDF _Single===

x: 2.9672113016136605
args: (200.16278865643844,)

Output: cdf single = x

cdf_single: 0.9969948564564173

===Scipy _CDF _Single===

x: 3.5047800526739783
args: (200.16278865643844,)

Output: cdf single = x

cdf_single: 0.9995430153471787
_cdf = _cdfvec(x, *args) = [0.22003723 0.58603517 0.8244247  0.94151885 0.98488628 0.99699486
 0.99954302]
prob_less_or_equal: [0.22003723 0.58603517 0.8244247  0.94151885 0.98488628 0.99699486
 0.999     ]
cdf_over: [0.77996277 0.41396483 0.1755753  0.05848115 0.01511372 0.00300514
 0.001     ]

===Test Distribute All Probs===

cond_data: [3 1 1 3 1 2 4 2 2 0 0 1 0 2 0 3 3 0 2 2 0 2 1]
player: myles turner
stat: ast
condition: home
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.3692538738250732

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.019391195213743415, 1.9355669720365416, 160.6513732608359)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.26834008, 0.78498456, 1.30162905, 1.81827353, 2.33491802,
       2.8515625 , 3.36820699]), array([160.65137326, 160.65137326, 160.65137326, 160.65137326,
       160.65137326, 160.65137326, 160.65137326])]

===Scipy _CDF===

x: [0.26834008 0.78498456 1.30162905 1.81827353 2.33491802 2.8515625
 3.36820699]
args: (array([160.65137326, 160.65137326, 160.65137326, 160.65137326,
       160.65137326, 160.65137326, 160.65137326]),)

===Scipy _CDF _Single===

x: 0.2683400795309385
args: (160.6513732608359,)

Output: cdf single = x

cdf_single: 0.21156244192339507

===Scipy _CDF _Single===

x: 0.784984563781376
args: (160.6513732608359,)

Output: cdf single = x

cdf_single: 0.5675373809156365

===Scipy _CDF _Single===

x: 1.3016290480318136
args: (160.6513732608359,)

Output: cdf single = x

cdf_single: 0.8069567751237261

===Scipy _CDF _Single===

x: 1.818273532282251
args: (160.6513732608359,)

Output: cdf single = x

cdf_single: 0.9309776639318356

===Scipy _CDF _Single===

x: 2.3349180165326886
args: (160.6513732608359,)

Output: cdf single = x

cdf_single: 0.9804522960243366

===Scipy _CDF _Single===

x: 2.851562500783126
args: (160.6513732608359,)

Output: cdf single = x

cdf_single: 0.9956495067382292

===Scipy _CDF _Single===

x: 3.3682069850335634
args: (160.6513732608359,)

Output: cdf single = x

cdf_single: 0.999243412282235
_cdf = _cdfvec(x, *args) = [0.21156244 0.56753738 0.80695678 0.93097766 0.9804523  0.99564951
 0.99924341]
prob_less_or_equal: [0.21156244 0.56753738 0.80695678 0.93097766 0.9804523  0.99564951
 0.999     ]
cdf_over: [0.78843756 0.43246262 0.19304322 0.06902234 0.0195477  0.00435049
 0.001     ]

===Test Distribute All Probs===

cond_data: [3 1 1 3 1 2 4 2 2 0 0 1 0 2 0 3 3 0 2 2 0 2 1]
player: myles turner
stat: ast
condition: Indianapolis IN
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.6456959247589111

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.020247149703615318, 1.9365638392117952, 189.86373910723862)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.26864395, 0.78502248, 1.30140102, 1.81777955, 2.33415809,
       2.85053662, 3.36691516]), array([189.86373911, 189.86373911, 189.86373911, 189.86373911,
       189.86373911, 189.86373911, 189.86373911])]

===Scipy _CDF===

x: [0.26864395 0.78502248 1.30140102 1.81777955 2.33415809 2.85053662
 3.36691516]
args: (array([189.86373911, 189.86373911, 189.86373911, 189.86373911,
       189.86373911, 189.86373911, 189.86373911]),)

===Scipy _CDF _Single===

x: 0.2686439450998743
args: (189.86373910723862,)

Output: cdf single = x

cdf_single: 0.21179630833449592

===Scipy _CDF _Single===

x: 0.785022481015846
args: (189.86373910723862,)

Output: cdf single = x

cdf_single: 0.5675596121694078

===Scipy _CDF _Single===

x: 1.3014010169318175
args: (189.86373910723862,)

Output: cdf single = x

cdf_single: 0.8068787742536008

===Scipy _CDF _Single===

x: 1.8177795528477891
args: (189.86373910723862,)

Output: cdf single = x

cdf_single: 0.9309021669785563

===Scipy _CDF _Single===

x: 2.3341580887637607
args: (189.86373910723862,)

Output: cdf single = x

cdf_single: 0.9804125544363994

===Scipy _CDF _Single===

x: 2.850536624679733
args: (189.86373910723862,)

Output: cdf single = x

cdf_single: 0.9956354476448067

===Scipy _CDF _Single===

x: 3.3669151605957044
args: (189.86373910723862,)

Output: cdf single = x

cdf_single: 0.9992398593033639
_cdf = _cdfvec(x, *args) = [0.21179631 0.56755961 0.80687877 0.93090217 0.98041255 0.99563545
 0.99923986]
prob_less_or_equal: [0.21179631 0.56755961 0.80687877 0.93090217 0.98041255 0.99563545
 0.999     ]
cdf_over: [0.78820369 0.43244039 0.19312123 0.06909783 0.01958745 0.00436455
 0.001     ]

===Test Distribute All Probs===

cond_data: [3 1 1 3 1 2 4 2 2 0 0 1 1 0 0 3 0 2 2 0 2 1]
player: myles turner
stat: ast
condition: 7:00
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.2764770984649658

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.018251218170016913, 1.7926336188663234, 170.6273497490005)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.28909991, 0.84693838, 1.40477686, 1.96261533, 2.5204538 ,
       3.07829227, 3.63613075]), array([170.62734975, 170.62734975, 170.62734975, 170.62734975,
       170.62734975, 170.62734975, 170.62734975])]

===Scipy _CDF===

x: [0.28909991 0.84693838 1.40477686 1.96261533 2.5204538  3.07829227
 3.63613075]
args: (array([170.62734975, 170.62734975, 170.62734975, 170.62734975,
       170.62734975, 170.62734975, 170.62734975]),)

===Scipy _CDF _Single===

x: 0.2890999101633287
args: (170.6273497490005,)

Output: cdf single = x

cdf_single: 0.22749507765745547

===Scipy _CDF _Single===

x: 0.8469383828303807
args: (170.6273497490005,)

Output: cdf single = x

cdf_single: 0.6029705330583844

===Scipy _CDF _Single===

x: 1.4047768554974325
args: (170.6273497490005,)

Output: cdf single = x

cdf_single: 0.8399123565521792

===Scipy _CDF _Single===

x: 1.9626153281644845
args: (170.6273497490005,)

Output: cdf single = x

cdf_single: 0.9503091117128004

===Scipy _CDF _Single===

x: 2.520453800831536
args: (170.6273497490005,)

Output: cdf single = x

cdf_single: 0.988279637732137

===Scipy _CDF _Single===

x: 3.078292273498588
args: (170.6273497490005,)

Output: cdf single = x

cdf_single: 0.9979180938237491

===Scipy _CDF _Single===

x: 3.63613074616564
args: (170.6273497490005,)

Output: cdf single = x

cdf_single: 0.9997232361035335
_cdf = _cdfvec(x, *args) = [0.22749508 0.60297053 0.83991236 0.95030911 0.98827964 0.99791809
 0.99972324]
prob_less_or_equal: [0.22749508 0.60297053 0.83991236 0.95030911 0.98827964 0.99791809
 0.999     ]
cdf_over: [0.77250492 0.39702947 0.16008764 0.04969089 0.01172036 0.00208191
 0.001     ]

===Test Distribute All Probs===

cond_data: [1 2]
player: myles turner
stat: ast
condition: A Thompson F opp starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.3444418907165527

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.02059350707977851, 1.9096089713770354, 218.22046164447298)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.27261733, 0.79628475, 1.31995217, 1.84361959, 2.36728701,
       2.89095443, 3.41462184]), array([218.22046164, 218.22046164, 218.22046164, 218.22046164,
       218.22046164, 218.22046164, 218.22046164])]

===Scipy _CDF===

x: [0.27261733 0.79628475 1.31995217 1.84361959 2.36728701 2.89095443
 3.41462184]
args: (array([218.22046164, 218.22046164, 218.22046164, 218.22046164,
       218.22046164, 218.22046164, 218.22046164]),)

===Scipy _CDF _Single===

x: 0.2726173341678296
args: (218.22046164447298,)

Output: cdf single = x

cdf_single: 0.21485261423979357

===Scipy _CDF _Single===

x: 0.7962847524659806
args: (218.22046164447298,)

Output: cdf single = x

cdf_single: 0.5741334540656715

===Scipy _CDF _Single===

x: 1.3199521707641315
args: (218.22046164447298,)

Output: cdf single = x

cdf_single: 0.8131490125666664

===Scipy _CDF _Single===

x: 1.8436195890622826
args: (218.22046164447298,)

Output: cdf single = x

cdf_single: 0.9347614008506336

===Scipy _CDF _Single===

x: 2.3672870073604337
args: (218.22046164447298,)

Output: cdf single = x

cdf_single: 0.9820809691828811

===Scipy _CDF _Single===

x: 2.890954425658585
args: (218.22046164447298,)

Output: cdf single = x

cdf_single: 0.996159261869304

===Scipy _CDF _Single===

x: 3.414621843956736
args: (218.22046164447298,)

Output: cdf single = x

cdf_single: 0.9993612938073354
_cdf = _cdfvec(x, *args) = [0.21485261 0.57413345 0.81314901 0.9347614  0.98208097 0.99615926
 0.99936129]
prob_less_or_equal: [0.21485261 0.57413345 0.81314901 0.9347614  0.98208097 0.99615926
 0.999     ]
cdf_over: [0.78514739 0.42586655 0.18685099 0.0652386  0.01791903 0.00384074
 0.001     ]

stat_name: pts
player_stat_model_name: norm
player_stat_model_avg: 16.28
player_stat_model_max: 37.25

===Test Distribute All Probs===

cond_data: [22 14 19 17 12 20 15 15 12 20 22 28 12 20  9 18 29 11 17 15 17 17 21 12
 17  9 22 22 16 10 15 26 10 19 15  5 10  5 10 18 11 14 12 18 22 18  4 11
 12 18 25 10 15 17 17 18 14 26 14  9 22  5]
player: myles turner
stat: pts
condition: all
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.09952998161315918

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (15.728836194841822, 5.379819666537433)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.83073377, -2.64485393, -2.45897409, -2.27309426, -2.08721442,
       -1.90133459, -1.71545475, -1.52957491, -1.34369508, -1.15781524,
       -0.9719354 , -0.78605557, -0.60017573, -0.41429589, -0.22841606,
       -0.04253622,  0.14334362,  0.32922345,  0.51510329,  0.70098313,
        0.88686296,  1.0727428 ,  1.25862264,  1.44450247,  1.63038231,
        1.81626214,  2.00214198,  2.18802182,  2.37390165,  2.55978149,
        2.74566133,  2.93154116,  3.117421  ,  3.30330084,  3.48918067,
        3.67506051,  3.86094035])]

===Scipy _CDF===

x: [-2.83073377 -2.64485393 -2.45897409 -2.27309426 -2.08721442 -1.90133459
 -1.71545475 -1.52957491 -1.34369508 -1.15781524 -0.9719354  -0.78605557
 -0.60017573 -0.41429589 -0.22841606 -0.04253622  0.14334362  0.32922345
  0.51510329  0.70098313  0.88686296  1.0727428   1.25862264  1.44450247
  1.63038231  1.81626214  2.00214198  2.18802182  2.37390165  2.55978149
  2.74566133  2.93154116  3.117421    3.30330084  3.48918067  3.67506051
  3.86094035]
args: ()

===Scipy _CDF _Single===

x: -2.830733767818546
args: ()

Output: cdf single = x

cdf_single: 0.002322067995963747

===Scipy _CDF _Single===

x: -2.6448539313214203
args: ()

Output: cdf single = x

cdf_single: 0.004086309384568394

===Scipy _CDF _Single===

x: -2.4589740948242946
args: ()

Output: cdf single = x

cdf_single: 0.006966733568418431

===Scipy _CDF _Single===

x: -2.273094258327169
args: ()

Output: cdf single = x

cdf_single: 0.01151025018290357

===Scipy _CDF _Single===

x: -2.0872144218300432
args: ()

Output: cdf single = x

cdf_single: 0.01843437820311455

===Scipy _CDF _Single===

x: -1.9013345853329173
args: ()

Output: cdf single = x

cdf_single: 0.028629100870187323

===Scipy _CDF _Single===

x: -1.7154547488357914
args: ()

Output: cdf single = x

cdf_single: 0.043130942513443855

===Scipy _CDF _Single===

x: -1.5295749123386657
args: ()

Output: cdf single = x

cdf_single: 0.06306099160922637

===Scipy _CDF _Single===

x: -1.3436950758415396
args: ()

Output: cdf single = x

cdf_single: 0.08952350515523134

===Scipy _CDF _Single===

x: -1.1578152393444137
args: ()

Output: cdf single = x

cdf_single: 0.12346972150895795

===Scipy _CDF _Single===

x: -0.9719354028472879
args: ()

Output: cdf single = x

cdf_single: 0.16554134294600126

===Scipy _CDF _Single===

x: -0.7860555663501619
args: ()

Output: cdf single = x

cdf_single: 0.21591746711643445

===Scipy _CDF _Single===

x: -0.6001757298530361
args: ()

Output: cdf single = x

cdf_single: 0.2741945633268631

===Scipy _CDF _Single===

x: -0.4142958933559103
args: ()

Output: cdf single = x

cdf_single: 0.33932871050455

===Scipy _CDF _Single===

x: -0.2284160568587845
args: ()

Output: cdf single = x

cdf_single: 0.4096614039006344

===Scipy _CDF _Single===

x: -0.04253622036165867
args: ()

Output: cdf single = x

cdf_single: 0.4830356190974588

===Scipy _CDF _Single===

x: 0.14334361613546684
args: ()

Output: cdf single = x

cdf_single: 0.5569905946076783

===Scipy _CDF _Single===

x: 0.3292234526325927
args: ()

Output: cdf single = x

cdf_single: 0.6290066012552816

===Scipy _CDF _Single===

x: 0.5151032891297185
args: ()

Output: cdf single = x

cdf_single: 0.696759577785247

===Scipy _CDF _Single===

x: 0.7009831256268443
args: ()

Output: cdf single = x

cdf_single: 0.758343226964071

===Scipy _CDF _Single===

x: 0.8868629621239702
args: ()

Output: cdf single = x

cdf_single: 0.8124236577447405

===Scipy _CDF _Single===

x: 1.072742798621096
args: ()

Output: cdf single = x

cdf_single: 0.8583067340217847

===Scipy _CDF _Single===

x: 1.258622635118222
args: ()

Output: cdf single = x

cdf_single: 0.895916666348067

===Scipy _CDF _Single===

x: 1.4445024716153476
args: ()

Output: cdf single = x

cdf_single: 0.9257011575048284

===Scipy _CDF _Single===

x: 1.6303823081124735
args: ()

Output: cdf single = x

cdf_single: 0.9484896392686578

===Scipy _CDF _Single===

x: 1.8162621446095992
args: ()

Output: cdf single = x

cdf_single: 0.9653349153803058

===Scipy _CDF _Single===

x: 2.002141981106725
args: ()

Output: cdf single = x

cdf_single: 0.9773652682321928

===Scipy _CDF _Single===

x: 2.188021817603851
args: ()

Output: cdf single = x

cdf_single: 0.9856659934402621

===Scipy _CDF _Single===

x: 2.373901654100977
args: ()

Output: cdf single = x

cdf_single: 0.9911993810555018

===Scipy _CDF _Single===

x: 2.5597814905981027
args: ()

Output: cdf single = x

cdf_single: 0.9947631002481688

===Scipy _CDF _Single===

x: 2.7456613270952284
args: ()

Output: cdf single = x

cdf_single: 0.9969805465880033

===Scipy _CDF _Single===

x: 2.9315411635923545
args: ()

Output: cdf single = x

cdf_single: 0.9983135766806235

===Scipy _CDF _Single===

x: 3.1174210000894806
args: ()

Output: cdf single = x

cdf_single: 0.9990877958229896

===Scipy _CDF _Single===

x: 3.303300836586607
args: ()

Output: cdf single = x

cdf_single: 0.9995222309104125

===Scipy _CDF _Single===

x: 3.4891806730837325
args: ()

Output: cdf single = x

cdf_single: 0.9997577482229414

===Scipy _CDF _Single===

x: 3.675060509580858
args: ()

Output: cdf single = x

cdf_single: 0.9998811034749918

===Scipy _CDF _Single===

x: 3.8609403460779843
args: ()

Output: cdf single = x

cdf_single: 0.9999435242598168
_cdf = _cdfvec(x, *args) = [0.00232207 0.00408631 0.00696673 0.01151025 0.01843438 0.0286291
 0.04313094 0.06306099 0.08952351 0.12346972 0.16554134 0.21591747
 0.27419456 0.33932871 0.4096614  0.48303562 0.55699059 0.6290066
 0.69675958 0.75834323 0.81242366 0.85830673 0.89591667 0.92570116
 0.94848964 0.96533492 0.97736527 0.98566599 0.99119938 0.9947631
 0.99698055 0.99831358 0.9990878  0.99952223 0.99975775 0.9998811
 0.99994352]
prob_less_or_equal: [0.00232207 0.00408631 0.00696673 0.01151025 0.01843438 0.0286291
 0.04313094 0.06306099 0.08952351 0.12346972 0.16554134 0.21591747
 0.27419456 0.33932871 0.4096614  0.48303562 0.55699059 0.6290066
 0.69675958 0.75834323 0.81242366 0.85830673 0.89591667 0.92570116
 0.94848964 0.96533492 0.97736527 0.98566599 0.99119938 0.9947631
 0.99698055 0.99831358 0.999      0.999      0.999      0.999
 0.999     ]
cdf_over: [0.99767793 0.99591369 0.99303327 0.98848975 0.98156562 0.9713709
 0.95686906 0.93693901 0.91047649 0.87653028 0.83445866 0.78408253
 0.72580544 0.66067129 0.5903386  0.51696438 0.44300941 0.3709934
 0.30324042 0.24165677 0.18757634 0.14169327 0.10408333 0.07429884
 0.05151036 0.03466508 0.02263473 0.01433401 0.00880062 0.0052369
 0.00301945 0.00168642 0.001      0.001      0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [22 14 19 17 20 15 22 28 12 20  9 18 29 11 17 17 17 21 22 16 10 15 26 10
 19  5 10  5 10 18 11 14 12 18 25 10 15 17 18 14 26 14  9 22]
player: myles turner
stat: pts
condition: 0 lag
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.06159496307373047

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (16.367361783757804, 5.640068920634818)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.81332782, -2.63602502, -2.45872222, -2.28141942, -2.10411663,
       -1.92681383, -1.74951103, -1.57220823, -1.39490543, -1.21760264,
       -1.04029984, -0.86299704, -0.68569424, -0.50839144, -0.33108865,
       -0.15378585,  0.02351695,  0.20081975,  0.37812255,  0.55542534,
        0.73272814,  0.91003094,  1.08733374,  1.26463653,  1.44193933,
        1.61924213,  1.79654493,  1.97384773,  2.15115052,  2.32845332,
        2.50575612,  2.68305892,  2.86036172,  3.03766451,  3.21496731,
        3.39227011,  3.56957291])]

===Scipy _CDF===

x: [-2.81332782 -2.63602502 -2.45872222 -2.28141942 -2.10411663 -1.92681383
 -1.74951103 -1.57220823 -1.39490543 -1.21760264 -1.04029984 -0.86299704
 -0.68569424 -0.50839144 -0.33108865 -0.15378585  0.02351695  0.20081975
  0.37812255  0.55542534  0.73272814  0.91003094  1.08733374  1.26463653
  1.44193933  1.61924213  1.79654493  1.97384773  2.15115052  2.32845332
  2.50575612  2.68305892  2.86036172  3.03766451  3.21496731  3.39227011
  3.56957291]
args: ()

===Scipy _CDF _Single===

x: -2.8133278169182114
args: ()

Output: cdf single = x

cdf_single: 0.002451581856806845

===Scipy _CDF _Single===

x: -2.636025019014202
args: ()

Output: cdf single = x

cdf_single: 0.004194177319736049

===Scipy _CDF _Single===

x: -2.4587222211101927
args: ()

Output: cdf single = x

cdf_single: 0.006971622736563581

===Scipy _CDF _Single===

x: -2.281419423206183
args: ()

Output: cdf single = x

cdf_single: 0.011261819884842551

===Scipy _CDF _Single===

x: -2.1041166253021735
args: ()

Output: cdf single = x

cdf_single: 0.017684137477603203

===Scipy _CDF _Single===

x: -1.926813827398164
args: ()

Output: cdf single = x

cdf_single: 0.027001417815335618

===Scipy _CDF _Single===

x: -1.7495110294941547
args: ()

Output: cdf single = x

cdf_single: 0.04010136198121532

===Scipy _CDF _Single===

x: -1.5722082315901451
args: ()

Output: cdf single = x

cdf_single: 0.05795113352117783

===Scipy _CDF _Single===

x: -1.3949054336861353
args: ()

Output: cdf single = x

cdf_single: 0.08152217918016927

===Scipy _CDF _Single===

x: -1.217602635782126
args: ()

Output: cdf single = x

cdf_single: 0.1116875061617217

===Scipy _CDF _Single===

x: -1.0402998378781163
args: ()

Output: cdf single = x

cdf_single: 0.14910030974965402

===Scipy _CDF _Single===

x: -0.8629970399741069
args: ()

Output: cdf single = x

cdf_single: 0.194069547206505

===Scipy _CDF _Single===

x: -0.6856942420700974
args: ()

Output: cdf single = x

cdf_single: 0.2464529692260114

===Scipy _CDF _Single===

x: -0.508391444166088
args: ()

Output: cdf single = x

cdf_single: 0.30558942588513366

===Scipy _CDF _Single===

x: -0.3310886462620784
args: ()

Output: cdf single = x

cdf_single: 0.3702887637162731

===Scipy _CDF _Single===

x: -0.1537858483580689
args: ()

Output: cdf single = x

cdf_single: 0.43888929623325124

===Scipy _CDF _Single===

x: 0.023516949545940254
args: ()

Output: cdf single = x

cdf_single: 0.5093810407793617

===Scipy _CDF _Single===

x: 0.20081974744994974
args: ()

Output: cdf single = x

cdf_single: 0.5795802393783326

===Scipy _CDF _Single===

x: 0.3781225453539592
args: ()

Output: cdf single = x

cdf_single: 0.6473302196306827

===Scipy _CDF _Single===

x: 0.5554253432579688
args: ()

Output: cdf single = x

cdf_single: 0.7106981190547239

===Scipy _CDF _Single===

x: 0.7327281411619783
args: ()

Output: cdf single = x

cdf_single: 0.7681378716657536

===Scipy _CDF _Single===

x: 0.9100309390659878
args: ()

Output: cdf single = x

cdf_single: 0.8185969032550919

===Scipy _CDF _Single===

x: 1.0873337369699971
args: ()

Output: cdf single = x

cdf_single: 0.8615553280257724

===Scipy _CDF _Single===

x: 1.2646365348740067
args: ()

Output: cdf single = x

cdf_single: 0.8969991749958272

===Scipy _CDF _Single===

x: 1.4419393327780161
args: ()

Output: cdf single = x

cdf_single: 0.92534025553429

===Scipy _CDF _Single===

x: 1.6192421306820257
args: ()

Output: cdf single = x

cdf_single: 0.9473024117949689

===Scipy _CDF _Single===

x: 1.796544928586035
args: ()

Output: cdf single = x

cdf_single: 0.9637960530140399

===Scipy _CDF _Single===

x: 1.9738477264900447
args: ()

Output: cdf single = x

cdf_single: 0.9758004699360386

===Scipy _CDF _Single===

x: 2.1511505243940543
args: ()

Output: cdf single = x

cdf_single: 0.9842678396538089

===Scipy _CDF _Single===

x: 2.3284533222980635
args: ()

Output: cdf single = x

cdf_single: 0.9900559774640839

===Scipy _CDF _Single===

x: 2.505756120202073
args: ()

Output: cdf single = x

cdf_single: 0.9938905066426531

===Scipy _CDF _Single===

x: 2.6830589181060827
args: ()

Output: cdf single = x

cdf_single: 0.9963523931599716

===Scipy _CDF _Single===

x: 2.8603617160100927
args: ()

Output: cdf single = x

cdf_single: 0.9978842097286122

===Scipy _CDF _Single===

x: 3.0376645139141023
args: ()

Output: cdf single = x

cdf_single: 0.9988079038785358

===Scipy _CDF _Single===

x: 3.214967311818112
args: ()

Output: cdf single = x

cdf_single: 0.999347703114139

===Scipy _CDF _Single===

x: 3.392270109722121
args: ()

Output: cdf single = x

cdf_single: 0.9996534196431546

===Scipy _CDF _Single===

x: 3.5695729076261307
args: ()

Output: cdf single = x

cdf_single: 0.9998212181513886
_cdf = _cdfvec(x, *args) = [0.00245158 0.00419418 0.00697162 0.01126182 0.01768414 0.02700142
 0.04010136 0.05795113 0.08152218 0.11168751 0.14910031 0.19406955
 0.24645297 0.30558943 0.37028876 0.4388893  0.50938104 0.57958024
 0.64733022 0.71069812 0.76813787 0.8185969  0.86155533 0.89699917
 0.92534026 0.94730241 0.96379605 0.97580047 0.98426784 0.99005598
 0.99389051 0.99635239 0.99788421 0.9988079  0.9993477  0.99965342
 0.99982122]
prob_less_or_equal: [0.00245158 0.00419418 0.00697162 0.01126182 0.01768414 0.02700142
 0.04010136 0.05795113 0.08152218 0.11168751 0.14910031 0.19406955
 0.24645297 0.30558943 0.37028876 0.4388893  0.50938104 0.57958024
 0.64733022 0.71069812 0.76813787 0.8185969  0.86155533 0.89699917
 0.92534026 0.94730241 0.96379605 0.97580047 0.98426784 0.99005598
 0.99389051 0.99635239 0.99788421 0.9988079  0.999      0.999
 0.999     ]
cdf_over: [0.99754842 0.99580582 0.99302838 0.98873818 0.98231586 0.97299858
 0.95989864 0.94204887 0.91847782 0.88831249 0.85089969 0.80593045
 0.75354703 0.69441057 0.62971124 0.5611107  0.49061896 0.42041976
 0.35266978 0.28930188 0.23186213 0.1814031  0.13844467 0.10300083
 0.07465974 0.05269759 0.03620395 0.02419953 0.01573216 0.00994402
 0.00610949 0.00364761 0.00211579 0.0011921  0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [22 19 17 20 15 22 28 12 20  9 11 17 17 17 21 16 10 15 10 18 11 14 12 25
 10 15 17 18 14 14]
player: myles turner
stat: pts
condition: 7:00
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.12078523635864258

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (16.170264396439094, 5.595687464925646)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.80041827, -2.62170922, -2.44300016, -2.26429111, -2.08558206,
       -1.90687301, -1.72816396, -1.54945491, -1.37074585, -1.1920368 ,
       -1.01332775, -0.8346187 , -0.65590965, -0.4772006 , -0.29849154,
       -0.11978249,  0.05892656,  0.23763561,  0.41634466,  0.59505371,
        0.77376276,  0.95247182,  1.13118087,  1.30988992,  1.48859897,
        1.66730802,  1.84601707,  2.02472613,  2.20343518,  2.38214423,
        2.56085328,  2.73956233,  2.91827138,  3.09698044,  3.27568949,
        3.45439854,  3.63310759])]

===Scipy _CDF===

x: [-2.80041827 -2.62170922 -2.44300016 -2.26429111 -2.08558206 -1.90687301
 -1.72816396 -1.54945491 -1.37074585 -1.1920368  -1.01332775 -0.8346187
 -0.65590965 -0.4772006  -0.29849154 -0.11978249  0.05892656  0.23763561
  0.41634466  0.59505371  0.77376276  0.95247182  1.13118087  1.30988992
  1.48859897  1.66730802  1.84601707  2.02472613  2.20343518  2.38214423
  2.56085328  2.73956233  2.91827138  3.09698044  3.27568949  3.45439854
  3.63310759]
args: ()

===Scipy _CDF _Single===

x: -2.80041826757873
args: ()

Output: cdf single = x

cdf_single: 0.002551821491706411

===Scipy _CDF _Single===

x: -2.621709215962087
args: ()

Output: cdf single = x

cdf_single: 0.004374502196448264

===Scipy _CDF _Single===

x: -2.443000164345444
args: ()

Output: cdf single = x

cdf_single: 0.007282865324339203

===Scipy _CDF _Single===

x: -2.264291112728801
args: ()

Output: cdf single = x

cdf_single: 0.011778107917208416

===Scipy _CDF _Single===

x: -2.085582061112158
args: ()

Output: cdf single = x

cdf_single: 0.01850824885138115

===Scipy _CDF _Single===

x: -1.9068730094955149
args: ()

Output: cdf single = x

cdf_single: 0.028268517036167194

===Scipy _CDF _Single===

x: -1.728163957878872
args: ()

Output: cdf single = x

cdf_single: 0.04197941674701138

===Scipy _CDF _Single===

x: -1.5494549062622287
args: ()

Output: cdf single = x

cdf_single: 0.06063620179625874

===Scipy _CDF _Single===

x: -1.3707458546455853
args: ()

Output: cdf single = x

cdf_single: 0.0852270975229805

===Scipy _CDF _Single===

x: -1.1920368030289423
args: ()

Output: cdf single = x

cdf_single: 0.11662340745098401

===Scipy _CDF _Single===

x: -1.0133277514122991
args: ()

Output: cdf single = x

cdf_single: 0.15545181813529257

===Scipy _CDF _Single===

x: -0.8346186997956561
args: ()

Output: cdf single = x

cdf_single: 0.20196621499303738

===Scipy _CDF _Single===

x: -0.655909648179013
args: ()

Output: cdf single = x

cdf_single: 0.2559411300040169

===Scipy _CDF _Single===

x: -0.4772005965623699
args: ()

Output: cdf single = x

cdf_single: 0.31660964318204343

===Scipy _CDF _Single===

x: -0.2984915449457268
args: ()

Output: cdf single = x

cdf_single: 0.3826640141638744

===Scipy _CDF _Single===

x: -0.11978249332908372
args: ()

Output: cdf single = x

cdf_single: 0.45232772519132286

===Scipy _CDF _Single===

x: 0.058926558287559036
args: ()

Output: cdf single = x

cdf_single: 0.523494697826287

===Scipy _CDF _Single===

x: 0.23763560990420213
args: ()

Output: cdf single = x

cdf_single: 0.5939181355880367

===Scipy _CDF _Single===

x: 0.4163446615208452
args: ()

Output: cdf single = x

cdf_single: 0.6614210920055675

===Scipy _CDF _Single===

x: 0.5950537131374883
args: ()

Output: cdf single = x

cdf_single: 0.724096216311552

===Scipy _CDF _Single===

x: 0.7737627647541314
args: ()

Output: cdf single = x

cdf_single: 0.7804644521470921

===Scipy _CDF _Single===

x: 0.9524718163707745
args: ()

Output: cdf single = x

cdf_single: 0.8295711236369268

===Scipy _CDF _Single===

x: 1.1311808679874176
args: ()

Output: cdf single = x

cdf_single: 0.8710105136079642

===Scipy _CDF _Single===

x: 1.3098899196040605
args: ()

Output: cdf single = x

cdf_single: 0.9048834611197905

===Scipy _CDF _Single===

x: 1.4885989712207037
args: ()

Output: cdf single = x

cdf_single: 0.9317034986535184

===Scipy _CDF _Single===

x: 1.6673080228373467
args: ()

Output: cdf single = x

cdf_single: 0.9522734139128486

===Scipy _CDF _Single===

x: 1.8460170744539899
args: ()

Output: cdf single = x

cdf_single: 0.9675551368623161

===Scipy _CDF _Single===

x: 2.024726126070633
args: ()

Output: cdf single = x

cdf_single: 0.9785522528195837

===Scipy _CDF _Single===

x: 2.203435177687276
args: ()

Output: cdf single = x

cdf_single: 0.9862179544582027

===Scipy _CDF _Single===

x: 2.3821442293039192
args: ()

Output: cdf single = x

cdf_single: 0.9913939226876727

===Scipy _CDF _Single===

x: 2.560853280920562
args: ()

Output: cdf single = x

cdf_single: 0.9947792278935288

===Scipy _CDF _Single===

x: 2.739562332537205
args: ()

Output: cdf single = x

cdf_single: 0.9969239476081861

===Scipy _CDF _Single===

x: 2.918271384153849
args: ()

Output: cdf single = x

cdf_single: 0.9982401106561262

===Scipy _CDF _Single===

x: 3.096980435770492
args: ()

Output: cdf single = x

cdf_single: 0.9990224861190649

===Scipy _CDF _Single===

x: 3.275689487387135
args: ()

Output: cdf single = x

cdf_single: 0.999472978103337

===Scipy _CDF _Single===

x: 3.4543985390037784
args: ()

Output: cdf single = x

cdf_single: 0.9997242391525962

===Scipy _CDF _Single===

x: 3.6331075906204213
args: ()

Output: cdf single = x

cdf_single: 0.9998599859080504
_cdf = _cdfvec(x, *args) = [0.00255182 0.0043745  0.00728287 0.01177811 0.01850825 0.02826852
 0.04197942 0.0606362  0.0852271  0.11662341 0.15545182 0.20196621
 0.25594113 0.31660964 0.38266401 0.45232773 0.5234947  0.59391814
 0.66142109 0.72409622 0.78046445 0.82957112 0.87101051 0.90488346
 0.9317035  0.95227341 0.96755514 0.97855225 0.98621795 0.99139392
 0.99477923 0.99692395 0.99824011 0.99902249 0.99947298 0.99972424
 0.99985999]
prob_less_or_equal: [0.00255182 0.0043745  0.00728287 0.01177811 0.01850825 0.02826852
 0.04197942 0.0606362  0.0852271  0.11662341 0.15545182 0.20196621
 0.25594113 0.31660964 0.38266401 0.45232773 0.5234947  0.59391814
 0.66142109 0.72409622 0.78046445 0.82957112 0.87101051 0.90488346
 0.9317035  0.95227341 0.96755514 0.97855225 0.98621795 0.99139392
 0.99477923 0.99692395 0.99824011 0.999      0.999      0.999
 0.999     ]
cdf_over: [0.99744818 0.9956255  0.99271713 0.98822189 0.98149175 0.97173148
 0.95802058 0.9393638  0.9147729  0.88337659 0.84454818 0.79803379
 0.74405887 0.68339036 0.61733599 0.54767227 0.4765053  0.40608186
 0.33857891 0.27590378 0.21953555 0.17042888 0.12898949 0.09511654
 0.0682965  0.04772659 0.03244486 0.02144775 0.01378205 0.00860608
 0.00522077 0.00307605 0.00175989 0.001      0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [22 14 19 17 12 22  9 29 15 17 17  9 22 16 10 15 26 10  5  5 10 18 11 12
 22 18  4 12 18 25 10 17 14 22]
player: myles turner
stat: pts
condition: 2 after
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.13170289993286133

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (15.508962325558596, 5.305222169712607)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.82909233e+00, -2.64059881e+00, -2.45210529e+00, -2.26361177e+00,
       -2.07511825e+00, -1.88662473e+00, -1.69813121e+00, -1.50963769e+00,
       -1.32114417e+00, -1.13265065e+00, -9.44157128e-01, -7.55663608e-01,
       -5.67170088e-01, -3.78676568e-01, -1.90183049e-01, -1.68952878e-03,
        1.86803991e-01,  3.75297511e-01,  5.63791031e-01,  7.52284550e-01,
        9.40778070e-01,  1.12927159e+00,  1.31776511e+00,  1.50625863e+00,
        1.69475215e+00,  1.88324567e+00,  2.07173919e+00,  2.26023271e+00,
        2.44872623e+00,  2.63721975e+00,  2.82571327e+00,  3.01420679e+00,
        3.20270031e+00,  3.39119383e+00,  3.57968735e+00,  3.76818087e+00,
        3.95667439e+00])]

===Scipy _CDF===

x: [-2.82909233e+00 -2.64059881e+00 -2.45210529e+00 -2.26361177e+00
 -2.07511825e+00 -1.88662473e+00 -1.69813121e+00 -1.50963769e+00
 -1.32114417e+00 -1.13265065e+00 -9.44157128e-01 -7.55663608e-01
 -5.67170088e-01 -3.78676568e-01 -1.90183049e-01 -1.68952878e-03
  1.86803991e-01  3.75297511e-01  5.63791031e-01  7.52284550e-01
  9.40778070e-01  1.12927159e+00  1.31776511e+00  1.50625863e+00
  1.69475215e+00  1.88324567e+00  2.07173919e+00  2.26023271e+00
  2.44872623e+00  2.63721975e+00  2.82571327e+00  3.01420679e+00
  3.20270031e+00  3.39119383e+00  3.57968735e+00  3.76818087e+00
  3.95667439e+00]
args: ()

===Scipy _CDF _Single===

x: -2.8290923255286886
args: ()

Output: cdf single = x

cdf_single: 0.002334011516384156

===Scipy _CDF _Single===

x: -2.640598805745676
args: ()

Output: cdf single = x

cdf_single: 0.0041379828394721855

===Scipy _CDF _Single===

x: -2.4521052859626637
args: ()

Output: cdf single = x

cdf_single: 0.007101154983851287

===Scipy _CDF _Single===

x: -2.2636117661796513
args: ()

Output: cdf single = x

cdf_single: 0.011799001767370348

===Scipy _CDF _Single===

x: -2.075118246396639
args: ()

Output: cdf single = x

cdf_single: 0.01898778852688292

===Scipy _CDF _Single===

x: -1.8866247266136262
args: ()

Output: cdf single = x

cdf_single: 0.029605409282093934

===Scipy _CDF _Single===

x: -1.6981312068306138
args: ()

Output: cdf single = x

cdf_single: 0.04474150041275672

===Scipy _CDF _Single===

x: -1.5096376870476012
args: ()

Output: cdf single = x

cdf_single: 0.06556794969037315

===Scipy _CDF _Single===

x: -1.3211441672645883
args: ()

Output: cdf single = x

cdf_single: 0.0932266493007741

===Scipy _CDF _Single===

x: -1.1326506474815758
args: ()

Output: cdf single = x

cdf_single: 0.1286804952792265

===Scipy _CDF _Single===

x: -0.9441571276985632
args: ()

Output: cdf single = x

cdf_single: 0.17254467993126602

===Scipy _CDF _Single===

x: -0.7556636079155508
args: ()

Output: cdf single = x

cdf_single: 0.22492545428085378

===Scipy _CDF _Single===

x: -0.5671700881325382
args: ()

Output: cdf single = x

cdf_single: 0.285299314114078

===Scipy _CDF _Single===

x: -0.3786765683495256
args: ()

Output: cdf single = x

cdf_single: 0.3524640277566674

===Scipy _CDF _Single===

x: -0.1901830485665131
args: ()

Output: cdf single = x

cdf_single: 0.4245828469913892

===Scipy _CDF _Single===

x: -0.0016895287835005715
args: ()

Output: cdf single = x

cdf_single: 0.4993259758549741

===Scipy _CDF _Single===

x: 0.18680399099951162
args: ()

Output: cdf single = x

cdf_single: 0.574092841181524

===Scipy _CDF _Single===

x: 0.37529751078252416
args: ()

Output: cdf single = x

cdf_single: 0.6462803913999305

===Scipy _CDF _Single===

x: 0.5637910305655367
args: ()

Output: cdf single = x

cdf_single: 0.7135518216241059

===Scipy _CDF _Single===

x: 0.7522845503485492
args: ()

Output: cdf single = x

cdf_single: 0.774060021604706

===Scipy _CDF _Single===

x: 0.9407780701315618
args: ()

Output: cdf single = x

cdf_single: 0.8265906993378345

===Scipy _CDF _Single===

x: 1.1292715899145742
args: ()

Output: cdf single = x

cdf_single: 0.8706083591165128

===Scipy _CDF _Single===

x: 1.3177651096975869
args: ()

Output: cdf single = x

cdf_single: 0.9062088544884318

===Scipy _CDF _Single===

x: 1.5062586294805993
args: ()

Output: cdf single = x

cdf_single: 0.9339996030516252

===Scipy _CDF _Single===

x: 1.694752149263612
args: ()

Output: cdf single = x

cdf_single: 0.954938775850585

===Scipy _CDF _Single===

x: 1.8832456690466244
args: ()

Output: cdf single = x

cdf_single: 0.9701664587074439

===Scipy _CDF _Single===

x: 2.071739188829637
args: ()

Output: cdf single = x

cdf_single: 0.98085511472649

===Scipy _CDF _Single===

x: 2.2602327086126497
args: ()

Output: cdf single = x

cdf_single: 0.9880965940806703

===Scipy _CDF _Single===

x: 2.448726228395662
args: ()

Output: cdf single = x

cdf_single: 0.9928318815439632

===Scipy _CDF _Single===

x: 2.6372197481786745
args: ()

Output: cdf single = x

cdf_single: 0.9958205668513196

===Scipy _CDF _Single===

x: 2.825713267961687
args: ()

Output: cdf single = x

cdf_single: 0.9976412263991884

===Scipy _CDF _Single===

x: 3.0142067877447
args: ()

Output: cdf single = x

cdf_single: 0.9987117393684503

===Scipy _CDF _Single===

x: 3.2027003075277127
args: ()

Output: cdf single = x

cdf_single: 0.9993192720912301

===Scipy _CDF _Single===

x: 3.391193827310725
args: ()

Output: cdf single = x

cdf_single: 0.9996520556626437

===Scipy _CDF _Single===

x: 3.579687347093738
args: ()

Output: cdf single = x

cdf_single: 0.999827997226843

===Scipy _CDF _Single===

x: 3.7681808668767505
args: ()

Output: cdf single = x

cdf_single: 0.9999177792289866

===Scipy _CDF _Single===

x: 3.956674386659763
args: ()

Output: cdf single = x

cdf_single: 0.9999619997937726
_cdf = _cdfvec(x, *args) = [0.00233401 0.00413798 0.00710115 0.011799   0.01898779 0.02960541
 0.0447415  0.06556795 0.09322665 0.1286805  0.17254468 0.22492545
 0.28529931 0.35246403 0.42458285 0.49932598 0.57409284 0.64628039
 0.71355182 0.77406002 0.8265907  0.87060836 0.90620885 0.9339996
 0.95493878 0.97016646 0.98085511 0.98809659 0.99283188 0.99582057
 0.99764123 0.99871174 0.99931927 0.99965206 0.999828   0.99991778
 0.999962  ]
prob_less_or_equal: [0.00233401 0.00413798 0.00710115 0.011799   0.01898779 0.02960541
 0.0447415  0.06556795 0.09322665 0.1286805  0.17254468 0.22492545
 0.28529931 0.35246403 0.42458285 0.49932598 0.57409284 0.64628039
 0.71355182 0.77406002 0.8265907  0.87060836 0.90620885 0.9339996
 0.95493878 0.97016646 0.98085511 0.98809659 0.99283188 0.99582057
 0.99764123 0.99871174 0.999      0.999      0.999      0.999
 0.999     ]
cdf_over: [0.99766599 0.99586202 0.99289885 0.988201   0.98101221 0.97039459
 0.9552585  0.93443205 0.90677335 0.8713195  0.82745532 0.77507455
 0.71470069 0.64753597 0.57541715 0.50067402 0.42590716 0.35371961
 0.28644818 0.22593998 0.1734093  0.12939164 0.09379115 0.0660004
 0.04506122 0.02983354 0.01914489 0.01190341 0.00716812 0.00417943
 0.00235877 0.00128826 0.001      0.001      0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [22 17 20 15 15 28 29 17 21 12 22 16 10 26 10 19  5  5 18 11 14 22  4 25
 15 17 18 26  5]
player: myles turner
stat: pts
condition: 10-19 prev
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.0879983901977539

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (16.587546121392236, 5.7928841760161305)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.77712218, -2.6044966 , -2.43187102, -2.25924543, -2.08661985,
       -1.91399427, -1.74136869, -1.56874311, -1.39611753, -1.22349194,
       -1.05086636, -0.87824078, -0.7056152 , -0.53298962, -0.36036404,
       -0.18773845, -0.01511287,  0.15751271,  0.33013829,  0.50276387,
        0.67538945,  0.84801504,  1.02064062,  1.1932662 ,  1.36589178,
        1.53851736,  1.71114294,  1.88376852,  2.05639411,  2.22901969,
        2.40164527,  2.57427085,  2.74689643,  2.91952201,  3.0921476 ,
        3.26477318,  3.43739876])]

===Scipy _CDF===

x: [-2.77712218 -2.6044966  -2.43187102 -2.25924543 -2.08661985 -1.91399427
 -1.74136869 -1.56874311 -1.39611753 -1.22349194 -1.05086636 -0.87824078
 -0.7056152  -0.53298962 -0.36036404 -0.18773845 -0.01511287  0.15751271
  0.33013829  0.50276387  0.67538945  0.84801504  1.02064062  1.1932662
  1.36589178  1.53851736  1.71114294  1.88376852  2.05639411  2.22901969
  2.40164527  2.57427085  2.74689643  2.91952201  3.0921476   3.26477318
  3.43739876]
args: ()

===Scipy _CDF _Single===

x: -2.777122178274921
args: ()

Output: cdf single = x

cdf_single: 0.002742127970035795

===Scipy _CDF _Single===

x: -2.6044965966794473
args: ()

Output: cdf single = x

cdf_single: 0.004600466744835563

===Scipy _CDF _Single===

x: -2.431871015083974
args: ()

Output: cdf single = x

cdf_single: 0.007510527727564342

===Scipy _CDF _Single===

x: -2.2592454334885006
args: ()

Output: cdf single = x

cdf_single: 0.011934061050109747

===Scipy _CDF _Single===

x: -2.086619851893027
args: ()

Output: cdf single = x

cdf_single: 0.018461255670647866

===Scipy _CDF _Single===

x: -1.9139942702975534
args: ()

Output: cdf single = x

cdf_single: 0.027810443932124687

===Scipy _CDF _Single===

x: -1.7413686887020798
args: ()

Output: cdf single = x

cdf_single: 0.04080948650096382

===Scipy _CDF _Single===

x: -1.5687431071066062
args: ()

Output: cdf single = x

cdf_single: 0.05835390490830383

===Scipy _CDF _Single===

x: -1.3961175255111324
args: ()

Output: cdf single = x

cdf_single: 0.08133955355251611

===Scipy _CDF _Single===

x: -1.2234919439156589
args: ()

Output: cdf single = x

cdf_single: 0.1105719725596329

===Scipy _CDF _Single===

x: -1.0508663623201855
args: ()

Output: cdf single = x

cdf_single: 0.14665998573509398

===Scipy _CDF _Single===

x: -0.8782407807247119
args: ()

Output: cdf single = x

cdf_single: 0.18990653268619226

===Scipy _CDF _Single===

x: -0.7056151991292383
args: ()

Output: cdf single = x

cdf_single: 0.24021373481347527

===Scipy _CDF _Single===

x: -0.5329896175337648
args: ()

Output: cdf single = x

cdf_single: 0.2970203836948949

===Scipy _CDF _Single===

x: -0.36036403593829125
args: ()

Output: cdf single = x

cdf_single: 0.35928745880582097

===Scipy _CDF _Single===

x: -0.18773845434281775
args: ()

Output: cdf single = x

cdf_single: 0.42554084200249803

===Scipy _CDF _Single===

x: -0.015112872747344507
args: ()

Output: cdf single = x

cdf_single: 0.49397106558398546

===Scipy _CDF _Single===

x: 0.15751270884812904
args: ()

Output: cdf single = x

cdf_single: 0.5625796036482508

===Scipy _CDF _Single===

x: 0.33013829044360254
args: ()

Output: cdf single = x

cdf_single: 0.6293522639715055

===Scipy _CDF _Single===

x: 0.5027638720390761
args: ()

Output: cdf single = x

cdf_single: 0.6924348515028518

===Scipy _CDF _Single===

x: 0.6753894536345496
args: ()

Output: cdf single = x

cdf_single: 0.7502858179047968

===Scipy _CDF _Single===

x: 0.8480150352300232
args: ()

Output: cdf single = x

cdf_single: 0.8017852012769018

===Scipy _CDF _Single===

x: 1.0206406168254967
args: ()

Output: cdf single = x

cdf_single: 0.8462876307145687

===Scipy _CDF _Single===

x: 1.1932661984209703
args: ()

Output: cdf single = x

cdf_single: 0.8836174319844958

===Scipy _CDF _Single===

x: 1.3658917800164438
args: ()

Output: cdf single = x

cdf_single: 0.9140135334269637

===Scipy _CDF _Single===

x: 1.5385173616119172
args: ()

Output: cdf single = x

cdf_single: 0.9380389165891763

===Scipy _CDF _Single===

x: 1.7111429432073908
args: ()

Output: cdf single = x

cdf_single: 0.9564726357908412

===Scipy _CDF _Single===

x: 1.8837685248028644
args: ()

Output: cdf single = x

cdf_single: 0.970201853603448

===Scipy _CDF _Single===

x: 2.0563941063983378
args: ()

Output: cdf single = x

cdf_single: 0.9801277280391405

===Scipy _CDF _Single===

x: 2.2290196879938113
args: ()

Output: cdf single = x

cdf_single: 0.9870937025735398

===Scipy _CDF _Single===

x: 2.401645269589285
args: ()

Output: cdf single = x

cdf_single: 0.9918392364501154

===Scipy _CDF _Single===

x: 2.5742708511847585
args: ()

Output: cdf single = x

cdf_single: 0.9949774198970129

===Scipy _CDF _Single===

x: 2.7468964327802325
args: ()

Output: cdf single = x

cdf_single: 0.9969918935479247

===Scipy _CDF _Single===

x: 2.919522014375706
args: ()

Output: cdf single = x

cdf_single: 0.998247156837825

===Scipy _CDF _Single===

x: 3.0921475959711797
args: ()

Output: cdf single = x

cdf_single: 0.9990064299022837

===Scipy _CDF _Single===

x: 3.2647731775666533
args: ()

Output: cdf single = x

cdf_single: 0.9994522411689378

===Scipy _CDF _Single===

x: 3.437398759162127
args: ()

Output: cdf single = x

cdf_single: 0.999706334880942
_cdf = _cdfvec(x, *args) = [0.00274213 0.00460047 0.00751053 0.01193406 0.01846126 0.02781044
 0.04080949 0.0583539  0.08133955 0.11057197 0.14665999 0.18990653
 0.24021373 0.29702038 0.35928746 0.42554084 0.49397107 0.5625796
 0.62935226 0.69243485 0.75028582 0.8017852  0.84628763 0.88361743
 0.91401353 0.93803892 0.95647264 0.97020185 0.98012773 0.9870937
 0.99183924 0.99497742 0.99699189 0.99824716 0.99900643 0.99945224
 0.99970633]
prob_less_or_equal: [0.00274213 0.00460047 0.00751053 0.01193406 0.01846126 0.02781044
 0.04080949 0.0583539  0.08133955 0.11057197 0.14665999 0.18990653
 0.24021373 0.29702038 0.35928746 0.42554084 0.49397107 0.5625796
 0.62935226 0.69243485 0.75028582 0.8017852  0.84628763 0.88361743
 0.91401353 0.93803892 0.95647264 0.97020185 0.98012773 0.9870937
 0.99183924 0.99497742 0.99699189 0.99824716 0.999      0.999
 0.999     ]
cdf_over: [0.99725787 0.99539953 0.99248947 0.98806594 0.98153874 0.97218956
 0.95919051 0.9416461  0.91866045 0.88942803 0.85334001 0.81009347
 0.75978627 0.70297962 0.64071254 0.57445916 0.50602893 0.4374204
 0.37064774 0.30756515 0.24971418 0.1982148  0.15371237 0.11638257
 0.08598647 0.06196108 0.04352736 0.02979815 0.01987227 0.0129063
 0.00816076 0.00502258 0.00300811 0.00175284 0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [22 19 17 12 20 12 20 22 28 12 20  9 18 29 11 17 15 17 17 21 12 17  9 22
 22 16 10 15 26 10 19 15 10  5 18 11 18 22 11 12 18 25 10 22  5]
player: myles turner
stat: pts
condition: A Nesmith SF starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.0709390640258789

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (16.40315735062613, 5.6104595416232454)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.83455539, -2.65631687, -2.47807835, -2.29983984, -2.12160132,
       -1.9433628 , -1.76512428, -1.58688576, -1.40864724, -1.23040872,
       -1.0521702 , -0.87393168, -0.69569316, -0.51745465, -0.33921613,
       -0.16097761,  0.01726091,  0.19549943,  0.37373795,  0.55197647,
        0.73021499,  0.90845351,  1.08669203,  1.26493055,  1.44316906,
        1.62140758,  1.7996461 ,  1.97788462,  2.15612314,  2.33436166,
        2.51260018,  2.6908387 ,  2.86907722,  3.04731574,  3.22555426,
        3.40379277,  3.58203129])]

===Scipy _CDF===

x: [-2.83455539 -2.65631687 -2.47807835 -2.29983984 -2.12160132 -1.9433628
 -1.76512428 -1.58688576 -1.40864724 -1.23040872 -1.0521702  -0.87393168
 -0.69569316 -0.51745465 -0.33921613 -0.16097761  0.01726091  0.19549943
  0.37373795  0.55197647  0.73021499  0.90845351  1.08669203  1.26493055
  1.44316906  1.62140758  1.7996461   1.97788462  2.15612314  2.33436166
  2.51260018  2.6908387   2.86907722  3.04731574  3.22555426  3.40379277
  3.58203129]
args: ()

===Scipy _CDF _Single===

x: -2.834555392948249
args: ()

Output: cdf single = x

cdf_single: 0.0022944750786858476

===Scipy _CDF _Single===

x: -2.656316873878441
args: ()

Output: cdf single = x

cdf_single: 0.003949967213057573

===Scipy _CDF _Single===

x: -2.4780783548086336
args: ()

Output: cdf single = x

cdf_single: 0.006604606674007595

===Scipy _CDF _Single===

x: -2.2998398357388257
args: ()

Output: cdf single = x

cdf_single: 0.01072864783649078

===Scipy _CDF _Single===

x: -2.1216013166690177
args: ()

Output: cdf single = x

cdf_single: 0.016935615867231142

===Scipy _CDF _Single===

x: -1.94336279759921
args: ()

Output: cdf single = x

cdf_single: 0.025986169454897245

===Scipy _CDF _Single===

x: -1.7651242785294023
args: ()

Output: cdf single = x

cdf_single: 0.038771440559927164

===Scipy _CDF _Single===

x: -1.5868857594595944
args: ()

Output: cdf single = x

cdf_single: 0.05626926037884955

===Scipy _CDF _Single===

x: -1.4086472403897863
args: ()

Output: cdf single = x

cdf_single: 0.07946975139026212

===Scipy _CDF _Single===

x: -1.2304087213199786
args: ()

Output: cdf single = x

cdf_single: 0.10927204455346733

===Scipy _CDF _Single===

x: -1.0521702022501707
args: ()

Output: cdf single = x

cdf_single: 0.14636073401059307

===Scipy _CDF _Single===

x: -0.873931683180363
args: ()

Output: cdf single = x

cdf_single: 0.1910777296124187

===Scipy _CDF _Single===

x: -0.6956931641105552
args: ()

Output: cdf single = x

cdf_single: 0.2433105037231137

===Scipy _CDF _Single===

x: -0.5174546450407473
args: ()

Output: cdf single = x

cdf_single: 0.3024194110272275

===Scipy _CDF _Single===

x: -0.3392161259709395
args: ()

Output: cdf single = x

cdf_single: 0.3672234609716683

===Scipy _CDF _Single===

x: -0.1609776069011317
args: ()

Output: cdf single = x

cdf_single: 0.43605551885399585

===Scipy _CDF _Single===

x: 0.017260912168675806
args: ()

Output: cdf single = x

cdf_single: 0.5068857657375542

===Scipy _CDF _Single===

x: 0.19549943123848362
args: ()

Output: cdf single = x

cdf_single: 0.5774990085520461

===Scipy _CDF _Single===

x: 0.37373795030829143
args: ()

Output: cdf single = x

cdf_single: 0.645700356120857

===Scipy _CDF _Single===

x: 0.5519764693780992
args: ()

Output: cdf single = x

cdf_single: 0.7095177625182099

===Scipy _CDF _Single===

x: 0.730214988447907
args: ()

Output: cdf single = x

cdf_single: 0.7673706089053577

===Scipy _CDF _Single===

x: 0.9084535075177148
args: ()

Output: cdf single = x

cdf_single: 0.8181806666172668

===Scipy _CDF _Single===

x: 1.0866920265875226
args: ()

Output: cdf single = x

cdf_single: 0.8614135305161128

===Scipy _CDF _Single===

x: 1.2649305456573305
args: ()

Output: cdf single = x

cdf_single: 0.8970518867890974

===Scipy _CDF _Single===

x: 1.4431690647271382
args: ()

Output: cdf single = x

cdf_single: 0.9255135741697365

===Scipy _CDF _Single===

x: 1.6214075837969462
args: ()

Output: cdf single = x

cdf_single: 0.947534872307582

===Scipy _CDF _Single===

x: 1.7996461028667539
args: ()

Output: cdf single = x

cdf_single: 0.9640417317519038

===Scipy _CDF _Single===

x: 1.9778846219365618
args: ()

Output: cdf single = x

cdf_single: 0.9760291379180357

===Scipy _CDF _Single===

x: 2.1561231410063697
args: ()

Output: cdf single = x

cdf_single: 0.9844629745068194

===Scipy _CDF _Single===

x: 2.334361660076177
args: ()

Output: cdf single = x

cdf_single: 0.990211603712366

===Scipy _CDF _Single===

x: 2.512600179145985
args: ()

Output: cdf single = x

cdf_single: 0.9940077463426602

===Scipy _CDF _Single===

x: 2.690838698215793
args: ()

Output: cdf single = x

cdf_single: 0.9964363676912882

===Scipy _CDF _Single===

x: 2.8690772172856014
args: ()

Output: cdf single = x

cdf_single: 0.9979416435836939

===Scipy _CDF _Single===

x: 3.0473157363554093
args: ()

Output: cdf single = x

cdf_single: 0.9988455247991501

===Scipy _CDF _Single===

x: 3.225554255425217
args: ()

Output: cdf single = x

cdf_single: 0.9993713549858563

===Scipy _CDF _Single===

x: 3.4037927744950247
args: ()

Output: cdf single = x

cdf_single: 0.9996677142481791

===Scipy _CDF _Single===

x: 3.5820312935648326
args: ()

Output: cdf single = x

cdf_single: 0.9998295335296435
_cdf = _cdfvec(x, *args) = [0.00229448 0.00394997 0.00660461 0.01072865 0.01693562 0.02598617
 0.03877144 0.05626926 0.07946975 0.10927204 0.14636073 0.19107773
 0.2433105  0.30241941 0.36722346 0.43605552 0.50688577 0.57749901
 0.64570036 0.70951776 0.76737061 0.81818067 0.86141353 0.89705189
 0.92551357 0.94753487 0.96404173 0.97602914 0.98446297 0.9902116
 0.99400775 0.99643637 0.99794164 0.99884552 0.99937135 0.99966771
 0.99982953]
prob_less_or_equal: [0.00229448 0.00394997 0.00660461 0.01072865 0.01693562 0.02598617
 0.03877144 0.05626926 0.07946975 0.10927204 0.14636073 0.19107773
 0.2433105  0.30241941 0.36722346 0.43605552 0.50688577 0.57749901
 0.64570036 0.70951776 0.76737061 0.81818067 0.86141353 0.89705189
 0.92551357 0.94753487 0.96404173 0.97602914 0.98446297 0.9902116
 0.99400775 0.99643637 0.99794164 0.99884552 0.999      0.999
 0.999     ]
cdf_over: [0.99770552 0.99605003 0.99339539 0.98927135 0.98306438 0.97401383
 0.96122856 0.94373074 0.92053025 0.89072796 0.85363927 0.80892227
 0.7566895  0.69758059 0.63277654 0.56394448 0.49311423 0.42250099
 0.35429964 0.29048224 0.23262939 0.18181933 0.13858647 0.10294811
 0.07448643 0.05246513 0.03595827 0.02397086 0.01553703 0.0097884
 0.00599225 0.00356363 0.00205836 0.00115448 0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [22 14 19 17 12 20 15 15 12 20 22 28 12 20  9 18 29 11 17 15 17 17 21 12
 17  9 22 22 16 10 15 26 10 19 15  5 10  5 10 18 11 14 12 18 22 18  4 11
 12 18 25 10 15 17 17 18 14 26 14  9 22  5]
player: myles turner
stat: pts
condition: M Turner C starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.11308097839355469

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (15.72883432842435, 5.37981675484017)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.83073495, -2.64485502, -2.45897508, -2.27309514, -2.0872152 ,
       -1.90133527, -1.71545533, -1.52957539, -1.34369546, -1.15781552,
       -0.97193558, -0.78605564, -0.60017571, -0.41429577, -0.22841583,
       -0.0425359 ,  0.14334404,  0.32922398,  0.51510391,  0.70098385,
        0.88686379,  1.07274373,  1.25862366,  1.4445036 ,  1.63038354,
        1.81626347,  2.00214341,  2.18802335,  2.37390329,  2.55978322,
        2.74566316,  2.9315431 ,  3.11742303,  3.30330297,  3.48918291,
        3.67506285,  3.86094278])]

===Scipy _CDF===

x: [-2.83073495 -2.64485502 -2.45897508 -2.27309514 -2.0872152  -1.90133527
 -1.71545533 -1.52957539 -1.34369546 -1.15781552 -0.97193558 -0.78605564
 -0.60017571 -0.41429577 -0.22841583 -0.0425359   0.14334404  0.32922398
  0.51510391  0.70098385  0.88686379  1.07274373  1.25862366  1.4445036
  1.63038354  1.81626347  2.00214341  2.18802335  2.37390329  2.55978322
  2.74566316  2.9315431   3.11742303  3.30330297  3.48918291  3.67506285
  3.86094278]
args: ()

===Scipy _CDF _Single===

x: -2.8307349529559924
args: ()

Output: cdf single = x

cdf_single: 0.0023220593926539207

===Scipy _CDF _Single===

x: -2.644855015855847
args: ()

Output: cdf single = x

cdf_single: 0.00408629628813481

===Scipy _CDF _Single===

x: -2.4589750787557016
args: ()

Output: cdf single = x

cdf_single: 0.006966714475077273

===Scipy _CDF _Single===

x: -2.273095141655556
args: ()

Output: cdf single = x

cdf_single: 0.011510223573125635

===Scipy _CDF _Single===

x: -2.0872152045554104
args: ()

Output: cdf single = x

cdf_single: 0.01843434284207916

===Scipy _CDF _Single===

x: -1.9013352674552648
args: ()

Output: cdf single = x

cdf_single: 0.028629056225592094

===Scipy _CDF _Single===

x: -1.7154553303551192
args: ()

Output: cdf single = x

cdf_single: 0.04313088924667412

===Scipy _CDF _Single===

x: -1.5295753932549736
args: ()

Output: cdf single = x

cdf_single: 0.06306093205098671

===Scipy _CDF _Single===

x: -1.3436954561548282
args: ()

Output: cdf single = x

cdf_single: 0.08952344363916763

===Scipy _CDF _Single===

x: -1.1578155190546826
args: ()

Output: cdf single = x

cdf_single: 0.12346966442360577

===Scipy _CDF _Single===

x: -0.971935581954537
args: ()

Output: cdf single = x

cdf_single: 0.1655412983913323

===Scipy _CDF _Single===

x: -0.7860556448543914
args: ()

Output: cdf single = x

cdf_single: 0.21591744412153885

===Scipy _CDF _Single===

x: -0.6001757077542459
args: ()

Output: cdf single = x

cdf_single: 0.27419457068994724

===Scipy _CDF _Single===

x: -0.4142957706541003
args: ()

Output: cdf single = x

cdf_single: 0.33932875542971264

===Scipy _CDF _Single===

x: -0.22841583355395473
args: ()

Output: cdf single = x

cdf_single: 0.40966149069245045

===Scipy _CDF _Single===

x: -0.042535896453809174
args: ()

Output: cdf single = x

cdf_single: 0.4830357482011474

===Scipy _CDF _Single===

x: 0.14334404064633605
args: ()

Output: cdf single = x

cdf_single: 0.5569907622320094

===Scipy _CDF _Single===

x: 0.3292239777464816
args: ()

Output: cdf single = x

cdf_single: 0.6290067996944327

===Scipy _CDF _Single===

x: 0.5151039148466272
args: ()

Output: cdf single = x

cdf_single: 0.6967597963961941

===Scipy _CDF _Single===

x: 0.7009838519467727
args: ()

Output: cdf single = x

cdf_single: 0.7583434536041336

===Scipy _CDF _Single===

x: 0.8868637890469183
args: ()

Output: cdf single = x

cdf_single: 0.8124238803743983

===Scipy _CDF _Single===

x: 1.0727437261470638
args: ()

Output: cdf single = x

cdf_single: 0.8583069421580957

===Scipy _CDF _Single===

x: 1.2586236632472094
args: ()

Output: cdf single = x

cdf_single: 0.8959168521147072

===Scipy _CDF _Single===

x: 1.444503600347355
args: ()

Output: cdf single = x

cdf_single: 0.9257013161415979

===Scipy _CDF _Single===

x: 1.6303835374475006
args: ()

Output: cdf single = x

cdf_single: 0.9484897690973597

===Scipy _CDF _Single===

x: 1.816263474547646
args: ()

Output: cdf single = x

cdf_single: 0.9653350173365566

===Scipy _CDF _Single===

x: 2.0021434116477916
args: ()

Output: cdf single = x

cdf_single: 0.9773653451380314

===Scipy _CDF _Single===

x: 2.1880233487479375
args: ()

Output: cdf single = x

cdf_single: 0.9856660492032613

===Scipy _CDF _Single===

x: 2.373903285848083
args: ()

Output: cdf single = x

cdf_single: 0.9911994199464513

===Scipy _CDF _Single===

x: 2.5597832229482282
args: ()

Output: cdf single = x

cdf_single: 0.9947631263512363

===Scipy _CDF _Single===

x: 2.745663160048374
args: ()

Output: cdf single = x

cdf_single: 0.9969805634559399

===Scipy _CDF _Single===

x: 2.9315430971485195
args: ()

Output: cdf single = x

cdf_single: 0.9983135871788673

===Scipy _CDF _Single===

x: 3.117423034248666
args: ()

Output: cdf single = x

cdf_single: 0.9990878021178864

===Scipy _CDF _Single===

x: 3.3033029713488116
args: ()

Output: cdf single = x

cdf_single: 0.9995222345478165

===Scipy _CDF _Single===

x: 3.4891829084489574
args: ()

Output: cdf single = x

cdf_single: 0.9997577502488669

===Scipy _CDF _Single===

x: 3.675062845549103
args: ()

Output: cdf single = x

cdf_single: 0.9998811045628426

===Scipy _CDF _Single===

x: 3.860942782649248
args: ()

Output: cdf single = x

cdf_single: 0.9999435248230697
_cdf = _cdfvec(x, *args) = [0.00232206 0.0040863  0.00696671 0.01151022 0.01843434 0.02862906
 0.04313089 0.06306093 0.08952344 0.12346966 0.1655413  0.21591744
 0.27419457 0.33932876 0.40966149 0.48303575 0.55699076 0.6290068
 0.6967598  0.75834345 0.81242388 0.85830694 0.89591685 0.92570132
 0.94848977 0.96533502 0.97736535 0.98566605 0.99119942 0.99476313
 0.99698056 0.99831359 0.9990878  0.99952223 0.99975775 0.9998811
 0.99994352]
prob_less_or_equal: [0.00232206 0.0040863  0.00696671 0.01151022 0.01843434 0.02862906
 0.04313089 0.06306093 0.08952344 0.12346966 0.1655413  0.21591744
 0.27419457 0.33932876 0.40966149 0.48303575 0.55699076 0.6290068
 0.6967598  0.75834345 0.81242388 0.85830694 0.89591685 0.92570132
 0.94848977 0.96533502 0.97736535 0.98566605 0.99119942 0.99476313
 0.99698056 0.99831359 0.999      0.999      0.999      0.999
 0.999     ]
cdf_over: [0.99767794 0.9959137  0.99303329 0.98848978 0.98156566 0.97137094
 0.95686911 0.93693907 0.91047656 0.87653034 0.8344587  0.78408256
 0.72580543 0.66067124 0.59033851 0.51696425 0.44300924 0.3709932
 0.3032402  0.24165655 0.18757612 0.14169306 0.10408315 0.07429868
 0.05151023 0.03466498 0.02263465 0.01433395 0.00880058 0.00523687
 0.00301944 0.00168641 0.001      0.001      0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [22 14 19 17 12 20 15 15 12 20 22 28 20  9 18 29 11 17 12 17  9 22 22 16
 10 15 26 10 19 15  5 10  5 10 18 11 14 12 18 22 18  4 15 17 17 18 14 26]
player: myles turner
stat: pts
condition: A Nembhard PG starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.1271827220916748

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (15.929425346687342, 5.51972378166829)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.79532581, -2.61415732, -2.43298884, -2.25182035, -2.07065187,
       -1.88948338, -1.70831489, -1.52714641, -1.34597792, -1.16480944,
       -0.98364095, -0.80247246, -0.62130398, -0.44013549, -0.25896701,
       -0.07779852,  0.10336996,  0.28453845,  0.46570694,  0.64687542,
        0.82804391,  1.00921239,  1.19038088,  1.37154937,  1.55271785,
        1.73388634,  1.91505482,  2.09622331,  2.2773918 ,  2.45856028,
        2.63972877,  2.82089725,  3.00206574,  3.18323422,  3.36440271,
        3.5455712 ,  3.72673968])]

===Scipy _CDF===

x: [-2.79532581 -2.61415732 -2.43298884 -2.25182035 -2.07065187 -1.88948338
 -1.70831489 -1.52714641 -1.34597792 -1.16480944 -0.98364095 -0.80247246
 -0.62130398 -0.44013549 -0.25896701 -0.07779852  0.10336996  0.28453845
  0.46570694  0.64687542  0.82804391  1.00921239  1.19038088  1.37154937
  1.55271785  1.73388634  1.91505482  2.09622331  2.2773918   2.45856028
  2.63972877  2.82089725  3.00206574  3.18323422  3.36440271  3.5455712
  3.72673968]
args: ()

===Scipy _CDF _Single===

x: -2.7953258092244475
args: ()

Output: cdf single = x

cdf_single: 0.0025923716970060427

===Scipy _CDF _Single===

x: -2.6141573233445694
args: ()

Output: cdf single = x

cdf_single: 0.004472391918805936

===Scipy _CDF _Single===

x: -2.4329888374646913
args: ()

Output: cdf single = x

cdf_single: 0.007487381268366726

===Scipy _CDF _Single===

x: -2.251820351584813
args: ()

Output: cdf single = x

cdf_single: 0.012166813521886307

===Scipy _CDF _Single===

x: -2.0706518657049346
args: ()

Output: cdf single = x

cdf_single: 0.01919567074292403

===Scipy _CDF _Single===

x: -1.8894833798250565
args: ()

Output: cdf single = x

cdf_single: 0.029413543864934673

===Scipy _CDF _Single===

x: -1.7083148939451782
args: ()

Output: cdf single = x

cdf_single: 0.043788964587670266

===Scipy _CDF _Single===

x: -1.5271464080652999
args: ()

Output: cdf single = x

cdf_single: 0.06336230457039566

===Scipy _CDF _Single===

x: -1.3459779221854213
args: ()

Output: cdf single = x

cdf_single: 0.08915481840150624

===Scipy _CDF _Single===

x: -1.164809436305543
args: ()

Output: cdf single = x

cdf_single: 0.12204806918420505

===Scipy _CDF _Single===

x: -0.9836409504256648
args: ()

Output: cdf single = x

cdf_single: 0.16264604148209216

===Scipy _CDF _Single===

x: -0.8024724645457865
args: ()

Output: cdf single = x

cdf_single: 0.2111398551150017

===Scipy _CDF _Single===

x: -0.6213039786659081
args: ()

Output: cdf single = x

cdf_single: 0.2671998182029677

===Scipy _CDF _Single===

x: -0.4401354927860299
args: ()

Output: cdf single = x

cdf_single: 0.3299194884591774

===Scipy _CDF _Single===

x: -0.2589670069061516
args: ()

Output: cdf single = x

cdf_single: 0.3978303484908346

===Scipy _CDF _Single===

x: -0.07779852102627333
args: ()

Output: cdf single = x

cdf_single: 0.46899416146752293

===Scipy _CDF _Single===

x: 0.10336996485360464
args: ()

Output: cdf single = x

cdf_single: 0.5411653255017209

===Scipy _CDF _Single===

x: 0.28453845073348294
args: ()

Output: cdf single = x

cdf_single: 0.6120011141231108

===Scipy _CDF _Single===

x: 0.4657069366133612
args: ()

Output: cdf single = x

cdf_single: 0.6792873567359463

===Scipy _CDF _Single===

x: 0.6468754224932395
args: ()

Output: cdf single = x

cdf_single: 0.7411437131926423

===Scipy _CDF _Single===

x: 0.8280439083731178
args: ()

Output: cdf single = x

cdf_single: 0.7961771830786404

===Scipy _CDF _Single===

x: 1.009212394252996
args: ()

Output: cdf single = x

cdf_single: 0.8435636081145895

===Scipy _CDF _Single===

x: 1.1903808801328744
args: ()

Output: cdf single = x

cdf_single: 0.8830516377684116

===Scipy _CDF _Single===

x: 1.3715493660127527
args: ()

Output: cdf single = x

cdf_single: 0.9148981171862909

===Scipy _CDF _Single===

x: 1.552717851892631
args: ()

Output: cdf single = x

cdf_single: 0.9397547222346591

===Scipy _CDF _Single===

x: 1.7338863377725093
args: ()

Output: cdf single = x

cdf_single: 0.9585308737791715

===Scipy _CDF _Single===

x: 1.9150548236523874
args: ()

Output: cdf single = x

cdf_single: 0.9722572438406669

===Scipy _CDF _Single===

x: 2.0962233095322658
args: ()

Output: cdf single = x

cdf_single: 0.9819688069388542

===Scipy _CDF _Single===

x: 2.2773917954121443
args: ()

Output: cdf single = x

cdf_single: 0.9886185801940679

===Scipy _CDF _Single===

x: 2.4585602812920224
args: ()

Output: cdf single = x

cdf_single: 0.993025232219549

===Scipy _CDF _Single===

x: 2.6397287671719005
args: ()

Output: cdf single = x

cdf_single: 0.9958513798594486

===Scipy _CDF _Single===

x: 2.820897253051779
args: ()

Output: cdf single = x

cdf_single: 0.9976055230681935

===Scipy _CDF _Single===

x: 3.002065738931658
args: ()

Output: cdf single = x

cdf_single: 0.9986592286943133

===Scipy _CDF _Single===

x: 3.183234224811536
args: ()

Output: cdf single = x

cdf_single: 0.9992718012554891

===Scipy _CDF _Single===

x: 3.3644027106914147
args: ()

Output: cdf single = x

cdf_single: 0.9996164523807874

===Scipy _CDF _Single===

x: 3.545571196571293
args: ()

Output: cdf single = x

cdf_single: 0.9998041184297985

===Scipy _CDF _Single===

x: 3.726739682451171
args: ()

Output: cdf single = x

cdf_single: 0.9999030136937603
_cdf = _cdfvec(x, *args) = [0.00259237 0.00447239 0.00748738 0.01216681 0.01919567 0.02941354
 0.04378896 0.0633623  0.08915482 0.12204807 0.16264604 0.21113986
 0.26719982 0.32991949 0.39783035 0.46899416 0.54116533 0.61200111
 0.67928736 0.74114371 0.79617718 0.84356361 0.88305164 0.91489812
 0.93975472 0.95853087 0.97225724 0.98196881 0.98861858 0.99302523
 0.99585138 0.99760552 0.99865923 0.9992718  0.99961645 0.99980412
 0.99990301]
prob_less_or_equal: [0.00259237 0.00447239 0.00748738 0.01216681 0.01919567 0.02941354
 0.04378896 0.0633623  0.08915482 0.12204807 0.16264604 0.21113986
 0.26719982 0.32991949 0.39783035 0.46899416 0.54116533 0.61200111
 0.67928736 0.74114371 0.79617718 0.84356361 0.88305164 0.91489812
 0.93975472 0.95853087 0.97225724 0.98196881 0.98861858 0.99302523
 0.99585138 0.99760552 0.99865923 0.999      0.999      0.999
 0.999     ]
cdf_over: [0.99740763 0.99552761 0.99251262 0.98783319 0.98080433 0.97058646
 0.95621104 0.9366377  0.91084518 0.87795193 0.83735396 0.78886014
 0.73280018 0.67008051 0.60216965 0.53100584 0.45883467 0.38799889
 0.32071264 0.25885629 0.20382282 0.15643639 0.11694836 0.08510188
 0.06024528 0.04146913 0.02774276 0.01803119 0.01138142 0.00697477
 0.00414862 0.00239448 0.00134077 0.001      0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [22 20 15 15 20 22 28 12 20  9 18 29 11 17 22 16 10 15 26 10 19 15  5 10
  5 10 18 11 14 12 18 18  4 11 12 18 25 10 15 17 17 18 14 26 14  9 22  5]
player: myles turner
stat: pts
condition: T Haliburton PG starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.08161687850952148

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (15.607171348061229, 5.338203654826232)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.83001049, -2.64268156, -2.45535262, -2.26802369, -2.08069476,
       -1.89336582, -1.70603689, -1.51870795, -1.33137902, -1.14405009,
       -0.95672115, -0.76939222, -0.58206328, -0.39473435, -0.20740542,
       -0.02007648,  0.16725245,  0.35458139,  0.54191032,  0.72923925,
        0.91656819,  1.10389712,  1.29122606,  1.47855499,  1.66588392,
        1.85321286,  2.04054179,  2.22787073,  2.41519966,  2.60252859,
        2.78985753,  2.97718646,  3.1645154 ,  3.35184433,  3.53917326,
        3.7265022 ,  3.91383113])]

===Scipy _CDF===

x: [-2.83001049 -2.64268156 -2.45535262 -2.26802369 -2.08069476 -1.89336582
 -1.70603689 -1.51870795 -1.33137902 -1.14405009 -0.95672115 -0.76939222
 -0.58206328 -0.39473435 -0.20740542 -0.02007648  0.16725245  0.35458139
  0.54191032  0.72923925  0.91656819  1.10389712  1.29122606  1.47855499
  1.66588392  1.85321286  2.04054179  2.22787073  2.41519966  2.60252859
  2.78985753  2.97718646  3.1645154   3.35184433  3.53917326  3.7265022
  3.91383113]
args: ()

===Scipy _CDF _Single===

x: -2.8300104913387747
args: ()

Output: cdf single = x

cdf_single: 0.0023273238892568197

===Scipy _CDF _Single===

x: -2.642681557363783
args: ()

Output: cdf single = x

cdf_single: 0.004112617686173975

===Scipy _CDF _Single===

x: -2.4553526233887926
args: ()

Output: cdf single = x

cdf_single: 0.007037322547533624

===Scipy _CDF _Single===

x: -2.2680236894138015
args: ()

Output: cdf single = x

cdf_single: 0.011663881424140467

===Scipy _CDF _Single===

x: -2.08069475543881
args: ()

Output: cdf single = x

cdf_single: 0.018730927216158936

===Scipy _CDF _Single===

x: -1.893365821463819
args: ()

Output: cdf single = x

cdf_single: 0.029154618695545087

===Scipy _CDF _Single===

x: -1.7060368874888276
args: ()

Output: cdf single = x

cdf_single: 0.0440006059379385

===Scipy _CDF _Single===

x: -1.5187079535138366
args: ()

Output: cdf single = x

cdf_single: 0.06441801186525348

===Scipy _CDF _Single===

x: -1.331379019538845
args: ()

Output: cdf single = x

cdf_single: 0.09153216464286154

===Scipy _CDF _Single===

x: -1.1440500855638538
args: ()

Output: cdf single = x

cdf_single: 0.1263014331343047

===Scipy _CDF _Single===

x: -0.9567211515888626
args: ()

Output: cdf single = x

cdf_single: 0.16935400958358796

===Scipy _CDF _Single===

x: -0.7693922176138713
args: ()

Output: cdf single = x

cdf_single: 0.22083025358737607

===Scipy _CDF _Single===

x: -0.5820632836388802
args: ()

Output: cdf single = x

cdf_single: 0.28026202763667013

===Scipy _CDF _Single===

x: -0.394734349663889
args: ()

Output: cdf single = x

cdf_single: 0.34651947484751805

===Scipy _CDF _Single===

x: -0.20740541568889778
args: ()

Output: cdf single = x

cdf_single: 0.4178466267252126

===Scipy _CDF _Single===

x: -0.020076481713906576
args: ()

Output: cdf single = x

cdf_single: 0.49199118061885166

===Scipy _CDF _Single===

x: 0.1672524522610843
args: ()

Output: cdf single = x

cdf_single: 0.5664142926654893

===Scipy _CDF _Single===

x: 0.3545813862360755
args: ()

Output: cdf single = x

cdf_single: 0.6385483885735522

===Scipy _CDF _Single===

x: 0.5419103202110667
args: ()

Output: cdf single = x

cdf_single: 0.7060598565429163

===Scipy _CDF _Single===

x: 0.7292392541860578
args: ()

Output: cdf single = x

cdf_single: 0.7670723383766632

===Scipy _CDF _Single===

x: 0.9165681881610491
args: ()

Output: cdf single = x

cdf_single: 0.820315519699391

===Scipy _CDF _Single===

x: 1.1038971221360403
args: ()

Output: cdf single = x

cdf_single: 0.8651811162967624

===Scipy _CDF _Single===

x: 1.2912260561110316
args: ()

Output: cdf single = x

cdf_single: 0.9016873487615262

===Scipy _CDF _Single===

x: 1.4785549900860226
args: ()

Output: cdf single = x

cdf_single: 0.9303703550708817

===Scipy _CDF _Single===

x: 1.665883924061014
args: ()

Output: cdf single = x

cdf_single: 0.9521317319280201

===Scipy _CDF _Single===

x: 1.853212858036005
args: ()

Output: cdf single = x

cdf_single: 0.9680740722846652

===Scipy _CDF _Single===

x: 2.0405417920109965
args: ()

Output: cdf single = x

cdf_single: 0.9793518035171727

===Scipy _CDF _Single===

x: 2.2278707259859876
args: ()

Output: cdf single = x

cdf_single: 0.9870554315946918

===Scipy _CDF _Single===

x: 2.4151996599609786
args: ()

Output: cdf single = x

cdf_single: 0.9921367068180225

===Scipy _CDF _Single===

x: 2.6025285939359697
args: ()

Output: cdf single = x

cdf_single: 0.995373045099907

===Scipy _CDF _Single===

x: 2.789857527910961
args: ()

Output: cdf single = x

cdf_single: 0.9973634379959639

===Scipy _CDF _Single===

x: 2.9771864618859523
args: ()

Output: cdf single = x

cdf_single: 0.99854546487329

===Scipy _CDF _Single===

x: 3.164515395860944
args: ()

Output: cdf single = x

cdf_single: 0.9992232927832624

===Scipy _CDF _Single===

x: 3.3518443298359353
args: ()

Output: cdf single = x

cdf_single: 0.9995986242831888

===Scipy _CDF _Single===

x: 3.5391732638109263
args: ()

Output: cdf single = x

cdf_single: 0.9997993088444921

===Scipy _CDF _Single===

x: 3.726502197785918
args: ()

Output: cdf single = x

cdf_single: 0.999902922309979

===Scipy _CDF _Single===

x: 3.913831131760909
args: ()

Output: cdf single = x

cdf_single: 0.9999545784110022
_cdf = _cdfvec(x, *args) = [0.00232732 0.00411262 0.00703732 0.01166388 0.01873093 0.02915462
 0.04400061 0.06441801 0.09153216 0.12630143 0.16935401 0.22083025
 0.28026203 0.34651947 0.41784663 0.49199118 0.56641429 0.63854839
 0.70605986 0.76707234 0.82031552 0.86518112 0.90168735 0.93037036
 0.95213173 0.96807407 0.9793518  0.98705543 0.99213671 0.99537305
 0.99736344 0.99854546 0.99922329 0.99959862 0.99979931 0.99990292
 0.99995458]
prob_less_or_equal: [0.00232732 0.00411262 0.00703732 0.01166388 0.01873093 0.02915462
 0.04400061 0.06441801 0.09153216 0.12630143 0.16935401 0.22083025
 0.28026203 0.34651947 0.41784663 0.49199118 0.56641429 0.63854839
 0.70605986 0.76707234 0.82031552 0.86518112 0.90168735 0.93037036
 0.95213173 0.96807407 0.9793518  0.98705543 0.99213671 0.99537305
 0.99736344 0.99854546 0.999      0.999      0.999      0.999
 0.999     ]
cdf_over: [0.99767268 0.99588738 0.99296268 0.98833612 0.98126907 0.97084538
 0.95599939 0.93558199 0.90846784 0.87369857 0.83064599 0.77916975
 0.71973797 0.65348053 0.58215337 0.50800882 0.43358571 0.36145161
 0.29394014 0.23292766 0.17968448 0.13481888 0.09831265 0.06962964
 0.04786827 0.03192593 0.0206482  0.01294457 0.00786329 0.00462695
 0.00263656 0.00145454 0.001      0.001      0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [22 14 19 17 12 20 15 20 22 12 20  9 29 17 21 12 17 22 22 10 15 26 10 19
 15  5 10  5 18 11]
player: myles turner
stat: pts
condition: J Smith PF bench
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.08714818954467773

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (16.02174335865547, 5.651273979510833)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.74659208, -2.56964083, -2.39268958, -2.21573833, -2.03878708,
       -1.86183583, -1.68488458, -1.50793332, -1.33098207, -1.15403082,
       -0.97707957, -0.80012832, -0.62317707, -0.44622582, -0.26927457,
       -0.09232332,  0.08462793,  0.26157918,  0.43853044,  0.61548169,
        0.79243294,  0.96938419,  1.14633544,  1.32328669,  1.50023794,
        1.67718919,  1.85414044,  2.03109169,  2.20804295,  2.3849942 ,
        2.56194545,  2.7388967 ,  2.91584795,  3.0927992 ,  3.26975045,
        3.4467017 ,  3.62365295])]

===Scipy _CDF===

x: [-2.74659208 -2.56964083 -2.39268958 -2.21573833 -2.03878708 -1.86183583
 -1.68488458 -1.50793332 -1.33098207 -1.15403082 -0.97707957 -0.80012832
 -0.62317707 -0.44622582 -0.26927457 -0.09232332  0.08462793  0.26157918
  0.43853044  0.61548169  0.79243294  0.96938419  1.14633544  1.32328669
  1.50023794  1.67718919  1.85414044  2.03109169  2.20804295  2.3849942
  2.56194545  2.7388967   2.91584795  3.0927992   3.26975045  3.4467017
  3.62365295]
args: ()

===Scipy _CDF _Single===

x: -2.74659208081768
args: ()

Output: cdf single = x

cdf_single: 0.00301089897172699

===Scipy _CDF _Single===

x: -2.569640829891679
args: ()

Output: cdf single = x

cdf_single: 0.005090200180438022

===Scipy _CDF _Single===

x: -2.392689578965679
args: ()

Output: cdf single = x

cdf_single: 0.008362692505677947

===Scipy _CDF _Single===

x: -2.215738328039678
args: ()

Output: cdf single = x

cdf_single: 0.013354714161954766

===Scipy _CDF _Single===

x: -2.0387870771136773
args: ()

Output: cdf single = x

cdf_single: 0.020735641309347456

===Scipy _CDF _Single===

x: -1.8618358261876766
args: ()

Output: cdf single = x

cdf_single: 0.03131311745894588

===Scipy _CDF _Single===

x: -1.684884575261676
args: ()

Output: cdf single = x

cdf_single: 0.04600542154792378

===Scipy _CDF _Single===

x: -1.5079333243356754
args: ()

Output: cdf single = x

cdf_single: 0.06578579632711805

===Scipy _CDF _Single===

x: -1.3309820734096742
args: ()

Output: cdf single = x

cdf_single: 0.09159745479562109

===Scipy _CDF _Single===

x: -1.1540308224836735
args: ()

Output: cdf single = x

cdf_single: 0.12424376629021971

===Scipy _CDF _Single===

x: -0.9770795715576729
args: ()

Output: cdf single = x

cdf_single: 0.16426488019858476

===Scipy _CDF _Single===

x: -0.8001283206316722
args: ()

Output: cdf single = x

cdf_single: 0.2118182270884388

===Scipy _CDF _Single===

x: -0.6231770697056714
args: ()

Output: cdf single = x

cdf_single: 0.26658408420430557

===Scipy _CDF _Single===

x: -0.44622581877967077
args: ()

Output: cdf single = x

cdf_single: 0.32771706728786676

===Scipy _CDF _Single===

x: -0.26927456785367004
args: ()

Output: cdf single = x

cdf_single: 0.3938592007672367

===Scipy _CDF _Single===

x: -0.09232331692766933
args: ()

Output: cdf single = x

cdf_single: 0.4632205816267093

===Scipy _CDF _Single===

x: 0.08462793399833106
args: ()

Output: cdf single = x

cdf_single: 0.5337214046965079

===Scipy _CDF _Single===

x: 0.26157918492433174
args: ()

Output: cdf single = x

cdf_single: 0.6031770532905034

===Scipy _CDF _Single===

x: 0.43853043585033247
args: ()

Output: cdf single = x

cdf_single: 0.6694990939972965

===Scipy _CDF _Single===

x: 0.6154816867763332
args: ()

Output: cdf single = x

cdf_single: 0.7308816701068946

===Scipy _CDF _Single===

x: 0.7924329377023339
args: ()

Output: cdf single = x

cdf_single: 0.7859458598504176

===Scipy _CDF _Single===

x: 0.9693841886283345
args: ()

Output: cdf single = x

cdf_single: 0.8338232308757005

===Scipy _CDF _Single===

x: 1.1463354395543353
args: ()

Output: cdf single = x

cdf_single: 0.8741718077431122

===Scipy _CDF _Single===

x: 1.323286690480336
args: ()

Output: cdf single = x

cdf_single: 0.9071299719427155

===Scipy _CDF _Single===

x: 1.5002379414063367
args: ()

Output: cdf single = x

cdf_single: 0.9332236108307767

===Scipy _CDF _Single===

x: 1.6771891923323374
args: ()

Output: cdf single = x

cdf_single: 0.9532472541141982

===Scipy _CDF _Single===

x: 1.8541404432583382
args: ()

Output: cdf single = x

cdf_single: 0.9681404650215167

===Scipy _CDF _Single===

x: 2.031091694184339
args: ()

Output: cdf single = x

cdf_single: 0.9788771530690943

===Scipy _CDF _Single===

x: 2.2080429451103396
args: ()

Output: cdf single = x

cdf_single: 0.9863793601808301

===Scipy _CDF _Single===

x: 2.3849941960363403
args: ()

Output: cdf single = x

cdf_single: 0.9914603045960847

===Scipy _CDF _Single===

x: 2.561945446962341
args: ()

Output: cdf single = x

cdf_single: 0.994795616667558

===Scipy _CDF _Single===

x: 2.738896697888342
args: ()

Output: cdf single = x

cdf_single: 0.996917713014795

===Scipy _CDF _Single===

x: 2.915847948814343
args: ()

Output: cdf single = x

cdf_single: 0.9982263833619052

===Scipy _CDF _Single===

x: 3.0927991997403437
args: ()

Output: cdf single = x

cdf_single: 0.9990086087636281

===Scipy _CDF _Single===

x: 3.2697504506663444
args: ()

Output: cdf single = x

cdf_single: 0.999461787997601

===Scipy _CDF _Single===

x: 3.446701701592345
args: ()

Output: cdf single = x

cdf_single: 0.9997162626095222

===Scipy _CDF _Single===

x: 3.623652952518346
args: ()

Output: cdf single = x

cdf_single: 0.999854764350267
_cdf = _cdfvec(x, *args) = [0.0030109  0.0050902  0.00836269 0.01335471 0.02073564 0.03131312
 0.04600542 0.0657858  0.09159745 0.12424377 0.16426488 0.21181823
 0.26658408 0.32771707 0.3938592  0.46322058 0.5337214  0.60317705
 0.66949909 0.73088167 0.78594586 0.83382323 0.87417181 0.90712997
 0.93322361 0.95324725 0.96814047 0.97887715 0.98637936 0.9914603
 0.99479562 0.99691771 0.99822638 0.99900861 0.99946179 0.99971626
 0.99985476]
prob_less_or_equal: [0.0030109  0.0050902  0.00836269 0.01335471 0.02073564 0.03131312
 0.04600542 0.0657858  0.09159745 0.12424377 0.16426488 0.21181823
 0.26658408 0.32771707 0.3938592  0.46322058 0.5337214  0.60317705
 0.66949909 0.73088167 0.78594586 0.83382323 0.87417181 0.90712997
 0.93322361 0.95324725 0.96814047 0.97887715 0.98637936 0.9914603
 0.99479562 0.99691771 0.99822638 0.999      0.999      0.999
 0.999     ]
cdf_over: [0.9969891  0.9949098  0.99163731 0.98664529 0.97926436 0.96868688
 0.95399458 0.9342142  0.90840255 0.87575623 0.83573512 0.78818177
 0.73341592 0.67228293 0.6061408  0.53677942 0.4662786  0.39682295
 0.33050091 0.26911833 0.21405414 0.16617677 0.12582819 0.09287003
 0.06677639 0.04675275 0.03185953 0.02112285 0.01362064 0.0085397
 0.00520438 0.00308229 0.00177362 0.001      0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [22 14 19 12 20 15 15 12 12 20  9 29 17 15 17 21 17  9 22 16 19 15  5 10
 14 18 22 18  4 11 12 18 10 15 17 17 18 14 26 14  9 22  5]
player: myles turner
stat: pts
condition: I Jackson SF bench
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.12119507789611816

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (15.491354825000021, 5.298590072653769)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.82931037e+00, -2.64058092e+00, -2.45185146e+00, -2.26312201e+00,
       -2.07439256e+00, -1.88566311e+00, -1.69693366e+00, -1.50820420e+00,
       -1.31947475e+00, -1.13074530e+00, -9.42015849e-01, -7.53286397e-01,
       -5.64556945e-01, -3.75827493e-01, -1.87098041e-01,  1.63141041e-03,
        1.90360862e-01,  3.79090314e-01,  5.67819766e-01,  7.56549218e-01,
        9.45278670e-01,  1.13400812e+00,  1.32273757e+00,  1.51146703e+00,
        1.70019648e+00,  1.88892593e+00,  2.07765538e+00,  2.26638483e+00,
        2.45511428e+00,  2.64384374e+00,  2.83257319e+00,  3.02130264e+00,
        3.21003209e+00,  3.39876154e+00,  3.58749100e+00,  3.77622045e+00,
        3.96494990e+00])]

===Scipy _CDF===

x: [-2.82931037e+00 -2.64058092e+00 -2.45185146e+00 -2.26312201e+00
 -2.07439256e+00 -1.88566311e+00 -1.69693366e+00 -1.50820420e+00
 -1.31947475e+00 -1.13074530e+00 -9.42015849e-01 -7.53286397e-01
 -5.64556945e-01 -3.75827493e-01 -1.87098041e-01  1.63141041e-03
  1.90360862e-01  3.79090314e-01  5.67819766e-01  7.56549218e-01
  9.45278670e-01  1.13400812e+00  1.32273757e+00  1.51146703e+00
  1.70019648e+00  1.88892593e+00  2.07765538e+00  2.26638483e+00
  2.45511428e+00  2.64384374e+00  2.83257319e+00  3.02130264e+00
  3.21003209e+00  3.39876154e+00  3.58749100e+00  3.77622045e+00
  3.96494990e+00]
args: ()

===Scipy _CDF _Single===

x: -2.829310367369424
args: ()

Output: cdf single = x

cdf_single: 0.0023324217957076464

===Scipy _CDF _Single===

x: -2.640580915517499
args: ()

Output: cdf single = x

cdf_single: 0.004138201323735765

===Scipy _CDF _Single===

x: -2.4518514636655735
args: ()

Output: cdf single = x

cdf_single: 0.0071061657904976224

===Scipy _CDF _Single===

x: -2.263122011813648
args: ()

Output: cdf single = x

cdf_single: 0.01181408450131844

===Scipy _CDF _Single===

x: -2.0743925599617223
args: ()

Output: cdf single = x

cdf_single: 0.019021433866862412

===Scipy _CDF _Single===

x: -1.885663108109797
args: ()

Output: cdf single = x

cdf_single: 0.02967018364773824

===Scipy _CDF _Single===

x: -1.6969336562578714
args: ()

Output: cdf single = x

cdf_single: 0.04485460206158194

===Scipy _CDF _Single===

x: -1.508204204405946
args: ()

Output: cdf single = x

cdf_single: 0.06575113578415902

===Scipy _CDF _Single===

x: -1.3194747525540202
args: ()

Output: cdf single = x

cdf_single: 0.09350522264784608

===Scipy _CDF _Single===

x: -1.130745300702095
args: ()

Output: cdf single = x

cdf_single: 0.12908115426839994

===Scipy _CDF _Single===

x: -0.9420158488501693
args: ()

Output: cdf single = x

cdf_single: 0.17309226285315155

===Scipy _CDF _Single===

x: -0.7532863969982438
args: ()

Output: cdf single = x

cdf_single: 0.22563891565284588

===Scipy _CDF _Single===

x: -0.5645569451463183
args: ()

Output: cdf single = x

cdf_single: 0.2861875785605719

===Scipy _CDF _Single===

x: -0.3758274932943928
args: ()

Output: cdf single = x

cdf_single: 0.3535225735031539

===Scipy _CDF _Single===

x: -0.1870980414424673
args: ()

Output: cdf single = x

cdf_single: 0.42579188187362105

===Scipy _CDF _Single===

x: 0.0016314104094582059
args: ()

Output: cdf single = x

cdf_single: 0.5006508383003189

===Scipy _CDF _Single===

x: 0.19036086226138338
args: ()

Output: cdf single = x

cdf_single: 0.5754868178735709

===Scipy _CDF _Single===

x: 0.3790903141133089
args: ()

Output: cdf single = x

cdf_single: 0.6476896006615005

===Scipy _CDF _Single===

x: 0.5678197659652344
args: ()

Output: cdf single = x

cdf_single: 0.7149213215598162

===Scipy _CDF _Single===

x: 0.7565492178171599
args: ()

Output: cdf single = x

cdf_single: 0.7753400124594807

===Scipy _CDF _Single===

x: 0.9452786696690854
args: ()

Output: cdf single = x

cdf_single: 0.8277416873777101

===Scipy _CDF _Single===

x: 1.134008121521011
args: ()

Output: cdf single = x

cdf_single: 0.871604429345194

===Scipy _CDF _Single===

x: 1.3227375733729365
args: ()

Output: cdf single = x

cdf_single: 0.9070386681201643

===Scipy _CDF _Single===

x: 1.5114670252248619
args: ()

Output: cdf single = x

cdf_single: 0.9346652480964257

===Scipy _CDF _Single===

x: 1.7001964770767874
args: ()

Output: cdf single = x

cdf_single: 0.95545301264347

===Scipy _CDF _Single===

x: 1.888925928928713
args: ()

Output: cdf single = x

cdf_single: 0.9705491227186408

===Scipy _CDF _Single===

x: 2.0776553807806386
args: ()

Output: cdf single = x

cdf_single: 0.981129444282669

===Scipy _CDF _Single===

x: 2.266384832632564
args: ()

Output: cdf single = x

cdf_single: 0.9882860842872456

===Scipy _CDF _Single===

x: 2.4551142844844893
args: ()

Output: cdf single = x

cdf_single: 0.9929580097384376

===Scipy _CDF _Single===

x: 2.643843736336415
args: ()

Output: cdf single = x

cdf_single: 0.9959014755508744

===Scipy _CDF _Single===

x: 2.8325731881883405
args: ()

Output: cdf single = x

cdf_single: 0.9976912502840937

===Scipy _CDF _Single===

x: 3.0213026400402665
args: ()

Output: cdf single = x

cdf_single: 0.9987415517091891

===Scipy _CDF _Single===

x: 3.2100320918921916
args: ()

Output: cdf single = x

cdf_single: 0.999336399231382

===Scipy _CDF _Single===

x: 3.398761543744117
args: ()

Output: cdf single = x

cdf_single: 0.9996615414677549

===Scipy _CDF _Single===

x: 3.587490995596043
args: ()

Output: cdf single = x

cdf_single: 0.9998330623704993

===Scipy _CDF _Single===

x: 3.7762204474479684
args: ()

Output: cdf single = x

cdf_single: 0.9999203869597109

===Scipy _CDF _Single===

x: 3.964949899299894
args: ()

Output: cdf single = x

cdf_single: 0.9999632943178393
_cdf = _cdfvec(x, *args) = [0.00233242 0.0041382  0.00710617 0.01181408 0.01902143 0.02967018
 0.0448546  0.06575114 0.09350522 0.12908115 0.17309226 0.22563892
 0.28618758 0.35352257 0.42579188 0.50065084 0.57548682 0.6476896
 0.71492132 0.77534001 0.82774169 0.87160443 0.90703867 0.93466525
 0.95545301 0.97054912 0.98112944 0.98828608 0.99295801 0.99590148
 0.99769125 0.99874155 0.9993364  0.99966154 0.99983306 0.99992039
 0.99996329]
prob_less_or_equal: [0.00233242 0.0041382  0.00710617 0.01181408 0.01902143 0.02967018
 0.0448546  0.06575114 0.09350522 0.12908115 0.17309226 0.22563892
 0.28618758 0.35352257 0.42579188 0.50065084 0.57548682 0.6476896
 0.71492132 0.77534001 0.82774169 0.87160443 0.90703867 0.93466525
 0.95545301 0.97054912 0.98112944 0.98828608 0.99295801 0.99590148
 0.99769125 0.99874155 0.999      0.999      0.999      0.999
 0.999     ]
cdf_over: [0.99766758 0.9958618  0.99289383 0.98818592 0.98097857 0.97032982
 0.9551454  0.93424886 0.90649478 0.87091885 0.82690774 0.77436108
 0.71381242 0.64647743 0.57420812 0.49934916 0.42451318 0.3523104
 0.28507868 0.22465999 0.17225831 0.12839557 0.09296133 0.06533475
 0.04454699 0.02945088 0.01887056 0.01171392 0.00704199 0.00409852
 0.00230875 0.00125845 0.001      0.001      0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [22 14 19 17 12 20 15 15 12 20 22 28 20  9 18 29 11 17 17  9 22 22 16 10
 15 26 10 19 15  5 10  5 10 18 11 14 12 18 18  4 11 12 18 25 10 15 17 17
 18 14 26 14  9 22  5]
player: myles turner
stat: pts
condition: TJ McConnell PG bench
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.08500385284423828

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (15.621188621254445, 5.342998068463312)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.83009453, -2.64293369, -2.45577286, -2.26861202, -2.08145118,
       -1.89429034, -1.7071295 , -1.51996866, -1.33280782, -1.14564698,
       -0.95848614, -0.77132531, -0.58416447, -0.39700363, -0.20984279,
       -0.02268195,  0.16447889,  0.35163973,  0.53880057,  0.7259614 ,
        0.91312224,  1.10028308,  1.28744392,  1.47460476,  1.6617656 ,
        1.84892644,  2.03608728,  2.22324811,  2.41040895,  2.59756979,
        2.78473063,  2.97189147,  3.15905231,  3.34621315,  3.53337399,
        3.72053482,  3.90769566])]

===Scipy _CDF===

x: [-2.83009453 -2.64293369 -2.45577286 -2.26861202 -2.08145118 -1.89429034
 -1.7071295  -1.51996866 -1.33280782 -1.14564698 -0.95848614 -0.77132531
 -0.58416447 -0.39700363 -0.20984279 -0.02268195  0.16447889  0.35163973
  0.53880057  0.7259614   0.91312224  1.10028308  1.28744392  1.47460476
  1.6617656   1.84892644  2.03608728  2.22324811  2.41040895  2.59756979
  2.78473063  2.97189147  3.15905231  3.34621315  3.53337399  3.72053482
  3.90769566]
args: ()

===Scipy _CDF _Single===

x: -2.8300945326007607
args: ()

Output: cdf single = x

cdf_single: 0.0023267126270383265

===Scipy _CDF _Single===

x: -2.6429336938382626
args: ()

Output: cdf single = x

cdf_single: 0.004109556458867831

===Scipy _CDF _Single===

x: -2.455772855075765
args: ()

Output: cdf single = x

cdf_single: 0.007029099231686288

===Scipy _CDF _Single===

x: -2.268612016313267
args: ()

Output: cdf single = x

cdf_single: 0.011645965116657882

===Scipy _CDF _Single===

x: -2.0814511775507687
args: ()

Output: cdf single = x

cdf_single: 0.018696314235689716

===Scipy _CDF _Single===

x: -1.894290338788271
args: ()

Output: cdf single = x

cdf_single: 0.029093241340898374

===Scipy _CDF _Single===

x: -1.707129500025773
args: ()

Output: cdf single = x

cdf_single: 0.04389899254023353

===Scipy _CDF _Single===

x: -1.519968661263275
args: ()

Output: cdf single = x

cdf_single: 0.0642594260837018

===Scipy _CDF _Single===

x: -1.3328078225007771
args: ()

Output: cdf single = x

cdf_single: 0.09129743899537003

===Scipy _CDF _Single===

x: -1.145646983738279
args: ()

Output: cdf single = x

cdf_single: 0.1259706242559578

===Scipy _CDF _Single===

x: -0.9584861449757811
args: ()

Output: cdf single = x

cdf_single: 0.16890883732509837

===Scipy _CDF _Single===

x: -0.7713253062132831
args: ()

Output: cdf single = x

cdf_single: 0.22025706808350362

===Scipy _CDF _Single===

x: -0.5841644674507852
args: ()

Output: cdf single = x

cdf_single: 0.27955483250008656

===Scipy _CDF _Single===

x: -0.3970036286882872
args: ()

Output: cdf single = x

cdf_single: 0.34568239236823906

===Scipy _CDF _Single===

x: -0.20984278992578925
args: ()

Output: cdf single = x

cdf_single: 0.41689518748455634

===Scipy _CDF _Single===

x: -0.022681951163291292
args: ()

Output: cdf single = x

cdf_single: 0.4909519865089009

===Scipy _CDF _Single===

x: 0.16447888759920634
args: ()

Output: cdf single = x

cdf_single: 0.565322917174231

===Scipy _CDF _Single===

x: 0.3516397263617043
args: ()

Output: cdf single = x

cdf_single: 0.6374457658634081

===Scipy _CDF _Single===

x: 0.5388005651242023
args: ()

Output: cdf single = x

cdf_single: 0.7049877631788705

===Scipy _CDF _Single===

x: 0.7259614038867003
args: ()

Output: cdf single = x

cdf_single: 0.7660687841275425

===Scipy _CDF _Single===

x: 0.9131222426491982
args: ()

Output: cdf single = x

cdf_single: 0.8194108733374859

===Scipy _CDF _Single===

x: 1.1002830814116962
args: ()

Output: cdf single = x

cdf_single: 0.864395599353925

===Scipy _CDF _Single===

x: 1.287443920174194
args: ()

Output: cdf single = x

cdf_single: 0.9010301978451165

===Scipy _CDF _Single===

x: 1.4746047589366922
args: ()

Output: cdf single = x

cdf_single: 0.9298405826359492

===Scipy _CDF _Single===

x: 1.66176559769919
args: ()

Output: cdf single = x

cdf_single: 0.951720108699961

===Scipy _CDF _Single===

x: 1.848926436461688
args: ()

Output: cdf single = x

cdf_single: 0.9677657821186636

===Scipy _CDF _Single===

x: 2.036087275224186
args: ()

Output: cdf single = x

cdf_single: 0.9791292038653421

===Scipy _CDF _Single===

x: 2.223248113986684
args: ()

Output: cdf single = x

cdf_single: 0.9869004629486813

===Scipy _CDF _Single===

x: 2.410408952749182
args: ()

Output: cdf single = x

cdf_single: 0.9920326760095959

===Scipy _CDF _Single===

x: 2.5975697915116798
args: ()

Output: cdf single = x

cdf_single: 0.9953056980560171

===Scipy _CDF _Single===

x: 2.784730630274178
args: ()

Output: cdf single = x

cdf_single: 0.997321389620818

===Scipy _CDF _Single===

x: 2.971891469036676
args: ()

Output: cdf single = x

cdf_single: 0.9985201435587306

===Scipy _CDF _Single===

x: 3.159052307799174
args: ()

Output: cdf single = x

cdf_single: 0.9992085846065224

===Scipy _CDF _Single===

x: 3.3462131465616722
args: ()

Output: cdf single = x

cdf_single: 0.9995903830244471

===Scipy _CDF _Single===

x: 3.53337398532417
args: ()

Output: cdf single = x

cdf_single: 0.9997948541841979

===Scipy _CDF _Single===

x: 3.720534824086668
args: ()

Output: cdf single = x

cdf_single: 0.99990059933729

===Scipy _CDF _Single===

x: 3.907695662849166
args: ()

Output: cdf single = x

cdf_single: 0.9999534097127802
_cdf = _cdfvec(x, *args) = [0.00232671 0.00410956 0.0070291  0.01164597 0.01869631 0.02909324
 0.04389899 0.06425943 0.09129744 0.12597062 0.16890884 0.22025707
 0.27955483 0.34568239 0.41689519 0.49095199 0.56532292 0.63744577
 0.70498776 0.76606878 0.81941087 0.8643956  0.9010302  0.92984058
 0.95172011 0.96776578 0.9791292  0.98690046 0.99203268 0.9953057
 0.99732139 0.99852014 0.99920858 0.99959038 0.99979485 0.9999006
 0.99995341]
prob_less_or_equal: [0.00232671 0.00410956 0.0070291  0.01164597 0.01869631 0.02909324
 0.04389899 0.06425943 0.09129744 0.12597062 0.16890884 0.22025707
 0.27955483 0.34568239 0.41689519 0.49095199 0.56532292 0.63744577
 0.70498776 0.76606878 0.81941087 0.8643956  0.9010302  0.92984058
 0.95172011 0.96776578 0.9791292  0.98690046 0.99203268 0.9953057
 0.99732139 0.99852014 0.999      0.999      0.999      0.999
 0.999     ]
cdf_over: [0.99767329 0.99589044 0.9929709  0.98835403 0.98130369 0.97090676
 0.95610101 0.93574057 0.90870256 0.87402938 0.83109116 0.77974293
 0.72044517 0.65431761 0.58310481 0.50904801 0.43467708 0.36255423
 0.29501224 0.23393122 0.18058913 0.1356044  0.0989698  0.07015942
 0.04827989 0.03223422 0.0208708  0.01309954 0.00796732 0.0046943
 0.00267861 0.00147986 0.001      0.001      0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [14 19 17 12 20 28 18 11 17 17  9 22 16 10 15 26 10 19 10 10 18 11 14 18
 18  4 11 18 25 10 15 17 26  5]
player: myles turner
stat: pts
condition: 2 before
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.07061076164245605

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (15.591237533369352, 5.332753401365351)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.82991494, -2.64239455, -2.45487416, -2.26735377, -2.07983338,
       -1.89231299, -1.7047926 , -1.51727221, -1.32975182, -1.14223143,
       -0.95471104, -0.76719065, -0.57967026, -0.39214987, -0.20462948,
       -0.01710909,  0.17041131,  0.3579317 ,  0.54545209,  0.73297248,
        0.92049287,  1.10801326,  1.29553365,  1.48305404,  1.67057443,
        1.85809482,  2.04561521,  2.2331356 ,  2.42065599,  2.60817638,
        2.79569677,  2.98321716,  3.17073755,  3.35825794,  3.54577833,
        3.73329872,  3.92081911])]

===Scipy _CDF===

x: [-2.82991494 -2.64239455 -2.45487416 -2.26735377 -2.07983338 -1.89231299
 -1.7047926  -1.51727221 -1.32975182 -1.14223143 -0.95471104 -0.76719065
 -0.57967026 -0.39214987 -0.20462948 -0.01710909  0.17041131  0.3579317
  0.54545209  0.73297248  0.92049287  1.10801326  1.29553365  1.48305404
  1.67057443  1.85809482  2.04561521  2.2331356   2.42065599  2.60817638
  2.79569677  2.98321716  3.17073755  3.35825794  3.54577833  3.73329872
  3.92081911]
args: ()

===Scipy _CDF _Single===

x: -2.8299149421583087
args: ()

Output: cdf single = x

cdf_single: 0.0023280190293185855

===Scipy _CDF _Single===

x: -2.642394551707858
args: ()

Output: cdf single = x

cdf_single: 0.004116104748792073

===Scipy _CDF _Single===

x: -2.4548741612574076
args: ()

Output: cdf single = x

cdf_single: 0.007046695683273498

===Scipy _CDF _Single===

x: -2.267353770806957
args: ()

Output: cdf single = x

cdf_single: 0.011684311572662535

===Scipy _CDF _Single===

x: -2.079833380356506
args: ()

Output: cdf single = x

cdf_single: 0.018770409115359783

===Scipy _CDF _Single===

x: -1.8923129899060551
args: ()

Output: cdf single = x

cdf_single: 0.029224645606713322

===Scipy _CDF _Single===

x: -1.7047925994556044
args: ()

Output: cdf single = x

cdf_single: 0.04411655612195608

===Scipy _CDF _Single===

x: -1.5172722090051536
args: ()

Output: cdf single = x

cdf_single: 0.06459898587899224

===Scipy _CDF _Single===

x: -1.3297518185547026
args: ()

Output: cdf single = x

cdf_single: 0.09180002773900635

===Scipy _CDF _Single===

x: -1.1422314281042518
args: ()

Output: cdf single = x

cdf_single: 0.12667891780574617

===Scipy _CDF _Single===

x: -0.954711037653801
args: ()

Output: cdf single = x

cdf_single: 0.16986192326213118

===Scipy _CDF _Single===

x: -0.7671906472033503
args: ()

Output: cdf single = x

cdf_single: 0.2214840864317541

===Scipy _CDF _Single===

x: -0.5796702567528995
args: ()

Output: cdf single = x

cdf_single: 0.28106850233867664

===Scipy _CDF _Single===

x: -0.39214986630244875
args: ()

Output: cdf single = x

cdf_single: 0.34747374212013404

===Scipy _CDF _Single===

x: -0.20462947585199795
args: ()

Output: cdf single = x

cdf_single: 0.41893081213994143

===Scipy _CDF _Single===

x: -0.01710908540154719
args: ()

Output: cdf single = x

cdf_single: 0.49317479543584186

===Scipy _CDF _Single===

x: 0.17041130504890323
args: ()

Output: cdf single = x

cdf_single: 0.5676566589823177

===Scipy _CDF _Single===

x: 0.357931695499354
args: ()

Output: cdf single = x

cdf_single: 0.6398027847920019

===Scipy _CDF _Single===

x: 0.5454520859498048
args: ()

Output: cdf single = x

cdf_single: 0.7072786871403496

===Scipy _CDF _Single===

x: 0.7329724764002555
args: ()

Output: cdf single = x

cdf_single: 0.7682123916912434

===Scipy _CDF _Single===

x: 0.9204928668507063
args: ()

Output: cdf single = x

cdf_single: 0.8213423705445637

===Scipy _CDF _Single===

x: 1.108013257301157
args: ()

Output: cdf single = x

cdf_single: 0.8660719547654233

===Scipy _CDF _Single===

x: 1.2955336477516077
args: ()

Output: cdf single = x

cdf_single: 0.9024318991338687

===Scipy _CDF _Single===

x: 1.4830540382020585
args: ()

Output: cdf single = x

cdf_single: 0.9309699729545826

===Scipy _CDF _Single===

x: 1.6705744286525093
args: ()

Output: cdf single = x

cdf_single: 0.9525971165712027

===Scipy _CDF _Single===

x: 1.85809481910296
args: ()

Output: cdf single = x

cdf_single: 0.9684222247787212

===Scipy _CDF _Single===

x: 2.045615209553411
args: ()

Output: cdf single = x

cdf_single: 0.979602878073411

===Scipy _CDF _Single===

x: 2.2331356000038616
args: ()

Output: cdf single = x

cdf_single: 0.9872299982022263

===Scipy _CDF _Single===

x: 2.4206559904543123
args: ()

Output: cdf single = x

cdf_single: 0.9922537346476571

===Scipy _CDF _Single===

x: 2.608176380904763
args: ()

Output: cdf single = x

cdf_single: 0.9954486981250283

===Scipy _CDF _Single===

x: 2.795696771355214
args: ()

Output: cdf single = x

cdf_single: 0.9974106017438112

===Scipy _CDF _Single===

x: 2.9832171618056647
args: ()

Output: cdf single = x

cdf_single: 0.9985738223392958

===Scipy _CDF _Single===

x: 3.1707375522561163
args: ()

Output: cdf single = x

cdf_single: 0.999239737744342

===Scipy _CDF _Single===

x: 3.358257942706567
args: ()

Output: cdf single = x

cdf_single: 0.9996078230828455

===Scipy _CDF _Single===

x: 3.545778333157018
args: ()

Output: cdf single = x

cdf_single: 0.9998042723278544

===Scipy _CDF _Single===

x: 3.7332987236074686
args: ()

Output: cdf single = x

cdf_single: 0.9999055058858652

===Scipy _CDF _Single===

x: 3.9208191140579194
args: ()

Output: cdf single = x

cdf_single: 0.9999558757558269
_cdf = _cdfvec(x, *args) = [0.00232802 0.0041161  0.0070467  0.01168431 0.01877041 0.02922465
 0.04411656 0.06459899 0.09180003 0.12667892 0.16986192 0.22148409
 0.2810685  0.34747374 0.41893081 0.4931748  0.56765666 0.63980278
 0.70727869 0.76821239 0.82134237 0.86607195 0.9024319  0.93096997
 0.95259712 0.96842222 0.97960288 0.98723    0.99225373 0.9954487
 0.9974106  0.99857382 0.99923974 0.99960782 0.99980427 0.99990551
 0.99995588]
prob_less_or_equal: [0.00232802 0.0041161  0.0070467  0.01168431 0.01877041 0.02922465
 0.04411656 0.06459899 0.09180003 0.12667892 0.16986192 0.22148409
 0.2810685  0.34747374 0.41893081 0.4931748  0.56765666 0.63980278
 0.70727869 0.76821239 0.82134237 0.86607195 0.9024319  0.93096997
 0.95259712 0.96842222 0.97960288 0.98723    0.99225373 0.9954487
 0.9974106  0.99857382 0.999      0.999      0.999      0.999
 0.999     ]
cdf_over: [0.99767198 0.9958839  0.9929533  0.98831569 0.98122959 0.97077535
 0.95588344 0.93540101 0.90819997 0.87332108 0.83013808 0.77851591
 0.7189315  0.65252626 0.58106919 0.5068252  0.43234334 0.36019722
 0.29272131 0.23178761 0.17865763 0.13392805 0.0975681  0.06903003
 0.04740288 0.03157778 0.02039712 0.01277    0.00774627 0.0045513
 0.0025894  0.00142618 0.001      0.001      0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [17 20 15 28 12  9 29 11 17 17 21 22 16 15 26 10 19  5 18 11 14 12 18 25
 10 15 18 14 26 14]
player: myles turner
stat: pts
condition: home
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.1102139949798584

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (16.8032337840189, 5.747298729623184)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.83667781, -2.66268303, -2.48868824, -2.31469346, -2.14069868,
       -1.96670389, -1.79270911, -1.61871433, -1.44471954, -1.27072476,
       -1.09672997, -0.92273519, -0.74874041, -0.57474562, -0.40075084,
       -0.22675605, -0.05276127,  0.12123351,  0.2952283 ,  0.46922308,
        0.64321786,  0.81721265,  0.99120743,  1.16520222,  1.339197  ,
        1.51319178,  1.68718657,  1.86118135,  2.03517614,  2.20917092,
        2.3831657 ,  2.55716049,  2.73115527,  2.90515005,  3.07914484,
        3.25313962,  3.42713441])]

===Scipy _CDF===

x: [-2.83667781 -2.66268303 -2.48868824 -2.31469346 -2.14069868 -1.96670389
 -1.79270911 -1.61871433 -1.44471954 -1.27072476 -1.09672997 -0.92273519
 -0.74874041 -0.57474562 -0.40075084 -0.22675605 -0.05276127  0.12123351
  0.2952283   0.46922308  0.64321786  0.81721265  0.99120743  1.16520222
  1.339197    1.51319178  1.68718657  1.86118135  2.03517614  2.20917092
  2.3831657   2.55716049  2.73115527  2.90515005  3.07914484  3.25313962
  3.42713441]
args: ()

===Scipy _CDF _Single===

x: -2.8366778117844254
args: ()

Output: cdf single = x

cdf_single: 0.002279279360221199

===Scipy _CDF _Single===

x: -2.662683027966121
args: ()

Output: cdf single = x

cdf_single: 0.0038760199232306908

===Scipy _CDF _Single===

x: -2.488688244147817
args: ()

Output: cdf single = x

cdf_single: 0.006410767038061534

===Scipy _CDF _Single===

x: -2.314693460329513
args: ()

Output: cdf single = x

cdf_single: 0.0103148569614426

===Scipy _CDF _Single===

x: -2.140698676511209
args: ()

Output: cdf single = x

cdf_single: 0.01614917266078746

===Scipy _CDF _Single===

x: -1.9667038926929046
args: ()

Output: cdf single = x

cdf_single: 0.024608678931768265

===Scipy _CDF _Single===

x: -1.7927091088746003
args: ()

Output: cdf single = x

cdf_single: 0.03650972463351134

===Scipy _CDF _Single===

x: -1.6187143250562963
args: ()

Output: cdf single = x

cdf_single: 0.052754371621357585

===Scipy _CDF _Single===

x: -1.4447195412379918
args: ()

Output: cdf single = x

cdf_single: 0.07426833937031306

===Scipy _CDF _Single===

x: -1.2707247574196876
args: ()

Output: cdf single = x

cdf_single: 0.1019132923953251

===Scipy _CDF _Single===

x: -1.0967299736013836
args: ()

Output: cdf single = x

cdf_single: 0.13637972481087965

===Scipy _CDF _Single===

x: -0.9227351897830793
args: ()

Output: cdf single = x

cdf_single: 0.17807261131412735

===Scipy _CDF _Single===

x: -0.7487404059647752
args: ()

Output: cdf single = x

cdf_single: 0.22700684241291533

===Scipy _CDF _Single===

x: -0.5747456221464711
args: ()

Output: cdf single = x

cdf_single: 0.28273167391982446

===Scipy _CDF _Single===

x: -0.4007508383281669
args: ()

Output: cdf single = x

cdf_single: 0.3443017885980971

===Scipy _CDF _Single===

x: -0.2267560545098627
args: ()

Output: cdf single = x

cdf_single: 0.4103067184994055

===Scipy _CDF _Single===

x: -0.05276127069155886
args: ()

Output: cdf single = x

cdf_single: 0.4789610600034255

===Scipy _CDF _Single===

x: 0.1212335131267453
args: ()

Output: cdf single = x

cdf_single: 0.5482469598795146

===Scipy _CDF _Single===

x: 0.2952282969450495
args: ()

Output: cdf single = x

cdf_single: 0.6160902564951055

===Scipy _CDF _Single===

x: 0.4692230807633536
args: ()

Output: cdf single = x

cdf_single: 0.6805449053409415

===Scipy _CDF _Single===

x: 0.6432178645816578
args: ()

Output: cdf single = x

cdf_single: 0.7399586285000357

===Scipy _CDF _Single===

x: 0.8172126483999619
args: ()

Output: cdf single = x

cdf_single: 0.7930965422407779

===Scipy _CDF _Single===

x: 0.9912074322182661
args: ()

Output: cdf single = x

cdf_single: 0.8392078489053416

===Scipy _CDF _Single===

x: 1.1652022160365703
args: ()

Output: cdf single = x

cdf_single: 0.8780314255796071

===Scipy _CDF _Single===

x: 1.3391969998548745
args: ()

Output: cdf single = x

cdf_single: 0.9097467255640652

===Scipy _CDF _Single===

x: 1.5131917836731785
args: ()

Output: cdf single = x

cdf_single: 0.9348845246647776

===Scipy _CDF _Single===

x: 1.6871865674914828
args: ()

Output: cdf single = x

cdf_single: 0.954216258277613

===Scipy _CDF _Single===

x: 1.8611813513097868
args: ()

Output: cdf single = x

cdf_single: 0.9686407145095928

===Scipy _CDF _Single===

x: 2.0351761351280913
args: ()

Output: cdf single = x

cdf_single: 0.9790834232834904

===Scipy _CDF _Single===

x: 2.2091709189463953
args: ()

Output: cdf single = x

cdf_single: 0.9864186225926549

===Scipy _CDF _Single===

x: 2.3831657027646993
args: ()

Output: cdf single = x

cdf_single: 0.991417766881918

===Scipy _CDF _Single===

x: 2.5571604865830033
args: ()

Output: cdf single = x

cdf_single: 0.9947234741125998

===Scipy _CDF _Single===

x: 2.7311552704013082
args: ()

Output: cdf single = x

cdf_single: 0.9968443635314345

===Scipy _CDF _Single===

x: 2.9051500542196123
args: ()

Output: cdf single = x

cdf_single: 0.9981646146406717

===Scipy _CDF _Single===

x: 3.0791448380379167
args: ()

Output: cdf single = x

cdf_single: 0.9989620213544832

===Scipy _CDF _Single===

x: 3.2531396218562207
args: ()

Output: cdf single = x

cdf_single: 0.999429312999841

===Scipy _CDF _Single===

x: 3.4271344056745248
args: ()

Output: cdf single = x

cdf_single: 0.999695006465731
_cdf = _cdfvec(x, *args) = [0.00227928 0.00387602 0.00641077 0.01031486 0.01614917 0.02460868
 0.03650972 0.05275437 0.07426834 0.10191329 0.13637972 0.17807261
 0.22700684 0.28273167 0.34430179 0.41030672 0.47896106 0.54824696
 0.61609026 0.68054491 0.73995863 0.79309654 0.83920785 0.87803143
 0.90974673 0.93488452 0.95421626 0.96864071 0.97908342 0.98641862
 0.99141777 0.99472347 0.99684436 0.99816461 0.99896202 0.99942931
 0.99969501]
prob_less_or_equal: [0.00227928 0.00387602 0.00641077 0.01031486 0.01614917 0.02460868
 0.03650972 0.05275437 0.07426834 0.10191329 0.13637972 0.17807261
 0.22700684 0.28273167 0.34430179 0.41030672 0.47896106 0.54824696
 0.61609026 0.68054491 0.73995863 0.79309654 0.83920785 0.87803143
 0.90974673 0.93488452 0.95421626 0.96864071 0.97908342 0.98641862
 0.99141777 0.99472347 0.99684436 0.99816461 0.99896202 0.999
 0.999     ]
cdf_over: [0.99772072 0.99612398 0.99358923 0.98968514 0.98385083 0.97539132
 0.96349028 0.94724563 0.92573166 0.89808671 0.86362028 0.82192739
 0.77299316 0.71726833 0.65569821 0.58969328 0.52103894 0.45175304
 0.38390974 0.31945509 0.26004137 0.20690346 0.16079215 0.12196857
 0.09025327 0.06511548 0.04578374 0.03135929 0.02091658 0.01358138
 0.00858223 0.00527653 0.00315564 0.00183539 0.00103798 0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [17 20 15 28 12  9 29 11 17 17 21 22 16 15 26 10 19  5 18 11 14 12 18 25
 10 15 18 14 26 14]
player: myles turner
stat: pts
condition: Indianapolis IN
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.07826471328735352

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (16.803233235276874, 5.747299673326292)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.83667725, -2.6626825 , -2.48868774, -2.31469298, -2.14069823,
       -1.96670347, -1.79270872, -1.61871396, -1.44471921, -1.27072445,
       -1.0967297 , -0.92273494, -0.74874019, -0.57474543, -0.40075068,
       -0.22675592, -0.05276117,  0.12123359,  0.29522834,  0.4692231 ,
        0.64321785,  0.81721261,  0.99120736,  1.16520212,  1.33919688,
        1.51319163,  1.68718639,  1.86118114,  2.0351759 ,  2.20917065,
        2.38316541,  2.55716016,  2.73115492,  2.90514967,  3.07914443,
        3.25313918,  3.42713394])]

===Scipy _CDF===

x: [-2.83667725 -2.6626825  -2.48868774 -2.31469298 -2.14069823 -1.96670347
 -1.79270872 -1.61871396 -1.44471921 -1.27072445 -1.0967297  -0.92273494
 -0.74874019 -0.57474543 -0.40075068 -0.22675592 -0.05276117  0.12123359
  0.29522834  0.4692231   0.64321785  0.81721261  0.99120736  1.16520212
  1.33919688  1.51319163  1.68718639  1.86118114  2.0351759   2.20917065
  2.38316541  2.55716016  2.73115492  2.90514967  3.07914443  3.25313918
  3.42713394]
args: ()

===Scipy _CDF _Single===

x: -2.8366772505254207
args: ()

Output: cdf single = x

cdf_single: 0.002279283366545716

===Scipy _CDF _Single===

x: -2.662682495276954
args: ()

Output: cdf single = x

cdf_single: 0.003876026058535741

===Scipy _CDF _Single===

x: -2.4886877400284875
args: ()

Output: cdf single = x

cdf_single: 0.006410776127294394

===Scipy _CDF _Single===

x: -2.314692984780021
args: ()

Output: cdf single = x

cdf_single: 0.010314869983310231

===Scipy _CDF _Single===

x: -2.140698229531554
args: ()

Output: cdf single = x

cdf_single: 0.016149190695161603

===Scipy _CDF _Single===

x: -1.9667034742830878
args: ()

Output: cdf single = x

cdf_single: 0.024608703064308634

===Scipy _CDF _Single===

x: -1.7927087190346214
args: ()

Output: cdf single = x

cdf_single: 0.03650975581720086

===Scipy _CDF _Single===

x: -1.6187139637861547
args: ()

Output: cdf single = x

cdf_single: 0.05275441050484682

===Scipy _CDF _Single===

x: -1.4447192085376879
args: ()

Output: cdf single = x

cdf_single: 0.0742683861148096

===Scipy _CDF _Single===

x: -1.2707244532892212
args: ()

Output: cdf single = x

cdf_single: 0.10191334651229052

===Scipy _CDF _Single===

x: -1.0967296980407548
args: ()

Output: cdf single = x

cdf_single: 0.1363797850583733

===Scipy _CDF _Single===

x: -0.9227349427922882
args: ()

Output: cdf single = x

cdf_single: 0.17807267568701327

===Scipy _CDF _Single===

x: -0.7487401875438217
args: ()

Output: cdf single = x

cdf_single: 0.22700690824976005

===Scipy _CDF _Single===

x: -0.5747454322953551
args: ()

Output: cdf single = x

cdf_single: 0.28273173812831287

===Scipy _CDF _Single===

x: -0.4007506770468886
args: ()

Output: cdf single = x

cdf_single: 0.3443018479753255

===Scipy _CDF _Single===

x: -0.22675592179842205
args: ()

Output: cdf single = x

cdf_single: 0.4103067700998083

===Scipy _CDF _Single===

x: -0.0527611665499558
args: ()

Output: cdf single = x

cdf_single: 0.4789611014921269

===Scipy _CDF _Single===

x: 0.12123358869851074
args: ()

Output: cdf single = x

cdf_single: 0.548246989807542

===Scipy _CDF _Single===

x: 0.2952283439469773
args: ()

Output: cdf single = x

cdf_single: 0.6160902744465432

===Scipy _CDF _Single===

x: 0.46922309919544386
args: ()

Output: cdf single = x

cdf_single: 0.6805449119277536

===Scipy _CDF _Single===

x: 0.6432178544439104
args: ()

Output: cdf single = x

cdf_single: 0.7399586252114332

===Scipy _CDF _Single===

x: 0.817212609692377
args: ()

Output: cdf single = x

cdf_single: 0.7930965311825053

===Scipy _CDF _Single===

x: 0.9912073649408435
args: ()

Output: cdf single = x

cdf_single: 0.8392078324830423

===Scipy _CDF _Single===

x: 1.1652021201893101
args: ()

Output: cdf single = x

cdf_single: 0.878031406185499

===Scipy _CDF _Single===

x: 1.3391968754377765
args: ()

Output: cdf single = x

cdf_single: 0.9097467053176681

===Scipy _CDF _Single===

x: 1.5131916306862432
args: ()

Output: cdf single = x

cdf_single: 0.9348845052401946

===Scipy _CDF _Single===

x: 1.6871863859347096
args: ()

Output: cdf single = x

cdf_single: 0.954216240827768

===Scipy _CDF _Single===

x: 1.8611811411831762
args: ()

Output: cdf single = x

cdf_single: 0.9686406996777869

===Scipy _CDF _Single===

x: 2.035175896431643
args: ()

Output: cdf single = x

cdf_single: 0.9790834112789683

===Scipy _CDF _Single===

x: 2.2091706516801093
args: ()

Output: cdf single = x

cdf_single: 0.9864186133012556

===Scipy _CDF _Single===

x: 2.3831654069285757
args: ()

Output: cdf single = x

cdf_single: 0.9914177599846313

===Scipy _CDF _Single===

x: 2.5571601621770426
args: ()

Output: cdf single = x

cdf_single: 0.9947234691915459

===Scipy _CDF _Single===

x: 2.7311549174255094
args: ()

Output: cdf single = x

cdf_single: 0.996844360151498

===Scipy _CDF _Single===

x: 2.9051496726739763
args: ()

Output: cdf single = x

cdf_single: 0.9981646124032055

===Scipy _CDF _Single===

x: 3.0791444279224427
args: ()

Output: cdf single = x

cdf_single: 0.998962019925541

===Scipy _CDF _Single===

x: 3.253139183170909
args: ()

Output: cdf single = x

cdf_single: 0.9994293121187674

===Scipy _CDF _Single===

x: 3.427133938419376
args: ()

Output: cdf single = x

cdf_single: 0.9996950059409044
_cdf = _cdfvec(x, *args) = [0.00227928 0.00387603 0.00641078 0.01031487 0.01614919 0.0246087
 0.03650976 0.05275441 0.07426839 0.10191335 0.13637979 0.17807268
 0.22700691 0.28273174 0.34430185 0.41030677 0.4789611  0.54824699
 0.61609027 0.68054491 0.73995863 0.79309653 0.83920783 0.87803141
 0.90974671 0.93488451 0.95421624 0.9686407  0.97908341 0.98641861
 0.99141776 0.99472347 0.99684436 0.99816461 0.99896202 0.99942931
 0.99969501]
prob_less_or_equal: [0.00227928 0.00387603 0.00641078 0.01031487 0.01614919 0.0246087
 0.03650976 0.05275441 0.07426839 0.10191335 0.13637979 0.17807268
 0.22700691 0.28273174 0.34430185 0.41030677 0.4789611  0.54824699
 0.61609027 0.68054491 0.73995863 0.79309653 0.83920783 0.87803141
 0.90974671 0.93488451 0.95421624 0.9686407  0.97908341 0.98641861
 0.99141776 0.99472347 0.99684436 0.99816461 0.99896202 0.999
 0.999     ]
cdf_over: [0.99772072 0.99612397 0.99358922 0.98968513 0.98385081 0.9753913
 0.96349024 0.94724559 0.92573161 0.89808665 0.86362021 0.82192732
 0.77299309 0.71726826 0.65569815 0.58969323 0.5210389  0.45175301
 0.38390973 0.31945509 0.26004137 0.20690347 0.16079217 0.12196859
 0.09025329 0.06511549 0.04578376 0.0313593  0.02091659 0.01358139
 0.00858224 0.00527653 0.00315564 0.00183539 0.00103798 0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [20 17]
player: myles turner
stat: pts
condition: hou
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.07461714744567871

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (18.58190050282349, 6.379507332072336)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.83437271, -2.6776208 , -2.52086888, -2.36411696, -2.20736505,
       -2.05061313, -1.89386121, -1.7371093 , -1.58035738, -1.42360547,
       -1.26685355, -1.11010163, -0.95334972, -0.7965978 , -0.63984588,
       -0.48309397, -0.32634205, -0.16959013, -0.01283822,  0.1439137 ,
        0.30066562,  0.45741753,  0.61416945,  0.77092136,  0.92767328,
        1.0844252 ,  1.24117711,  1.39792903,  1.55468095,  1.71143286,
        1.86818478,  2.0249367 ,  2.18168861,  2.33844053,  2.49519244,
        2.65194436,  2.80869628])]

===Scipy _CDF===

x: [-2.83437271 -2.6776208  -2.52086888 -2.36411696 -2.20736505 -2.05061313
 -1.89386121 -1.7371093  -1.58035738 -1.42360547 -1.26685355 -1.11010163
 -0.95334972 -0.7965978  -0.63984588 -0.48309397 -0.32634205 -0.16959013
 -0.01283822  0.1439137   0.30066562  0.45741753  0.61416945  0.77092136
  0.92767328  1.0844252   1.24117711  1.39792903  1.55468095  1.71143286
  1.86818478  2.0249367   2.18168861  2.33844053  2.49519244  2.65194436
  2.80869628]
args: ()

===Scipy _CDF _Single===

x: -2.8343727127514278
args: ()

Output: cdf single = x

cdf_single: 0.0022957872789363784

===Scipy _CDF _Single===

x: -2.67762079634989
args: ()

Output: cdf single = x

cdf_single: 0.003707355527869799

===Scipy _CDF _Single===

x: -2.5208688799483525
args: ()

Output: cdf single = x

cdf_single: 0.005853273246496486

===Scipy _CDF _Single===

x: -2.3641169635468144
args: ()

Output: cdf single = x

cdf_single: 0.009036552817752733

===Scipy _CDF _Single===

x: -2.207365047145277
args: ()

Output: cdf single = x

cdf_single: 0.013644283121051535

===Scipy _CDF _Single===

x: -2.050613130743739
args: ()

Output: cdf single = x

cdf_single: 0.02015231831396849

===Scipy _CDF _Single===

x: -1.8938612143422013
args: ()

Output: cdf single = x

cdf_single: 0.029121716922209193

===Scipy _CDF _Single===

x: -1.7371092979406635
args: ()

Output: cdf single = x

cdf_single: 0.04118394024254932

===Scipy _CDF _Single===

x: -1.5803573815391256
args: ()

Output: cdf single = x

cdf_single: 0.05701252288823518

===Scipy _CDF _Single===

x: -1.4236054651375878
args: ()

Output: cdf single = x

cdf_single: 0.07728035646599311

===Scipy _CDF _Single===

x: -1.26685354873605
args: ()

Output: cdf single = x

cdf_single: 0.10260383035720576

===Scipy _CDF _Single===

x: -1.1101016323345123
args: ()

Output: cdf single = x

cdf_single: 0.13347761696191812

===Scipy _CDF _Single===

x: -0.9533497159329745
args: ()

Output: cdf single = x

cdf_single: 0.1702064548713937

===Scipy _CDF _Single===

x: -0.7965977995314367
args: ()

Output: cdf single = x

cdf_single: 0.2128423279005819

===Scipy _CDF _Single===

x: -0.639845883129899
args: ()

Output: cdf single = x

cdf_single: 0.26113639974215536

===Scipy _CDF _Single===

x: -0.48309396672836125
args: ()

Output: cdf single = x

cdf_single: 0.31451450886254384

===Scipy _CDF _Single===

x: -0.3263420503268238
args: ()

Output: cdf single = x

cdf_single: 0.37208278827927926

===Scipy _CDF _Single===

x: -0.16959013392528602
args: ()

Output: cdf single = x

cdf_single: 0.43266624106944873

===Scipy _CDF _Single===

x: -0.01283821752374825
args: ()

Output: cdf single = x

cdf_single: 0.4948784329144747

===Scipy _CDF _Single===

x: 0.14391369887778951
args: ()

Output: cdf single = x

cdf_single: 0.5572156909210783

===Scipy _CDF _Single===

x: 0.3006656152793273
args: ()

Output: cdf single = x

cdf_single: 0.6181652543834967

===Scipy _CDF _Single===

x: 0.457417531680865
args: ()

Output: cdf single = x

cdf_single: 0.6763145172532408

===Scipy _CDF _Single===

x: 0.6141694480824028
args: ()

Output: cdf single = x

cdf_single: 0.7304483199544805

===Scipy _CDF _Single===

x: 0.7709213644839406
args: ()

Output: cdf single = x

cdf_single: 0.7796232285785478

===Scipy _CDF _Single===

x: 0.9276732808854783
args: ()

Output: cdf single = x

cdf_single: 0.8232114638234945

===Scipy _CDF _Single===

x: 1.084425197287016
args: ()

Output: cdf single = x

cdf_single: 0.860911841666934

===Scipy _CDF _Single===

x: 1.2411771136885539
args: ()

Output: cdf single = x

cdf_single: 0.8927298362833593

===Scipy _CDF _Single===

x: 1.3979290300900915
args: ()

Output: cdf single = x

cdf_single: 0.9189328099595874

===Scipy _CDF _Single===

x: 1.5546809464916294
args: ()

Output: cdf single = x

cdf_single: 0.9399889626880761

===Scipy _CDF _Single===

x: 1.711432862893167
args: ()

Output: cdf single = x

cdf_single: 0.9564993825220751

===Scipy _CDF _Single===

x: 1.8681847792947048
args: ()

Output: cdf single = x

cdf_single: 0.9691318401993456

===Scipy _CDF _Single===

x: 2.0249366956962427
args: ()

Output: cdf single = x

cdf_single: 0.978563067523833

===Scipy _CDF _Single===

x: 2.1816886120977808
args: ()

Output: cdf single = x

cdf_single: 0.9854337390212665

===Scipy _CDF _Single===

x: 2.338440528499319
args: ()

Output: cdf single = x

cdf_single: 0.9903177963098295

===Scipy _CDF _Single===

x: 2.4951924449008565
args: ()

Output: cdf single = x

cdf_single: 0.9937055582909933

===Scipy _CDF _Single===

x: 2.651944361302394
args: ()

Output: cdf single = x

cdf_single: 0.9959985135795446

===Scipy _CDF _Single===

x: 2.8086962777039317
args: ()

Output: cdf single = x

cdf_single: 0.9975128724924885
_cdf = _cdfvec(x, *args) = [0.00229579 0.00370736 0.00585327 0.00903655 0.01364428 0.02015232
 0.02912172 0.04118394 0.05701252 0.07728036 0.10260383 0.13347762
 0.17020645 0.21284233 0.2611364  0.31451451 0.37208279 0.43266624
 0.49487843 0.55721569 0.61816525 0.67631452 0.73044832 0.77962323
 0.82321146 0.86091184 0.89272984 0.91893281 0.93998896 0.95649938
 0.96913184 0.97856307 0.98543374 0.9903178  0.99370556 0.99599851
 0.99751287]
prob_less_or_equal: [0.00229579 0.00370736 0.00585327 0.00903655 0.01364428 0.02015232
 0.02912172 0.04118394 0.05701252 0.07728036 0.10260383 0.13347762
 0.17020645 0.21284233 0.2611364  0.31451451 0.37208279 0.43266624
 0.49487843 0.55721569 0.61816525 0.67631452 0.73044832 0.77962323
 0.82321146 0.86091184 0.89272984 0.91893281 0.93998896 0.95649938
 0.96913184 0.97856307 0.98543374 0.9903178  0.99370556 0.99599851
 0.99751287]
cdf_over: [0.99770421 0.99629264 0.99414673 0.99096345 0.98635572 0.97984768
 0.97087828 0.95881606 0.94298748 0.92271964 0.89739617 0.86652238
 0.82979355 0.78715767 0.7388636  0.68548549 0.62791721 0.56733376
 0.50512157 0.44278431 0.38183475 0.32368548 0.26955168 0.22037677
 0.17678854 0.13908816 0.10727016 0.08106719 0.06001104 0.04350062
 0.03086816 0.02143693 0.01456626 0.0096822  0.00629444 0.00400149
 0.00248713]

===Test Distribute All Probs===

cond_data: [20 15 15 12 20 22 28 12 20  9 18 29 11 17 15 17 17 21 12 17 22 16 10 15
 26 10 19 15 10  5 10 18 11 14 12 18 22 18  4 11 12 18 25 10 15 17 17 18
 14 26 14  9 22  5]
player: myles turner
stat: pts
condition: B Mathurin SG bench
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.12586092948913574

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (15.836382394772935, 5.416602013869942)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.83136611, -2.64674853, -2.46213094, -2.27751335, -2.09289576,
       -1.90827817, -1.72366058, -1.539043  , -1.35442541, -1.16980782,
       -0.98519023, -0.80057264, -0.61595506, -0.43133747, -0.24671988,
       -0.06210229,  0.1225153 ,  0.30713289,  0.49175047,  0.67636806,
        0.86098565,  1.04560324,  1.23022083,  1.41483841,  1.599456  ,
        1.78407359,  1.96869118,  2.15330877,  2.33792636,  2.52254394,
        2.70716153,  2.89177912,  3.07639671,  3.2610143 ,  3.44563188,
        3.63024947,  3.81486706])]

===Scipy _CDF===

x: [-2.83136611 -2.64674853 -2.46213094 -2.27751335 -2.09289576 -1.90827817
 -1.72366058 -1.539043   -1.35442541 -1.16980782 -0.98519023 -0.80057264
 -0.61595506 -0.43133747 -0.24671988 -0.06210229  0.1225153   0.30713289
  0.49175047  0.67636806  0.86098565  1.04560324  1.23022083  1.41483841
  1.599456    1.78407359  1.96869118  2.15330877  2.33792636  2.52254394
  2.70716153  2.89177912  3.07639671  3.2610143   3.44563188  3.63024947
  3.81486706]
args: ()

===Scipy _CDF _Single===

x: -2.8313661139404465
args: ()

Output: cdf single = x

cdf_single: 0.002317481682175102

===Scipy _CDF _Single===

x: -2.6467485257478187
args: ()

Output: cdf single = x

cdf_single: 0.004063488174599003

===Scipy _CDF _Single===

x: -2.4621309375551905
args: ()

Output: cdf single = x

cdf_single: 0.006905711724665548

===Scipy _CDF _Single===

x: -2.2775133493625628
args: ()

Output: cdf single = x

cdf_single: 0.011377794188643413

===Scipy _CDF _Single===

x: -2.092895761169935
args: ()

Output: cdf single = x

cdf_single: 0.018179230364280638

===Scipy _CDF _Single===

x: -1.908278172977307
args: ()

Output: cdf single = x

cdf_single: 0.02817763627795889

===Scipy _CDF _Single===

x: -1.723660584784679
args: ()

Output: cdf single = x

cdf_single: 0.04238456721587814

===Scipy _CDF _Single===

x: -1.5390429965920511
args: ()

Output: cdf single = x

cdf_single: 0.06189689990362575

===Scipy _CDF _Single===

x: -1.3544254083994232
args: ()

Output: cdf single = x

cdf_single: 0.08780034796912274

===Scipy _CDF _Single===

x: -1.1698078202067952
args: ()

Output: cdf single = x

cdf_single: 0.121039157945528

===Scipy _CDF _Single===

x: -0.9851902320141673
args: ()

Output: cdf single = x

cdf_single: 0.1622653188741701

===Scipy _CDF _Single===

x: -0.8005726438215394
args: ()

Output: cdf single = x

cdf_single: 0.2116895465071884

===Scipy _CDF _Single===

x: -0.6159550556289115
args: ()

Output: cdf single = x

cdf_single: 0.2689620916915566

===Scipy _CDF _Single===

x: -0.43133746743628354
args: ()

Output: cdf single = x

cdf_single: 0.3331115054998176

===Scipy _CDF _Single===

x: -0.24671987924365565
args: ()

Output: cdf single = x

cdf_single: 0.40256251032882384

===Scipy _CDF _Single===

x: -0.06210229105102772
args: ()

Output: cdf single = x

cdf_single: 0.47524068626363536

===Scipy _CDF _Single===

x: 0.12251529714159988
args: ()

Output: cdf single = x

cdf_single: 0.5487545340566995

===Scipy _CDF _Single===

x: 0.3071328853342278
args: ()

Output: cdf single = x

cdf_single: 0.6206288861481805

===Scipy _CDF _Single===

x: 0.49175047352685575
args: ()

Output: cdf single = x

cdf_single: 0.688552123916948

===Scipy _CDF _Single===

x: 0.6763680617194836
args: ()

Output: cdf single = x

cdf_single: 0.7505965051109742

===Scipy _CDF _Single===

x: 0.8609856499121116
args: ()

Output: cdf single = x

cdf_single: 0.8053770266990159

===Scipy _CDF _Single===

x: 1.0456032381047395
args: ()

Output: cdf single = x

cdf_single: 0.8521278731765937

===Scipy _CDF _Single===

x: 1.2302208262973675
args: ()

Output: cdf single = x

cdf_single: 0.890692788463419

===Scipy _CDF _Single===

x: 1.4148384144899953
args: ()

Output: cdf single = x

cdf_single: 0.9214420609229322

===Scipy _CDF _Single===

x: 1.5994560026826232
args: ()

Output: cdf single = x

cdf_single: 0.9451403413991621

===Scipy _CDF _Single===

x: 1.7840735908752512
args: ()

Output: cdf single = x

cdf_single: 0.9627941460348707

===Scipy _CDF _Single===

x: 1.9686911790678792
args: ()

Output: cdf single = x

cdf_single: 0.9755057175699903

===Scipy _CDF _Single===

x: 2.153308767260507
args: ()

Output: cdf single = x

cdf_single: 0.9843527898900793

===Scipy _CDF _Single===

x: 2.337926355453135
args: ()

Output: cdf single = x

cdf_single: 0.9903044655986262

===Scipy _CDF _Single===

x: 2.522543943645763
args: ()

Output: cdf single = x

cdf_single: 0.9941745303936184

===Scipy _CDF _Single===

x: 2.707161531838391
args: ()

Output: cdf single = x

cdf_single: 0.9966069385262655

===Scipy _CDF _Single===

x: 2.8917791200310186
args: ()

Output: cdf single = x

cdf_single: 0.9980846642235549

===Scipy _CDF _Single===

x: 3.0763967082236476
args: ()

Output: cdf single = x

cdf_single: 0.9989524055931404

===Scipy _CDF _Single===

x: 3.2610142964162754
args: ()

Output: cdf single = x

cdf_single: 0.999444927785611

===Scipy _CDF _Single===

x: 3.4456318846089036
args: ()

Output: cdf single = x

cdf_single: 0.9997151370592218

===Scipy _CDF _Single===

x: 3.6302494728015313
args: ()

Output: cdf single = x

cdf_single: 0.9998584262919235

===Scipy _CDF _Single===

x: 3.8148670609941595
args: ()

Output: cdf single = x

cdf_single: 0.999931871867288
_cdf = _cdfvec(x, *args) = [0.00231748 0.00406349 0.00690571 0.01137779 0.01817923 0.02817764
 0.04238457 0.0618969  0.08780035 0.12103916 0.16226532 0.21168955
 0.26896209 0.33311151 0.40256251 0.47524069 0.54875453 0.62062889
 0.68855212 0.75059651 0.80537703 0.85212787 0.89069279 0.92144206
 0.94514034 0.96279415 0.97550572 0.98435279 0.99030447 0.99417453
 0.99660694 0.99808466 0.99895241 0.99944493 0.99971514 0.99985843
 0.99993187]
prob_less_or_equal: [0.00231748 0.00406349 0.00690571 0.01137779 0.01817923 0.02817764
 0.04238457 0.0618969  0.08780035 0.12103916 0.16226532 0.21168955
 0.26896209 0.33311151 0.40256251 0.47524069 0.54875453 0.62062889
 0.68855212 0.75059651 0.80537703 0.85212787 0.89069279 0.92144206
 0.94514034 0.96279415 0.97550572 0.98435279 0.99030447 0.99417453
 0.99660694 0.99808466 0.99895241 0.999      0.999      0.999
 0.999     ]
cdf_over: [0.99768252 0.99593651 0.99309429 0.98862221 0.98182077 0.97182236
 0.95761543 0.9381031  0.91219965 0.87896084 0.83773468 0.78831045
 0.73103791 0.66688849 0.59743749 0.52475931 0.45124547 0.37937111
 0.31144788 0.24940349 0.19462297 0.14787213 0.10930721 0.07855794
 0.05485966 0.03720585 0.02449428 0.01564721 0.00969553 0.00582547
 0.00339306 0.00191534 0.00104759 0.001      0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [20 17]
player: myles turner
stat: pts
condition: J Smith Jr PF opp starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.11680793762207031

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (18.503561481403977, 6.32887225127905)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.84467149e+00, -2.68666546e+00, -2.52865943e+00, -2.37065339e+00,
       -2.21264736e+00, -2.05464133e+00, -1.89663529e+00, -1.73862926e+00,
       -1.58062323e+00, -1.42261719e+00, -1.26461116e+00, -1.10660513e+00,
       -9.48599094e-01, -7.90593060e-01, -6.32587027e-01, -4.74580994e-01,
       -3.16574960e-01, -1.58568927e-01, -5.62893556e-04,  1.57443140e-01,
        3.15449173e-01,  4.73455206e-01,  6.31461240e-01,  7.89467273e-01,
        9.47473307e-01,  1.10547934e+00,  1.26348537e+00,  1.42149141e+00,
        1.57949744e+00,  1.73750347e+00,  1.89550951e+00,  2.05351554e+00,
        2.21152157e+00,  2.36952761e+00,  2.52753364e+00,  2.68553967e+00,
        2.84354571e+00])]

===Scipy _CDF===

x: [-2.84467149e+00 -2.68666546e+00 -2.52865943e+00 -2.37065339e+00
 -2.21264736e+00 -2.05464133e+00 -1.89663529e+00 -1.73862926e+00
 -1.58062323e+00 -1.42261719e+00 -1.26461116e+00 -1.10660513e+00
 -9.48599094e-01 -7.90593060e-01 -6.32587027e-01 -4.74580994e-01
 -3.16574960e-01 -1.58568927e-01 -5.62893556e-04  1.57443140e-01
  3.15449173e-01  4.73455206e-01  6.31461240e-01  7.89467273e-01
  9.47473307e-01  1.10547934e+00  1.26348537e+00  1.42149141e+00
  1.57949744e+00  1.73750347e+00  1.89550951e+00  2.05351554e+00
  2.21152157e+00  2.36952761e+00  2.52753364e+00  2.68553967e+00
  2.84354571e+00]
args: ()

===Scipy _CDF _Single===

x: -2.844671493845606
args: ()

Output: cdf single = x

cdf_single: 0.002222862344316384

===Scipy _CDF _Single===

x: -2.6866654604961573
args: ()

Output: cdf single = x

cdf_single: 0.003608459708738413

===Scipy _CDF _Single===

x: -2.528659427146708
args: ()

Output: cdf single = x

cdf_single: 0.005724953595737761

===Scipy _CDF _Single===

x: -2.370653393797259
args: ()

Output: cdf single = x

cdf_single: 0.008878337032010953

===Scipy _CDF _Single===

x: -2.2126473604478103
args: ()

Output: cdf single = x

cdf_single: 0.013460983574990374

===Scipy _CDF _Single===

x: -2.054641327098361
args: ()

Output: cdf single = x

cdf_single: 0.019956830436649375

===Scipy _CDF _Single===

x: -1.896635293748912
args: ()

Output: cdf single = x

cdf_single: 0.028938044556094764

===Scipy _CDF _Single===

x: -1.738629260399463
args: ()

Output: cdf single = x

cdf_single: 0.04104999812327812

===Scipy _CDF _Single===

x: -1.5806232270500138
args: ()

Output: cdf single = x

cdf_single: 0.05698210587723917

===Scipy _CDF _Single===

x: -1.4226171937005647
args: ()

Output: cdf single = x

cdf_single: 0.07742357848037121

===Scipy _CDF _Single===

x: -1.2646111603511156
args: ()

Output: cdf single = x

cdf_single: 0.10300537520042309

===Scipy _CDF _Single===

x: -1.1066051270016666
args: ()

Output: cdf single = x

cdf_single: 0.13423234483282614

===Scipy _CDF _Single===

x: -0.9485990936522176
args: ()

Output: cdf single = x

cdf_single: 0.17141227607730364

===Scipy _CDF _Single===

x: -0.7905930603027687
args: ()

Output: cdf single = x

cdf_single: 0.21459074888552337

===Scipy _CDF _Single===

x: -0.6325870269533196
args: ()

Output: cdf single = x

cdf_single: 0.26350168051792333

===Scipy _CDF _Single===

x: -0.47458099360387057
args: ()

Output: cdf single = x

cdf_single: 0.31754282799318434

===Scipy _CDF _Single===

x: -0.31657496025442183
args: ()

Output: cdf single = x

cdf_single: 0.3757830690321779

===Scipy _CDF _Single===

x: -0.15856892690497285
args: ()

Output: cdf single = x

cdf_single: 0.437004255866745

===Scipy _CDF _Single===

x: -0.0005628935555238225
args: ()

Output: cdf single = x

cdf_single: 0.49977543797319474

===Scipy _CDF _Single===

x: 0.15744313979392519
args: ()

Output: cdf single = x

cdf_single: 0.5625521916266087

===Scipy _CDF _Single===

x: 0.31544917314337423
args: ()

Output: cdf single = x

cdf_single: 0.6237896818187432

===Scipy _CDF _Single===

x: 0.47345520649282324
args: ()

Output: cdf single = x

cdf_single: 0.6820557743613559

===Scipy _CDF _Single===

x: 0.6314612398422722
args: ()

Output: cdf single = x

cdf_single: 0.7361305074935984

===Scipy _CDF _Single===

x: 0.7894672731917213
args: ()

Output: cdf single = x

cdf_single: 0.7850805248639899

===Scipy _CDF _Single===

x: 0.9474733065411702
args: ()

Output: cdf single = x

cdf_single: 0.8283011739724521

===Scipy _CDF _Single===

x: 1.1054793398906193
args: ()

Output: cdf single = x

cdf_single: 0.865524029111317

===Scipy _CDF _Single===

x: 1.2634853732400684
args: ()

Output: cdf single = x

cdf_single: 0.8967926000500667

===Scipy _CDF _Single===

x: 1.4214914065895174
args: ()

Output: cdf single = x

cdf_single: 0.9224130249761019

===Scipy _CDF _Single===

x: 1.5794974399389663
args: ()

Output: cdf single = x

cdf_single: 0.942888998372343

===Scipy _CDF _Single===

x: 1.7375034732884154
args: ()

Output: cdf single = x

cdf_single: 0.9588508292585203

===Scipy _CDF _Single===

x: 1.8955095066378644
args: ()

Output: cdf single = x

cdf_single: 0.9709875332609965

===Scipy _CDF _Single===

x: 2.0535155399873135
args: ()

Output: cdf single = x

cdf_single: 0.9799886979202858

===Scipy _CDF _Single===

x: 2.211521573336763
args: ()

Output: cdf single = x

cdf_single: 0.9865001301814399

===Scipy _CDF _Single===

x: 2.369527606686212
args: ()

Output: cdf single = x

cdf_single: 0.9910945873140566

===Scipy _CDF _Single===

x: 2.527533640035661
args: ()

Output: cdf single = x

cdf_single: 0.9942566590449582

===Scipy _CDF _Single===

x: 2.6855396733851102
args: ()

Output: cdf single = x

cdf_single: 0.9963793611347908

===Scipy _CDF _Single===

x: 2.843545706734559
args: ()

Output: cdf single = x

cdf_single: 0.9977692695077662
_cdf = _cdfvec(x, *args) = [0.00222286 0.00360846 0.00572495 0.00887834 0.01346098 0.01995683
 0.02893804 0.04105    0.05698211 0.07742358 0.10300538 0.13423234
 0.17141228 0.21459075 0.26350168 0.31754283 0.37578307 0.43700426
 0.49977544 0.56255219 0.62378968 0.68205577 0.73613051 0.78508052
 0.82830117 0.86552403 0.8967926  0.92241302 0.942889   0.95885083
 0.97098753 0.9799887  0.98650013 0.99109459 0.99425666 0.99637936
 0.99776927]
prob_less_or_equal: [0.00222286 0.00360846 0.00572495 0.00887834 0.01346098 0.01995683
 0.02893804 0.04105    0.05698211 0.07742358 0.10300538 0.13423234
 0.17141228 0.21459075 0.26350168 0.31754283 0.37578307 0.43700426
 0.49977544 0.56255219 0.62378968 0.68205577 0.73613051 0.78508052
 0.82830117 0.86552403 0.8967926  0.92241302 0.942889   0.95885083
 0.97098753 0.9799887  0.98650013 0.99109459 0.99425666 0.99637936
 0.99776927]
cdf_over: [0.99777714 0.99639154 0.99427505 0.99112166 0.98653902 0.98004317
 0.97106196 0.95895    0.94301789 0.92257642 0.89699462 0.86576766
 0.82858772 0.78540925 0.73649832 0.68245717 0.62421693 0.56299574
 0.50022456 0.43744781 0.37621032 0.31794423 0.26386949 0.21491948
 0.17169883 0.13447597 0.1032074  0.07758698 0.057111   0.04114917
 0.02901247 0.0200113  0.01349987 0.00890541 0.00574334 0.00362064
 0.00223073]

===Test Distribute All Probs===

cond_data: [20 17]
player: myles turner
stat: pts
condition: A Sengun C opp starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.08242201805114746

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (18.50355267367241, 6.328868102666674)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.84467197e+00, -2.68666583e+00, -2.52865969e+00, -2.37065356e+00,
       -2.21264742e+00, -2.05464128e+00, -1.89663515e+00, -1.73862901e+00,
       -1.58062287e+00, -1.42261673e+00, -1.26461060e+00, -1.10660446e+00,
       -9.48598324e-01, -7.90592187e-01, -6.32586050e-01, -4.74579913e-01,
       -3.16573776e-01, -1.58567639e-01, -5.61502249e-04,  1.57444635e-01,
        3.15450772e-01,  4.73456909e-01,  6.31463045e-01,  7.89469182e-01,
        9.47475319e-01,  1.10548146e+00,  1.26348759e+00,  1.42149373e+00,
        1.57949987e+00,  1.73750600e+00,  1.89551214e+00,  2.05351828e+00,
        2.21152441e+00,  2.36953055e+00,  2.52753669e+00,  2.68554283e+00,
        2.84354896e+00])]

===Scipy _CDF===

x: [-2.84467197e+00 -2.68666583e+00 -2.52865969e+00 -2.37065356e+00
 -2.21264742e+00 -2.05464128e+00 -1.89663515e+00 -1.73862901e+00
 -1.58062287e+00 -1.42261673e+00 -1.26461060e+00 -1.10660446e+00
 -9.48598324e-01 -7.90592187e-01 -6.32586050e-01 -4.74579913e-01
 -3.16573776e-01 -1.58567639e-01 -5.61502249e-04  1.57444635e-01
  3.15450772e-01  4.73456909e-01  6.31463045e-01  7.89469182e-01
  9.47475319e-01  1.10548146e+00  1.26348759e+00  1.42149373e+00
  1.57949987e+00  1.73750600e+00  1.89551214e+00  2.05351828e+00
  2.21152441e+00  2.36953055e+00  2.52753669e+00  2.68554283e+00
  2.84354896e+00]
args: ()

===Scipy _CDF _Single===

x: -2.84467196686981
args: ()

Output: cdf single = x

cdf_single: 0.0022228590436334456

===Scipy _CDF _Single===

x: -2.686665829946424
args: ()

Output: cdf single = x

cdf_single: 0.0036084557179394284

===Scipy _CDF _Single===

x: -2.5286596930230383
args: ()

Output: cdf single = x

cdf_single: 0.00572494925938699

===Scipy _CDF _Single===

x: -2.3706535560996524
args: ()

Output: cdf single = x

cdf_single: 0.00887833313377653

===Scipy _CDF _Single===

x: -2.212647419176266
args: ()

Output: cdf single = x

cdf_single: 0.013460981548953496

===Scipy _CDF _Single===

x: -2.0546412822528803
args: ()

Output: cdf single = x

cdf_single: 0.01995683260400721

===Scipy _CDF _Single===

x: -1.8966351453294945
args: ()

Output: cdf single = x

cdf_single: 0.028938054357159782

===Scipy _CDF _Single===

x: -1.7386290084061087
args: ()

Output: cdf single = x

cdf_single: 0.04105002030011918

===Scipy _CDF _Single===

x: -1.5806228714827226
args: ()

Output: cdf single = x

cdf_single: 0.0569821465513329

===Scipy _CDF _Single===

x: -1.4226167345593366
args: ()

Output: cdf single = x

cdf_single: 0.0774236450667346

===Scipy _CDF _Single===

x: -1.2646105976359507
args: ()

Output: cdf single = x

cdf_single: 0.10300547610897755

===Scipy _CDF _Single===

x: -1.106604460712565
args: ()

Output: cdf single = x

cdf_single: 0.1342324889314632

===Scipy _CDF _Single===

x: -0.948598323789179
args: ()

Output: cdf single = x

cdf_single: 0.17141247192833747

===Scipy _CDF _Single===

x: -0.7905921868657931
args: ()

Output: cdf single = x

cdf_single: 0.21459100381299856

===Scipy _CDF _Single===

x: -0.6325860499424072
args: ()

Output: cdf single = x

cdf_single: 0.2635019996089537

===Scipy _CDF _Single===

x: -0.4745799130190213
args: ()

Output: cdf single = x

cdf_single: 0.3175432131712996

===Scipy _CDF _Single===

x: -0.3165737760956357
args: ()

Output: cdf single = x

cdf_single: 0.37578351835415

===Scipy _CDF _Single===

x: -0.1585676391722498
args: ()

Output: cdf single = x

cdf_single: 0.4370047631796022

===Scipy _CDF _Single===

x: -0.0005615022488639156
args: ()

Output: cdf single = x

cdf_single: 0.4997759930241586

===Scipy _CDF _Single===

x: 0.15744463467452197
args: ()

Output: cdf single = x

cdf_single: 0.5625527806517059

===Scipy _CDF _Single===

x: 0.31545077159790785
args: ()

Output: cdf single = x

cdf_single: 0.6237902885583099

===Scipy _CDF _Single===

x: 0.47345690852129374
args: ()

Output: cdf single = x

cdf_single: 0.6820563813785909

===Scipy _CDF _Single===

x: 0.6314630454446797
args: ()

Output: cdf single = x

cdf_single: 0.7361310976212116

===Scipy _CDF _Single===

x: 0.7894691823680655
args: ()

Output: cdf single = x

cdf_single: 0.7850810825848689

===Scipy _CDF _Single===

x: 0.9474753192914515
args: ()

Output: cdf single = x

cdf_single: 0.8283016865566802

===Scipy _CDF _Single===

x: 1.1054814562148374
args: ()

Output: cdf single = x

cdf_single: 0.8655244873792479

===Scipy _CDF _Single===

x: 1.2634875931382232
args: ()

Output: cdf single = x

cdf_single: 0.8967929986981449

===Scipy _CDF _Single===

x: 1.421493730061609
args: ()

Output: cdf single = x

cdf_single: 0.9224133624738516

===Scipy _CDF _Single===

x: 1.579499866984995
args: ()

Output: cdf single = x

cdf_single: 0.9428892765009549

===Scipy _CDF _Single===

x: 1.737506003908381
args: ()

Output: cdf single = x

cdf_single: 0.9588510524030565

===Scipy _CDF _Single===

x: 1.8955121408317668
args: ()

Output: cdf single = x

cdf_single: 0.9709877075845929

===Scipy _CDF _Single===

x: 2.0535182777551526
args: ()

Output: cdf single = x

cdf_single: 0.9799888305410726

===Scipy _CDF _Single===

x: 2.2115244146785393
args: ()

Output: cdf single = x

cdf_single: 0.9865002284472512

===Scipy _CDF _Single===

x: 2.369530551601925
args: ()

Output: cdf single = x

cdf_single: 0.9910946582347965

===Scipy _CDF _Single===

x: 2.527536688525311
args: ()

Output: cdf single = x

cdf_single: 0.9942567089063012

===Scipy _CDF _Single===

x: 2.685542825448697
args: ()

Output: cdf single = x

cdf_single: 0.9963793952863482

===Scipy _CDF _Single===

x: 2.8435489623720827
args: ()

Output: cdf single = x

cdf_single: 0.9977692922978185
_cdf = _cdfvec(x, *args) = [0.00222286 0.00360846 0.00572495 0.00887833 0.01346098 0.01995683
 0.02893805 0.04105002 0.05698215 0.07742365 0.10300548 0.13423249
 0.17141247 0.214591   0.263502   0.31754321 0.37578352 0.43700476
 0.49977599 0.56255278 0.62379029 0.68205638 0.7361311  0.78508108
 0.82830169 0.86552449 0.896793   0.92241336 0.94288928 0.95885105
 0.97098771 0.97998883 0.98650023 0.99109466 0.99425671 0.9963794
 0.99776929]
prob_less_or_equal: [0.00222286 0.00360846 0.00572495 0.00887833 0.01346098 0.01995683
 0.02893805 0.04105002 0.05698215 0.07742365 0.10300548 0.13423249
 0.17141247 0.214591   0.263502   0.31754321 0.37578352 0.43700476
 0.49977599 0.56255278 0.62379029 0.68205638 0.7361311  0.78508108
 0.82830169 0.86552449 0.896793   0.92241336 0.94288928 0.95885105
 0.97098771 0.97998883 0.98650023 0.99109466 0.99425671 0.9963794
 0.99776929]
cdf_over: [0.99777714 0.99639154 0.99427505 0.99112167 0.98653902 0.98004317
 0.97106195 0.95894998 0.94301785 0.92257635 0.89699452 0.86576751
 0.82858753 0.785409   0.736498   0.68245679 0.62421648 0.56299524
 0.50022401 0.43744722 0.37620971 0.31794362 0.2638689  0.21491892
 0.17169831 0.13447551 0.103207   0.07758664 0.05711072 0.04114895
 0.02901229 0.02001117 0.01349977 0.00890534 0.00574329 0.0036206
 0.00223071]

===Test Distribute All Probs===

cond_data: [20 21 19]
player: myles turner
stat: pts
condition: tue
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.08275985717773438

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36]
model_name: norm
sample_fit_params: (20.003850978460612, 6.842022537328136)

===Scipy CDF===

test_argsreduce = goodargs = [array([-2.85059745, -2.70444183, -2.55828622, -2.41213061, -2.26597499,
       -2.11981938, -1.97366377, -1.82750815, -1.68135254, -1.53519693,
       -1.38904131, -1.2428857 , -1.09673009, -0.95057447, -0.80441886,
       -0.65826325, -0.51210763, -0.36595202, -0.21979641, -0.07364079,
        0.07251482,  0.21867043,  0.36482604,  0.51098166,  0.65713727,
        0.80329288,  0.9494485 ,  1.09560411,  1.24175972,  1.38791534,
        1.53407095,  1.68022656,  1.82638218,  1.97253779,  2.1186934 ,
        2.26484902,  2.41100463])]

===Scipy _CDF===

x: [-2.85059745 -2.70444183 -2.55828622 -2.41213061 -2.26597499 -2.11981938
 -1.97366377 -1.82750815 -1.68135254 -1.53519693 -1.38904131 -1.2428857
 -1.09673009 -0.95057447 -0.80441886 -0.65826325 -0.51210763 -0.36595202
 -0.21979641 -0.07364079  0.07251482  0.21867043  0.36482604  0.51098166
  0.65713727  0.80329288  0.9494485   1.09560411  1.24175972  1.38791534
  1.53407095  1.68022656  1.82638218  1.97253779  2.1186934   2.26484902
  2.41100463]
args: ()

===Scipy _CDF _Single===

x: -2.850597447180731
args: ()

Output: cdf single = x

cdf_single: 0.0021818588338820984

===Scipy _CDF _Single===

x: -2.7044418339034753
args: ()

Output: cdf single = x

cdf_single: 0.0034209623512724587

===Scipy _CDF _Single===

x: -2.5582862206262194
args: ()

Output: cdf single = x

cdf_single: 0.005259473718729511

===Scipy _CDF _Single===

x: -2.4121306073489635
args: ()

Output: cdf single = x

cdf_single: 0.007929799561088023

===Scipy _CDF _Single===

x: -2.2659749940717075
args: ()

Output: cdf single = x

cdf_single: 0.011726457162321539

===Scipy _CDF _Single===

x: -2.1198193807944516
args: ()

Output: cdf single = x

cdf_single: 0.01701064011464957

===Scipy _CDF _Single===

x: -1.973663767517196
args: ()

Output: cdf single = x

cdf_single: 0.02420999382915737

===Scipy _CDF _Single===

x: -1.82750815423994
args: ()

Output: cdf single = x

cdf_single: 0.03381170065144484

===Scipy _CDF _Single===

x: -1.681352540962684
args: ()

Output: cdf single = x

cdf_single: 0.04634722902697429

===Scipy _CDF _Single===

x: -1.535196927685428
args: ()

Output: cdf single = x

cdf_single: 0.062367731394017786

===Scipy _CDF _Single===

x: -1.3890413144081721
args: ()

Output: cdf single = x

cdf_single: 0.0824100936825425

===Scipy _CDF _Single===

x: -1.2428857011309162
args: ()

Output: cdf single = x

cdf_single: 0.1069549777687813

===Scipy _CDF _Single===

x: -1.0967300878536606
args: ()

Output: cdf single = x

cdf_single: 0.13637969983121584

===Scipy _CDF _Single===

x: -0.9505744745764045
args: ()

Output: cdf single = x

cdf_single: 0.17091021566671138

===Scipy _CDF _Single===

x: -0.8044188612991487
args: ()

Output: cdf single = x

cdf_single: 0.21057755592901256

===Scipy _CDF _Single===

x: -0.6582632480218928
args: ()

Output: cdf single = x

cdf_single: 0.25518449474079835

===Scipy _CDF _Single===

x: -0.5121076347446373
args: ()

Output: cdf single = x

cdf_single: 0.3042878407576712

===Scipy _CDF _Single===

x: -0.36595202146738137
args: ()

Output: cdf single = x

cdf_single: 0.3572004385950695

===Scipy _CDF _Single===

x: -0.2197964081901255
args: ()

Output: cdf single = x

cdf_single: 0.4130148585427674

===Scipy _CDF _Single===

x: -0.07364079491286961
args: ()

Output: cdf single = x

cdf_single: 0.4706481047995057

===Scipy _CDF _Single===

x: 0.07251481836438627
args: ()

Output: cdf single = x

cdf_single: 0.5289038934173932

===Scipy _CDF _Single===

x: 0.21867043164164213
args: ()

Output: cdf single = x

cdf_single: 0.5865466081564116

===Scipy _CDF _Single===

x: 0.36482604491889803
args: ()

Output: cdf single = x

cdf_single: 0.6423793689512237

===Scipy _CDF _Single===

x: 0.5109816581961539
args: ()

Output: cdf single = x

cdf_single: 0.695318049877563

===Scipy _CDF _Single===

x: 0.6571372714734097
args: ()

Output: cdf single = x

cdf_single: 0.7444536723233295

===Scipy _CDF _Single===

x: 0.8032928847506656
args: ()

Output: cdf single = x

cdf_single: 0.789097265234531

===Scipy _CDF _Single===

x: 0.9494484980279215
args: ()

Output: cdf single = x

cdf_single: 0.8288037229167824

===Scipy _CDF _Single===

x: 1.0956041113051773
args: ()

Output: cdf single = x

cdf_single: 0.8633739691334188

===Scipy _CDF _Single===

x: 1.2417597245824332
args: ()

Output: cdf single = x

cdf_single: 0.8928373866322478

===Scipy _CDF _Single===

x: 1.3879153378596891
args: ()

Output: cdf single = x

cdf_single: 0.9174185866064408

===Scipy _CDF _Single===

x: 1.534070951136945
args: ()

Output: cdf single = x

cdf_single: 0.9374939005986476

===Scipy _CDF _Single===

x: 1.680226564414201
args: ()

Output: cdf single = x

cdf_single: 0.9535433786423292

===Scipy _CDF _Single===

x: 1.8263821776914573
args: ()

Output: cdf single = x

cdf_single: 0.9661036427334759

===Scipy _CDF _Single===

x: 1.9725377909687132
args: ()

Output: cdf single = x

cdf_single: 0.9757258766848297

===Scipy _CDF _Single===

x: 2.118693404245969
args: ()

Output: cdf single = x

cdf_single: 0.9829418069364528

===Scipy _CDF _Single===

x: 2.264849017523225
args: ()

Output: cdf single = x

cdf_single: 0.9882390268755203

===Scipy _CDF _Single===

x: 2.411004630800481
args: ()

Output: cdf single = x

cdf_single: 0.9920456767753347
_cdf = _cdfvec(x, *args) = [0.00218186 0.00342096 0.00525947 0.0079298  0.01172646 0.01701064
 0.02420999 0.0338117  0.04634723 0.06236773 0.08241009 0.10695498
 0.1363797  0.17091022 0.21057756 0.25518449 0.30428784 0.35720044
 0.41301486 0.4706481  0.52890389 0.58654661 0.64237937 0.69531805
 0.74445367 0.78909727 0.82880372 0.86337397 0.89283739 0.91741859
 0.9374939  0.95354338 0.96610364 0.97572588 0.98294181 0.98823903
 0.99204568]
prob_less_or_equal: [0.00218186 0.00342096 0.00525947 0.0079298  0.01172646 0.01701064
 0.02420999 0.0338117  0.04634723 0.06236773 0.08241009 0.10695498
 0.1363797  0.17091022 0.21057756 0.25518449 0.30428784 0.35720044
 0.41301486 0.4706481  0.52890389 0.58654661 0.64237937 0.69531805
 0.74445367 0.78909727 0.82880372 0.86337397 0.89283739 0.91741859
 0.9374939  0.95354338 0.96610364 0.97572588 0.98294181 0.98823903
 0.99204568]
cdf_over: [0.99781814 0.99657904 0.99474053 0.9920702  0.98827354 0.98298936
 0.97579001 0.9661883  0.95365277 0.93763227 0.91758991 0.89304502
 0.8636203  0.82908978 0.78942244 0.74481551 0.69571216 0.64279956
 0.58698514 0.5293519  0.47109611 0.41345339 0.35762063 0.30468195
 0.25554633 0.21090273 0.17119628 0.13662603 0.10716261 0.08258141
 0.0625061  0.04645662 0.03389636 0.02427412 0.01705819 0.01176097
 0.00795432]

stat_name: reb
player_stat_model_name: loggamma
player_stat_model_avg: 6.73
player_stat_model_max: 16.46

===Test Distribute All Probs===

cond_data: [ 7  6  7  4  8  5  0  3  2  6  7  7  7  3  6  9 11 10 11  4  4 10  6  9
  8  4  6  7  7  6  8  2  9  6  8 12  6  6 10  2 10  3  5  5  8  4  6 10
  7  6  6  5  8  7  8 10 11  9  6  7  8  7]
player: myles turner
stat: reb
condition: all
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.4035179615020752

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-67.00113244169921, 18.138704673136488, 58.64341964567274)

===Scipy CDF===

test_argsreduce = goodargs = [array([3.72138654, 3.77651727, 3.831648  , 3.88677873, 3.94190945,
       3.99704018, 4.05217091, 4.10730164, 4.16243237, 4.2175631 ,
       4.27269382, 4.32782455, 4.38295528, 4.43808601, 4.49321674,
       4.54834747]), array([58.64341965, 58.64341965, 58.64341965, 58.64341965, 58.64341965,
       58.64341965, 58.64341965, 58.64341965, 58.64341965, 58.64341965,
       58.64341965, 58.64341965, 58.64341965, 58.64341965, 58.64341965,
       58.64341965])]

===Scipy _CDF===

x: [3.72138654 3.77651727 3.831648   3.88677873 3.94190945 3.99704018
 4.05217091 4.10730164 4.16243237 4.2175631  4.27269382 4.32782455
 4.38295528 4.43808601 4.49321674 4.54834747]
args: (array([58.64341965, 58.64341965, 58.64341965, 58.64341965, 58.64341965,
       58.64341965, 58.64341965, 58.64341965, 58.64341965, 58.64341965,
       58.64341965, 58.64341965, 58.64341965, 58.64341965, 58.64341965,
       58.64341965]),)

===Scipy _CDF _Single===

x: 3.7213865409953297
args: (58.64341964567274,)

Output: cdf single = x

cdf_single: 0.00641408057708046

===Scipy _CDF _Single===

x: 3.7765172693477793
args: (58.64341964567274,)

Output: cdf single = x

cdf_single: 0.01749749637674044

===Scipy _CDF _Single===

x: 3.8316479977002293
args: (58.64341964567274,)

Output: cdf single = x

cdf_single: 0.04256809115053453

===Scipy _CDF _Single===

x: 3.886778726052679
args: (58.64341964567274,)

Output: cdf single = x

cdf_single: 0.09209460021534173

===Scipy _CDF _Single===

x: 3.941909454405129
args: (58.64341964567274,)

Output: cdf single = x

cdf_single: 0.17690400854622262

===Scipy _CDF _Single===

x: 3.997040182757579
args: (58.64341964567274,)

Output: cdf single = x

cdf_single: 0.3018033040429837

===Scipy _CDF _Single===

x: 4.052170911110029
args: (58.64341964567274,)

Output: cdf single = x

cdf_single: 0.4586870053690895

===Scipy _CDF _Single===

x: 4.107301639462478
args: (58.64341964567274,)

Output: cdf single = x

cdf_single: 0.6252948876924749

===Scipy _CDF _Single===

x: 4.162432367814929
args: (58.64341964567274,)

Output: cdf single = x

cdf_single: 0.7735146110208806

===Scipy _CDF _Single===

x: 4.217563096167378
args: (58.64341964567274,)

Output: cdf single = x

cdf_single: 0.882906491458801

===Scipy _CDF _Single===

x: 4.272693824519828
args: (58.64341964567274,)

Output: cdf single = x

cdf_single: 0.949201199438708

===Scipy _CDF _Single===

x: 4.327824552872277
args: (58.64341964567274,)

Output: cdf single = x

cdf_single: 0.9818366344174427

===Scipy _CDF _Single===

x: 4.382955281224728
args: (58.64341964567274,)

Output: cdf single = x

cdf_single: 0.9947387032581816

===Scipy _CDF _Single===

x: 4.4380860095771775
args: (58.64341964567274,)

Output: cdf single = x

cdf_single: 0.9987859054712311

===Scipy _CDF _Single===

x: 4.493216737929627
args: (58.64341964567274,)

Output: cdf single = x

cdf_single: 0.9997805025968977

===Scipy _CDF _Single===

x: 4.5483474662820775
args: (58.64341964567274,)

Output: cdf single = x

cdf_single: 0.9999694287457496
_cdf = _cdfvec(x, *args) = [0.00641408 0.0174975  0.04256809 0.0920946  0.17690401 0.3018033
 0.45868701 0.62529489 0.77351461 0.88290649 0.9492012  0.98183663
 0.9947387  0.99878591 0.9997805  0.99996943]
prob_less_or_equal: [0.00641408 0.0174975  0.04256809 0.0920946  0.17690401 0.3018033
 0.45868701 0.62529489 0.77351461 0.88290649 0.9492012  0.98183663
 0.9947387  0.99878591 0.999      0.999     ]
cdf_over: [0.99358592 0.9825025  0.95743191 0.9079054  0.82309599 0.6981967
 0.54131299 0.37470511 0.22648539 0.11709351 0.0507988  0.01816337
 0.0052613  0.00121409 0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [ 7  6  7  4  5  0  7  7  7  3  6  9 11 10 11  4 10  6  7  7  6  8  2  9
  6 12  6  6 10  2 10  3  5  6  6  5  8  8 10 11  9  6  7  8]
player: myles turner
stat: reb
condition: 0 lag
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.3422219753265381

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-64.14438765362286, 17.867279487896546, 53.77869185899703)

===Scipy CDF===

test_argsreduce = goodargs = [array([3.61803187, 3.6740001 , 3.72996833, 3.78593656, 3.84190479,
       3.89787302, 3.95384125, 4.00980948, 4.06577771, 4.12174594,
       4.17771417, 4.2336824 , 4.28965063, 4.34561886, 4.40158709,
       4.45755532]), array([53.77869186, 53.77869186, 53.77869186, 53.77869186, 53.77869186,
       53.77869186, 53.77869186, 53.77869186, 53.77869186, 53.77869186,
       53.77869186, 53.77869186, 53.77869186, 53.77869186, 53.77869186,
       53.77869186])]

===Scipy _CDF===

x: [3.61803187 3.6740001  3.72996833 3.78593656 3.84190479 3.89787302
 3.95384125 4.00980948 4.06577771 4.12174594 4.17771417 4.2336824
 4.28965063 4.34561886 4.40158709 4.45755532]
args: (array([53.77869186, 53.77869186, 53.77869186, 53.77869186, 53.77869186,
       53.77869186, 53.77869186, 53.77869186, 53.77869186, 53.77869186,
       53.77869186, 53.77869186, 53.77869186, 53.77869186, 53.77869186,
       53.77869186]),)

===Scipy _CDF _Single===

x: 3.6180318720269384
args: (53.77869185899703,)

Output: cdf single = x

cdf_single: 0.00641309445579495

===Scipy _CDF _Single===

x: 3.674000101587427
args: (53.77869185899703,)

Output: cdf single = x

cdf_single: 0.016962658598606767

===Scipy _CDF _Single===

x: 3.7299683311479153
args: (53.77869185899703,)

Output: cdf single = x

cdf_single: 0.04033594082930328

===Scipy _CDF _Single===

x: 3.7859365607084037
args: (53.77869185899703,)

Output: cdf single = x

cdf_single: 0.08598471995954923

===Scipy _CDF _Single===

x: 3.841904790268892
args: (53.77869185899703,)

Output: cdf single = x

cdf_single: 0.1640187550121599

===Scipy _CDF _Single===

x: 3.8978730198293805
args: (53.77869185899703,)

Output: cdf single = x

cdf_single: 0.2799063052742212

===Scipy _CDF _Single===

x: 3.953841249389869
args: (53.77869185899703,)

Output: cdf single = x

cdf_single: 0.42824750674985124

===Scipy _CDF _Single===

x: 4.009809478950357
args: (53.77869185899703,)

Output: cdf single = x

cdf_single: 0.5905577296228747

===Scipy _CDF _Single===

x: 4.065777708510846
args: (53.77869185899703,)

Output: cdf single = x

cdf_single: 0.7410373274510246

===Scipy _CDF _Single===

x: 4.121745938071334
args: (53.77869185899703,)

Output: cdf single = x

cdf_single: 0.8581586903764226

===Scipy _CDF _Single===

x: 4.177714167631823
args: (53.77869185899703,)

Output: cdf single = x

cdf_single: 0.9339428873533576

===Scipy _CDF _Single===

x: 4.233682397192311
args: (53.77869185899703,)

Output: cdf single = x

cdf_single: 0.9742913842459882

===Scipy _CDF _Single===

x: 4.2896506267528
args: (53.77869185899703,)

Output: cdf single = x

cdf_single: 0.9917759401634526

===Scipy _CDF _Single===

x: 4.345618856313288
args: (53.77869185899703,)

Output: cdf single = x

cdf_single: 0.9978722496363304

===Scipy _CDF _Single===

x: 4.401587085873777
args: (53.77869185899703,)

Output: cdf single = x

cdf_single: 0.9995618652921981

===Scipy _CDF _Single===

x: 4.457555315434265
args: (53.77869185899703,)

Output: cdf single = x

cdf_single: 0.9999293492446217
_cdf = _cdfvec(x, *args) = [0.00641309 0.01696266 0.04033594 0.08598472 0.16401876 0.27990631
 0.42824751 0.59055773 0.74103733 0.85815869 0.93394289 0.97429138
 0.99177594 0.99787225 0.99956187 0.99992935]
prob_less_or_equal: [0.00641309 0.01696266 0.04033594 0.08598472 0.16401876 0.27990631
 0.42824751 0.59055773 0.74103733 0.85815869 0.93394289 0.97429138
 0.99177594 0.99787225 0.999      0.999     ]
cdf_over: [0.99358691 0.98303734 0.95966406 0.91401528 0.83598124 0.72009369
 0.57175249 0.40944227 0.25896267 0.14184131 0.06605711 0.02570862
 0.00822406 0.00212775 0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [ 7  7  4  5  0  7  7  7  3  6 10 11  4 10  6  7  6  8  9  2 10  3  5  6
  5  8  8 10 11  6]
player: myles turner
stat: reb
condition: 7:00
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.3479292392730713

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-46.25105212027103, 14.510613920059365, 38.679529235285884)

===Scipy CDF===

test_argsreduce = goodargs = [array([3.22185204, 3.29076712, 3.35968219, 3.42859726, 3.49751233,
       3.5664274 , 3.63534247, 3.70425755, 3.77317262, 3.84208769,
       3.91100276, 3.97991783, 4.04883291, 4.11774798, 4.18666305,
       4.25557812]), array([38.67952924, 38.67952924, 38.67952924, 38.67952924, 38.67952924,
       38.67952924, 38.67952924, 38.67952924, 38.67952924, 38.67952924,
       38.67952924, 38.67952924, 38.67952924, 38.67952924, 38.67952924,
       38.67952924])]

===Scipy _CDF===

x: [3.22185204 3.29076712 3.35968219 3.42859726 3.49751233 3.5664274
 3.63534247 3.70425755 3.77317262 3.84208769 3.91100276 3.97991783
 4.04883291 4.11774798 4.18666305 4.25557812]
args: (array([38.67952924, 38.67952924, 38.67952924, 38.67952924, 38.67952924,
       38.67952924, 38.67952924, 38.67952924, 38.67952924, 38.67952924,
       38.67952924, 38.67952924, 38.67952924, 38.67952924, 38.67952924,
       38.67952924]),)

===Scipy _CDF _Single===

x: 3.221852044153881
args: (38.679529235285884,)

Output: cdf single = x

cdf_single: 0.006967372542015423

===Scipy _CDF _Single===

x: 3.29076711594265
args: (38.679529235285884,)

Output: cdf single = x

cdf_single: 0.018658063397254312

===Scipy _CDF _Single===

x: 3.359682187731419
args: (38.679529235285884,)

Output: cdf single = x

cdf_single: 0.044807884668275164

===Scipy _CDF _Single===

x: 3.428597259520188
args: (38.679529235285884,)

Output: cdf single = x

cdf_single: 0.09610395166639865

===Scipy _CDF _Single===

x: 3.4975123313089567
args: (38.679529235285884,)

Output: cdf single = x

cdf_single: 0.1835456297390364

===Scipy _CDF _Single===

x: 3.5664274030977254
args: (38.679529235285884,)

Output: cdf single = x

cdf_single: 0.31181874858326264

===Scipy _CDF _Single===

x: 3.6353424748864946
args: (38.679529235285884,)

Output: cdf single = x

cdf_single: 0.47207426483060766

===Scipy _CDF _Single===

x: 3.7042575466752634
args: (38.679529235285884,)

Output: cdf single = x

cdf_single: 0.640699494874816

===Scipy _CDF _Single===

x: 3.773172618464032
args: (38.679529235285884,)

Output: cdf single = x

cdf_single: 0.7883756663936197

===Scipy _CDF _Single===

x: 3.842087690252801
args: (38.679529235285884,)

Output: cdf single = x

cdf_single: 0.8946611836058549

===Scipy _CDF _Single===

x: 3.91100276204157
args: (38.679529235285884,)

Output: cdf single = x

cdf_single: 0.9566820245301958

===Scipy _CDF _Single===

x: 3.979917833830339
args: (38.679529235285884,)

Output: cdf single = x

cdf_single: 0.985603758460289

===Scipy _CDF _Single===

x: 4.048832905619108
args: (38.679529235285884,)

Output: cdf single = x

cdf_single: 0.9962164578565839

===Scipy _CDF _Single===

x: 4.117747977407877
args: (38.679529235285884,)

Output: cdf single = x

cdf_single: 0.9992306320577922

===Scipy _CDF _Single===

x: 4.186663049196645
args: (38.679529235285884,)

Output: cdf single = x

cdf_single: 0.9998816216186892

===Scipy _CDF _Single===

x: 4.255578120985414
args: (38.679529235285884,)

Output: cdf single = x

cdf_single: 0.9999865320730913
_cdf = _cdfvec(x, *args) = [0.00696737 0.01865806 0.04480788 0.09610395 0.18354563 0.31181875
 0.47207426 0.64069949 0.78837567 0.89466118 0.95668202 0.98560376
 0.99621646 0.99923063 0.99988162 0.99998653]
prob_less_or_equal: [0.00696737 0.01865806 0.04480788 0.09610395 0.18354563 0.31181875
 0.47207426 0.64069949 0.78837567 0.89466118 0.95668202 0.98560376
 0.99621646 0.999      0.999      0.999     ]
cdf_over: [0.99303263 0.98134194 0.95519212 0.90389605 0.81645437 0.68818125
 0.52792574 0.35930051 0.21162433 0.10533882 0.04331798 0.01439624
 0.00378354 0.001      0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [ 7  6  7  4  2  7  6 11  4  4  8  4  7  7  6  8  2  9 12  6 10  2 10  5
  8  4  6  7  6  6  5  7 11  8]
player: myles turner
stat: reb
condition: 2 after
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.4044978618621826

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-113.76072780747158, 25.23204102938083, 118.16340724557396)

===Scipy CDF===

test_argsreduce = goodargs = [array([4.52839811, 4.56803025, 4.6076624 , 4.64729455, 4.6869267 ,
       4.72655885, 4.766191  , 4.80582315, 4.84545529, 4.88508744,
       4.92471959, 4.96435174, 5.00398389, 5.04361604, 5.08324819,
       5.12288034]), array([118.16340725, 118.16340725, 118.16340725, 118.16340725,
       118.16340725, 118.16340725, 118.16340725, 118.16340725,
       118.16340725, 118.16340725, 118.16340725, 118.16340725,
       118.16340725, 118.16340725, 118.16340725, 118.16340725])]

===Scipy _CDF===

x: [4.52839811 4.56803025 4.6076624  4.64729455 4.6869267  4.72655885
 4.766191   4.80582315 4.84545529 4.88508744 4.92471959 4.96435174
 5.00398389 5.04361604 5.08324819 5.12288034]
args: (array([118.16340725, 118.16340725, 118.16340725, 118.16340725,
       118.16340725, 118.16340725, 118.16340725, 118.16340725,
       118.16340725, 118.16340725, 118.16340725, 118.16340725,
       118.16340725, 118.16340725, 118.16340725, 118.16340725]),)

===Scipy _CDF _Single===

x: 4.528398105980546
args: (118.16340724557396,)

Output: cdf single = x

cdf_single: 0.005965732280125601

===Scipy _CDF _Single===

x: 4.568030254598074
args: (118.16340724557396,)

Output: cdf single = x

cdf_single: 0.01726374461759385

===Scipy _CDF _Single===

x: 4.6076624032156035
args: (118.16340724557396,)

Output: cdf single = x

cdf_single: 0.04378022830775642

===Scipy _CDF _Single===

x: 4.647294551833132
args: (118.16340724557396,)

Output: cdf single = x

cdf_single: 0.09719191952137332

===Scipy _CDF _Single===

x: 4.686926700450661
args: (118.16340724557396,)

Output: cdf single = x

cdf_single: 0.18897418231739616

===Scipy _CDF _Single===

x: 4.726558849068189
args: (118.16340724557396,)

Output: cdf single = x

cdf_single: 0.32268876299456545

===Scipy _CDF _Single===

x: 4.766190997685718
args: (118.16340724557396,)

Output: cdf single = x

cdf_single: 0.48678083740869915

===Scipy _CDF _Single===

x: 4.805823146303246
args: (118.16340724557396,)

Output: cdf single = x

cdf_single: 0.6552683009989743

===Scipy _CDF _Single===

x: 4.845455294920775
args: (118.16340724557396,)

Output: cdf single = x

cdf_single: 0.7990114147681746

===Scipy _CDF _Single===

x: 4.885087443538303
args: (118.16340724557396,)

Output: cdf single = x

cdf_single: 0.9001681498477279

===Scipy _CDF _Single===

x: 4.924719592155832
args: (118.16340724557396,)

Output: cdf single = x

cdf_single: 0.9584474376527305

===Scipy _CDF _Single===

x: 4.964351740773361
args: (118.16340724557396,)

Output: cdf single = x

cdf_single: 0.9857206824976217

===Scipy _CDF _Single===

x: 5.003983889390889
args: (118.16340724557396,)

Output: cdf single = x

cdf_single: 0.9960035710168846

===Scipy _CDF _Single===

x: 5.043616038008418
args: (118.16340724557396,)

Output: cdf single = x

cdf_single: 0.9991006727158784

===Scipy _CDF _Single===

x: 5.083248186625946
args: (118.16340724557396,)

Output: cdf single = x

cdf_single: 0.9998392737244289

===Scipy _CDF _Single===

x: 5.122880335243474
args: (118.16340724557396,)

Output: cdf single = x

cdf_single: 0.9999774609758955
_cdf = _cdfvec(x, *args) = [0.00596573 0.01726374 0.04378023 0.09719192 0.18897418 0.32268876
 0.48678084 0.6552683  0.79901141 0.90016815 0.95844744 0.98572068
 0.99600357 0.99910067 0.99983927 0.99997746]
prob_less_or_equal: [0.00596573 0.01726374 0.04378023 0.09719192 0.18897418 0.32268876
 0.48678084 0.6552683  0.79901141 0.90016815 0.95844744 0.98572068
 0.99600357 0.999      0.999      0.999     ]
cdf_over: [0.99403427 0.98273626 0.95621977 0.90280808 0.81102582 0.67731124
 0.51321916 0.3447317  0.20098859 0.09983185 0.04155256 0.01427932
 0.00399643 0.001      0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [ 7  7  4  8  5  2  6  7  7  7  3  6  9 11 10 11  4  4 10  6  9  8  4  6
  7  7  6  8  2  9  6  8  6  6  2 10  5  8 10  7  6  6  5  8  7]
player: myles turner
stat: reb
condition: A Nesmith SF starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.39005589485168457

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-85.39922429855497, 21.0632744946334, 79.62172852297743)

===Scipy CDF===

test_argsreduce = goodargs = [array([4.07815144, 4.12562744, 4.17310344, 4.22057944, 4.26805544,
       4.31553144, 4.36300744, 4.41048344, 4.45795944, 4.50543544,
       4.55291143, 4.60038743, 4.64786343, 4.69533943, 4.74281543,
       4.79029143]), array([79.62172852, 79.62172852, 79.62172852, 79.62172852, 79.62172852,
       79.62172852, 79.62172852, 79.62172852, 79.62172852, 79.62172852,
       79.62172852, 79.62172852, 79.62172852, 79.62172852, 79.62172852,
       79.62172852])]

===Scipy _CDF===

x: [4.07815144 4.12562744 4.17310344 4.22057944 4.26805544 4.31553144
 4.36300744 4.41048344 4.45795944 4.50543544 4.55291143 4.60038743
 4.64786343 4.69533943 4.74281543 4.79029143]
args: (array([79.62172852, 79.62172852, 79.62172852, 79.62172852, 79.62172852,
       79.62172852, 79.62172852, 79.62172852, 79.62172852, 79.62172852,
       79.62172852, 79.62172852, 79.62172852, 79.62172852, 79.62172852,
       79.62172852]),)

===Scipy _CDF _Single===

x: 4.078151444137557
args: (79.62172852297743,)

Output: cdf single = x

cdf_single: 0.006135142845242702

===Scipy _CDF _Single===

x: 4.125627443192442
args: (79.62172852297743,)

Output: cdf single = x

cdf_single: 0.017125436169707478

===Scipy _CDF _Single===

x: 4.173103442247327
args: (79.62172852297743,)

Output: cdf single = x

cdf_single: 0.042351680776966924

===Scipy _CDF _Single===

x: 4.220579441302212
args: (79.62172852297743,)

Output: cdf single = x

cdf_single: 0.09260372273749753

===Scipy _CDF _Single===

x: 4.268055440357097
args: (79.62172852297743,)

Output: cdf single = x

cdf_single: 0.1789017629432969

===Scipy _CDF _Single===

x: 4.315531439411982
args: (79.62172852297743,)

Output: cdf single = x

cdf_single: 0.30576864308928514

===Scipy _CDF _Single===

x: 4.363007438466867
args: (79.62172852297743,)

Output: cdf single = x

cdf_single: 0.4642612336531449

===Scipy _CDF _Single===

x: 4.410483437521752
args: (79.62172852297743,)

Output: cdf single = x

cdf_single: 0.631235171333682

===Scipy _CDF _Single===

x: 4.457959436576638
args: (79.62172852297743,)

Output: cdf single = x

cdf_single: 0.7783911805177925

===Scipy _CDF _Single===

x: 4.505435435631522
args: (79.62172852297743,)

Output: cdf single = x

cdf_single: 0.8859743425268565

===Scipy _CDF _Single===

x: 4.552911434686408
args: (79.62172852297743,)

Output: cdf single = x

cdf_single: 0.9506473477924757

===Scipy _CDF _Single===

x: 4.600387433741292
args: (79.62172852297743,)

Output: cdf single = x

cdf_single: 0.9823217271047354

===Scipy _CDF _Single===

x: 4.647863432796178
args: (79.62172852297743,)

Output: cdf single = x

cdf_single: 0.9948387610282612

===Scipy _CDF _Single===

x: 4.695339431851063
args: (79.62172852297743,)

Output: cdf single = x

cdf_single: 0.9987897114030535

===Scipy _CDF _Single===

x: 4.742815430905948
args: (79.62172852297743,)

Output: cdf single = x

cdf_single: 0.9997752906348326

===Scipy _CDF _Single===

x: 4.790291429960833
args: (79.62172852297743,)

Output: cdf single = x

cdf_single: 0.9999674340782216
_cdf = _cdfvec(x, *args) = [0.00613514 0.01712544 0.04235168 0.09260372 0.17890176 0.30576864
 0.46426123 0.63123517 0.77839118 0.88597434 0.95064735 0.98232173
 0.99483876 0.99878971 0.99977529 0.99996743]
prob_less_or_equal: [0.00613514 0.01712544 0.04235168 0.09260372 0.17890176 0.30576864
 0.46426123 0.63123517 0.77839118 0.88597434 0.95064735 0.98232173
 0.99483876 0.99878971 0.999      0.999     ]
cdf_over: [0.99386486 0.98287456 0.95764832 0.90739628 0.82109824 0.69423136
 0.53573877 0.36876483 0.22160882 0.11402566 0.04935265 0.01767827
 0.00516124 0.00121029 0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [ 7  6  7  4  8  5  0  3  2  6  7  7  7  3  6  9 11 10 11  4  4 10  6  9
  8  4  6  7  7  6  8  2  9  6  8 12  6  6 10  2 10  3  5  5  8  4  6 10
  7  6  6  5  8  7  8 10 11  9  6  7  8  7]
player: myles turner
stat: reb
condition: M Turner C starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.48529601097106934

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-67.89848541523199, 18.2868770092289, 59.59070872982174)

===Scipy CDF===

test_argsreduce = goodargs = [array([3.74030428, 3.79498831, 3.84967233, 3.90435635, 3.95904038,
       4.0137244 , 4.06840842, 4.12309244, 4.17777647, 4.23246049,
       4.28714451, 4.34182854, 4.39651256, 4.45119658, 4.5058806 ,
       4.56056463]), array([59.59070873, 59.59070873, 59.59070873, 59.59070873, 59.59070873,
       59.59070873, 59.59070873, 59.59070873, 59.59070873, 59.59070873,
       59.59070873, 59.59070873, 59.59070873, 59.59070873, 59.59070873,
       59.59070873])]

===Scipy _CDF===

x: [3.74030428 3.79498831 3.84967233 3.90435635 3.95904038 4.0137244
 4.06840842 4.12309244 4.17777647 4.23246049 4.28714451 4.34182854
 4.39651256 4.45119658 4.5058806  4.56056463]
args: (array([59.59070873, 59.59070873, 59.59070873, 59.59070873, 59.59070873,
       59.59070873, 59.59070873, 59.59070873, 59.59070873, 59.59070873,
       59.59070873, 59.59070873, 59.59070873, 59.59070873, 59.59070873,
       59.59070873]),)

===Scipy _CDF _Single===

x: 3.740304283815826
args: (59.59070872982174,)

Output: cdf single = x

cdf_single: 0.006399821044955112

===Scipy _CDF _Single===

x: 3.794988306653368
args: (59.59070872982174,)

Output: cdf single = x

cdf_single: 0.01747523236301478

===Scipy _CDF _Single===

x: 3.8496723294909105
args: (59.59070872982174,)

Output: cdf single = x

cdf_single: 0.042542113535759075

===Scipy _CDF _Single===

x: 3.904356352328453
args: (59.59070872982174,)

Output: cdf single = x

cdf_single: 0.09207681913605824

===Scipy _CDF _Single===

x: 3.959040375165995
args: (59.59070872982174,)

Output: cdf single = x

cdf_single: 0.17690886236653902

===Scipy _CDF _Single===

x: 4.0137243980035375
args: (59.59070872982174,)

Output: cdf single = x

cdf_single: 0.3018344363643083

===Scipy _CDF _Single===

x: 4.06840842084108
args: (59.59070872982174,)

Output: cdf single = x

cdf_single: 0.45872705643960143

===Scipy _CDF _Single===

x: 4.123092443678622
args: (59.59070872982174,)

Output: cdf single = x

cdf_single: 0.6253139452210902

===Scipy _CDF _Single===

x: 4.177776466516164
args: (59.59070872982174,)

Output: cdf single = x

cdf_single: 0.7734946852469754

===Scipy _CDF _Single===

x: 4.232460489353707
args: (59.59070872982174,)

Output: cdf single = x

cdf_single: 0.8828569201700657

===Scipy _CDF _Single===

x: 4.287144512191249
args: (59.59070872982174,)

Output: cdf single = x

cdf_single: 0.9491477765510414

===Scipy _CDF _Single===

x: 4.341828535028791
args: (59.59070872982174,)

Output: cdf single = x

cdf_single: 0.9817987851556532

===Scipy _CDF _Single===

x: 4.396512557866333
args: (59.59070872982174,)

Output: cdf single = x

cdf_single: 0.994719524519056

===Scipy _CDF _Single===

x: 4.451196580703876
args: (59.59070872982174,)

Output: cdf single = x

cdf_single: 0.9987787706629081

===Scipy _CDF _Single===

x: 4.505880603541418
args: (59.59070872982174,)

Output: cdf single = x

cdf_single: 0.999778541248369

===Scipy _CDF _Single===

x: 4.5605646263789605
args: (59.59070872982174,)

Output: cdf single = x

cdf_single: 0.999969031351711
_cdf = _cdfvec(x, *args) = [0.00639982 0.01747523 0.04254211 0.09207682 0.17690886 0.30183444
 0.45872706 0.62531395 0.77349469 0.88285692 0.94914778 0.98179879
 0.99471952 0.99877877 0.99977854 0.99996903]
prob_less_or_equal: [0.00639982 0.01747523 0.04254211 0.09207682 0.17690886 0.30183444
 0.45872706 0.62531395 0.77349469 0.88285692 0.94914778 0.98179879
 0.99471952 0.99877877 0.999      0.999     ]
cdf_over: [0.99360018 0.98252477 0.95745789 0.90792318 0.82309114 0.69816556
 0.54127294 0.37468605 0.22650531 0.11714308 0.05085222 0.01820121
 0.00528048 0.00122123 0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [ 7  6  7  4  8  5  0  3  2  6  7  7  3  6  9 11 10 11  9  8  4  6  7  7
  6  8  2  9  6  8 12  6  6 10  2 10  3  5  5  8  4  6  8  7  8 10 11  9]
player: myles turner
stat: reb
condition: A Nembhard PG starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.43510985374450684

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-81.37970622107515, 20.47583354922962, 74.35601246370841)

===Scipy CDF===

test_argsreduce = goodargs = [array([3.99884601, 4.04768407, 4.09652213, 4.14536019, 4.19419825,
       4.24303631, 4.29187437, 4.34071243, 4.38955049, 4.43838855,
       4.48722661, 4.53606467, 4.58490273, 4.63374079, 4.68257886,
       4.73141692]), array([74.35601246, 74.35601246, 74.35601246, 74.35601246, 74.35601246,
       74.35601246, 74.35601246, 74.35601246, 74.35601246, 74.35601246,
       74.35601246, 74.35601246, 74.35601246, 74.35601246, 74.35601246,
       74.35601246])]

===Scipy _CDF===

x: [3.99884601 4.04768407 4.09652213 4.14536019 4.19419825 4.24303631
 4.29187437 4.34071243 4.38955049 4.43838855 4.48722661 4.53606467
 4.58490273 4.63374079 4.68257886 4.73141692]
args: (array([74.35601246, 74.35601246, 74.35601246, 74.35601246, 74.35601246,
       74.35601246, 74.35601246, 74.35601246, 74.35601246, 74.35601246,
       74.35601246, 74.35601246, 74.35601246, 74.35601246, 74.35601246,
       74.35601246]),)

===Scipy _CDF _Single===

x: 3.9988460066455165
args: (74.35601246370841,)

Output: cdf single = x

cdf_single: 0.006167657431291941

===Scipy _CDF _Single===

x: 4.047684067259543
args: (74.35601246370841,)

Output: cdf single = x

cdf_single: 0.01705467537456304

===Scipy _CDF _Single===

x: 4.09652212787357
args: (74.35601246370841,)

Output: cdf single = x

cdf_single: 0.041892738007965724

===Scipy _CDF _Single===

x: 4.145360188487597
args: (74.35601246370841,)

Output: cdf single = x

cdf_single: 0.09121301560996609

===Scipy _CDF _Single===

x: 4.194198249101624
args: (74.35601246370841,)

Output: cdf single = x

cdf_single: 0.17587599967822318

===Scipy _CDF _Single===

x: 4.2430363097156505
args: (74.35601246370841,)

Output: cdf single = x

cdf_single: 0.3006268522147591

===Scipy _CDF _Single===

x: 4.291874370329677
args: (74.35601246370841,)

Output: cdf single = x

cdf_single: 0.45724806209898355

===Scipy _CDF _Single===

x: 4.340712430943704
args: (74.35601246370841,)

Output: cdf single = x

cdf_single: 0.6234883300920732

===Scipy _CDF _Single===

x: 4.389550491557731
args: (74.35601246370841,)

Output: cdf single = x

cdf_single: 0.7714538120434394

===Scipy _CDF _Single===

x: 4.438388552171758
args: (74.35601246370841,)

Output: cdf single = x

cdf_single: 0.8809535147097856

===Scipy _CDF _Single===

x: 4.4872266127857845
args: (74.35601246370841,)

Output: cdf single = x

cdf_single: 0.9477270312968394

===Scipy _CDF _Single===

x: 4.536064673399811
args: (74.35601246370841,)

Output: cdf single = x

cdf_single: 0.9809665933608398

===Scipy _CDF _Single===

x: 4.584902734013839
args: (74.35601246370841,)

Output: cdf single = x

cdf_single: 0.9943413697244372

===Scipy _CDF _Single===

x: 4.633740794627865
args: (74.35601246370841,)

Output: cdf single = x

cdf_single: 0.9986466945840689

===Scipy _CDF _Single===

x: 4.682578855241892
args: (74.35601246370841,)

Output: cdf single = x

cdf_single: 0.9997434151295126

===Scipy _CDF _Single===

x: 4.7314169158559185
args: (74.35601246370841,)

Output: cdf single = x

cdf_single: 0.9999619897336528
_cdf = _cdfvec(x, *args) = [0.00616766 0.01705468 0.04189274 0.09121302 0.175876   0.30062685
 0.45724806 0.62348833 0.77145381 0.88095351 0.94772703 0.98096659
 0.99434137 0.99864669 0.99974342 0.99996199]
prob_less_or_equal: [0.00616766 0.01705468 0.04189274 0.09121302 0.175876   0.30062685
 0.45724806 0.62348833 0.77145381 0.88095351 0.94772703 0.98096659
 0.99434137 0.99864669 0.999      0.999     ]
cdf_over: [0.99383234 0.98294532 0.95810726 0.90878698 0.824124   0.69937315
 0.54275194 0.37651167 0.22854619 0.11904649 0.05227297 0.01903341
 0.00565863 0.00135331 0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [ 7  5  0  3  6  7  7  7  3  6  9 11 10 11  7  7  6  8  2  9  6  8 12  6
  6 10  2 10  3  5  5  4  6 10  7  6  6  5  8  7  8 10 11  9  6  7  8  7]
player: myles turner
stat: reb
condition: T Haliburton PG starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.46115589141845703

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-79.10802780159341, 20.280389220217575, 69.8157881101583)

===Scipy CDF===

test_argsreduce = goodargs = [array([3.92536977, 3.97467849, 4.02398721, 4.07329593, 4.12260464,
       4.17191336, 4.22122208, 4.2705308 , 4.31983952, 4.36914824,
       4.41845696, 4.46776567, 4.51707439, 4.56638311, 4.61569183,
       4.66500055]), array([69.81578811, 69.81578811, 69.81578811, 69.81578811, 69.81578811,
       69.81578811, 69.81578811, 69.81578811, 69.81578811, 69.81578811,
       69.81578811, 69.81578811, 69.81578811, 69.81578811, 69.81578811,
       69.81578811])]

===Scipy _CDF===

x: [3.92536977 3.97467849 4.02398721 4.07329593 4.12260464 4.17191336
 4.22122208 4.2705308  4.31983952 4.36914824 4.41845696 4.46776567
 4.51707439 4.56638311 4.61569183 4.66500055]
args: (array([69.81578811, 69.81578811, 69.81578811, 69.81578811, 69.81578811,
       69.81578811, 69.81578811, 69.81578811, 69.81578811, 69.81578811,
       69.81578811, 69.81578811, 69.81578811, 69.81578811, 69.81578811,
       69.81578811]),)

===Scipy _CDF _Single===

x: 3.9253697716132563
args: (69.8157881101583,)

Output: cdf single = x

cdf_single: 0.006187548159541434

===Scipy _CDF _Single===

x: 3.974678489958913
args: (69.8157881101583,)

Output: cdf single = x

cdf_single: 0.016702745932072608

===Scipy _CDF _Single===

x: 4.02398720830457
args: (69.8157881101583,)

Output: cdf single = x

cdf_single: 0.04030364090717388

===Scipy _CDF _Single===

x: 4.073295926650227
args: (69.8157881101583,)

Output: cdf single = x

cdf_single: 0.08673940449706738

===Scipy _CDF _Single===

x: 4.122604644995883
args: (69.8157881101583,)

Output: cdf single = x

cdf_single: 0.16631335722780988

===Scipy _CDF _Single===

x: 4.17191336334154
args: (69.8157881101583,)

Output: cdf single = x

cdf_single: 0.2842718071477587

===Scipy _CDF _Single===

x: 4.221222081687197
args: (69.8157881101583,)

Output: cdf single = x

cdf_single: 0.4344581269457734

===Scipy _CDF _Single===

x: 4.270530800032853
args: (69.8157881101583,)

Output: cdf single = x

cdf_single: 0.5974736985270452

===Scipy _CDF _Single===

x: 4.31983951837851
args: (69.8157881101583,)

Output: cdf single = x

cdf_single: 0.7471395205948995

===Scipy _CDF _Single===

x: 4.3691482367241665
args: (69.8157881101583,)

Output: cdf single = x

cdf_single: 0.8624167430562215

===Scipy _CDF _Single===

x: 4.418456955069823
args: (69.8157881101583,)

Output: cdf single = x

cdf_single: 0.9362667291364581

===Scipy _CDF _Single===

x: 4.46776567341548
args: (69.8157881101583,)

Output: cdf single = x

cdf_single: 0.9752626096066415

===Scipy _CDF _Single===

x: 4.5170743917611365
args: (69.8157881101583,)

Output: cdf single = x

cdf_single: 0.9920750205034292

===Scipy _CDF _Single===

x: 4.566383110106793
args: (69.8157881101583,)

Output: cdf single = x

cdf_single: 0.9979345214367356

===Scipy _CDF _Single===

x: 4.61569182845245
args: (69.8157881101583,)

Output: cdf single = x

cdf_single: 0.9995682112512345

===Scipy _CDF _Single===

x: 4.665000546798106
args: (69.8157881101583,)

Output: cdf single = x

cdf_single: 0.9999286115652375
_cdf = _cdfvec(x, *args) = [0.00618755 0.01670275 0.04030364 0.0867394  0.16631336 0.28427181
 0.43445813 0.5974737  0.74713952 0.86241674 0.93626673 0.97526261
 0.99207502 0.99793452 0.99956821 0.99992861]
prob_less_or_equal: [0.00618755 0.01670275 0.04030364 0.0867394  0.16631336 0.28427181
 0.43445813 0.5974737  0.74713952 0.86241674 0.93626673 0.97526261
 0.99207502 0.99793452 0.999      0.999     ]
cdf_over: [0.99381245 0.98329725 0.95969636 0.9132606  0.83368664 0.71572819
 0.56554187 0.4025263  0.25286048 0.13758326 0.06373327 0.02473739
 0.00792498 0.00206548 0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [ 7  6  7  4  8  5  0  6  7  7  3  6 11  4  6  9  8  6  7  6  8  2  9  6
  8 12  6  6  2 10]
player: myles turner
stat: reb
condition: J Smith PF bench
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.30565690994262695

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-75.60629461660463, 19.212676426723636, 71.90792645274067)

===Scipy CDF===

test_argsreduce = goodargs = [array([3.96125412, 4.01330309, 4.06535206, 4.11740103, 4.16944999,
       4.22149896, 4.27354793, 4.3255969 , 4.37764587, 4.42969484,
       4.48174381, 4.53379278, 4.58584175, 4.63789072, 4.68993968,
       4.74198865]), array([71.90792645, 71.90792645, 71.90792645, 71.90792645, 71.90792645,
       71.90792645, 71.90792645, 71.90792645, 71.90792645, 71.90792645,
       71.90792645, 71.90792645, 71.90792645, 71.90792645, 71.90792645,
       71.90792645])]

===Scipy _CDF===

x: [3.96125412 4.01330309 4.06535206 4.11740103 4.16944999 4.22149896
 4.27354793 4.3255969  4.37764587 4.42969484 4.48174381 4.53379278
 4.58584175 4.63789072 4.68993968 4.74198865]
args: (array([71.90792645, 71.90792645, 71.90792645, 71.90792645, 71.90792645,
       71.90792645, 71.90792645, 71.90792645, 71.90792645, 71.90792645,
       71.90792645, 71.90792645, 71.90792645, 71.90792645, 71.90792645,
       71.90792645]),)

===Scipy _CDF _Single===

x: 3.961254118179262
args: (71.90792645274067,)

Output: cdf single = x

cdf_single: 0.006368302727398512

===Scipy _CDF _Single===

x: 4.013303087192713
args: (71.90792645274067,)

Output: cdf single = x

cdf_single: 0.018339825037200396

===Scipy _CDF _Single===

x: 4.065352056206164
args: (71.90792645274067,)

Output: cdf single = x

cdf_single: 0.04639550575921047

===Scipy _CDF _Single===

x: 4.117401025219615
args: (71.90792645274067,)

Output: cdf single = x

cdf_single: 0.10284519717966269

===Scipy _CDF _Single===

x: 4.169449994233066
args: (71.90792645274067,)

Output: cdf single = x

cdf_single: 0.19959187932073427

===Scipy _CDF _Single===

x: 4.221498963246518
args: (71.90792645274067,)

Output: cdf single = x

cdf_single: 0.3396587550808051

===Scipy _CDF _Single===

x: 4.2735479322599685
args: (71.90792645274067,)

Output: cdf single = x

cdf_single: 0.509470763920445

===Scipy _CDF _Single===

x: 4.3255969012734194
args: (71.90792645274067,)

Output: cdf single = x

cdf_single: 0.6802957938562649

===Scipy _CDF _Single===

x: 4.37764587028687
args: (71.90792645274067,)

Output: cdf single = x

cdf_single: 0.8215165045649206

===Scipy _CDF _Single===

x: 4.429694839300321
args: (71.90792645274067,)

Output: cdf single = x

cdf_single: 0.9164912218658656

===Scipy _CDF _Single===

x: 4.481743808313772
args: (71.90792645274067,)

Output: cdf single = x

cdf_single: 0.9679017028467454

===Scipy _CDF _Single===

x: 4.533792777327224
args: (71.90792645274067,)

Output: cdf single = x

cdf_single: 0.9900509399158739

===Scipy _CDF _Single===

x: 4.585841746340675
args: (71.90792645274067,)

Output: cdf single = x

cdf_single: 0.9975568115191067

===Scipy _CDF _Single===

x: 4.637890715354126
args: (71.90792645274067,)

Output: cdf single = x

cdf_single: 0.9995327607164973

===Scipy _CDF _Single===

x: 4.689939684367577
args: (71.90792645274067,)

Output: cdf single = x

cdf_single: 0.9999315893088895

===Scipy _CDF _Single===

x: 4.741988653381028
args: (71.90792645274067,)

Output: cdf single = x

cdf_single: 0.9999924620323912
_cdf = _cdfvec(x, *args) = [0.0063683  0.01833983 0.04639551 0.1028452  0.19959188 0.33965876
 0.50947076 0.68029579 0.8215165  0.91649122 0.9679017  0.99005094
 0.99755681 0.99953276 0.99993159 0.99999246]
prob_less_or_equal: [0.0063683  0.01833983 0.04639551 0.1028452  0.19959188 0.33965876
 0.50947076 0.68029579 0.8215165  0.91649122 0.9679017  0.99005094
 0.99755681 0.999      0.999      0.999     ]
cdf_over: [0.9936317  0.98166017 0.95360449 0.8971548  0.80040812 0.66034124
 0.49052924 0.31970421 0.1784835  0.08350878 0.0320983  0.00994906
 0.00244319 0.001      0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [ 7  6  7  8  5  0  3  2  7  3  6 11 11  4 10  6  8  4  6  7  6  8  6 10
  3  5  8  4  6 10  7  6  5  8  7  8 10 11  9  6  7  8  7]
player: myles turner
stat: reb
condition: I Jackson SF bench
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.35019993782043457

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-73.37878978270271, 19.13332304424011, 66.05033427657882)

===Scipy CDF===

test_argsreduce = goodargs = [array([3.86126281, 3.91352765, 3.96579249, 4.01805732, 4.07032216,
       4.122587  , 4.17485183, 4.22711667, 4.27938151, 4.33164634,
       4.38391118, 4.43617602, 4.48844085, 4.54070569, 4.59297052,
       4.64523536]), array([66.05033428, 66.05033428, 66.05033428, 66.05033428, 66.05033428,
       66.05033428, 66.05033428, 66.05033428, 66.05033428, 66.05033428,
       66.05033428, 66.05033428, 66.05033428, 66.05033428, 66.05033428,
       66.05033428])]

===Scipy _CDF===

x: [3.86126281 3.91352765 3.96579249 4.01805732 4.07032216 4.122587
 4.17485183 4.22711667 4.27938151 4.33164634 4.38391118 4.43617602
 4.48844085 4.54070569 4.59297052 4.64523536]
args: (array([66.05033428, 66.05033428, 66.05033428, 66.05033428, 66.05033428,
       66.05033428, 66.05033428, 66.05033428, 66.05033428, 66.05033428,
       66.05033428, 66.05033428, 66.05033428, 66.05033428, 66.05033428,
       66.05033428]),)

===Scipy _CDF _Single===

x: 3.861262814194901
args: (66.05033427657882,)

Output: cdf single = x

cdf_single: 0.0063164132924573265

===Scipy _CDF _Single===

x: 3.913527650663077
args: (66.05033427657882,)

Output: cdf single = x

cdf_single: 0.01746514343552597

===Scipy _CDF _Single===

x: 3.9657924871312535
args: (66.05033427657882,)

Output: cdf single = x

cdf_single: 0.04290460731075103

===Scipy _CDF _Single===

x: 4.01805732359943
args: (66.05033427657882,)

Output: cdf single = x

cdf_single: 0.09340373054130313

===Scipy _CDF _Single===

x: 4.070322160067606
args: (66.05033427657882,)

Output: cdf single = x

cdf_single: 0.17997863244875567

===Scipy _CDF _Single===

x: 4.122586996535783
args: (66.05033427657882,)

Output: cdf single = x

cdf_single: 0.30718550652042836

===Scipy _CDF _Single===

x: 4.174851833003959
args: (66.05033427657882,)

Output: cdf single = x

cdf_single: 0.4660945249598871

===Scipy _CDF _Single===

x: 4.227116669472135
args: (66.05033427657882,)

Output: cdf single = x

cdf_single: 0.6334488175503185

===Scipy _CDF _Single===

x: 4.279381505940312
args: (66.05033427657882,)

Output: cdf single = x

cdf_single: 0.7807203489213715

===Scipy _CDF _Single===

x: 4.331646342408488
args: (66.05033427657882,)

Output: cdf single = x

cdf_single: 0.8880054815806261

===Scipy _CDF _Single===

x: 4.383911178876664
args: (66.05033427657882,)

Output: cdf single = x

cdf_single: 0.9520725258510376

===Scipy _CDF _Single===

x: 4.436176015344841
args: (66.05033427657882,)

Output: cdf single = x

cdf_single: 0.9831122474295299

===Scipy _CDF _Single===

x: 4.488440851813017
args: (66.05033427657882,)

Output: cdf single = x

cdf_single: 0.9951811224847671

===Scipy _CDF _Single===

x: 4.540705688281194
args: (66.05033427657882,)

Output: cdf single = x

cdf_single: 0.9989042575763598

===Scipy _CDF _Single===

x: 4.5929705247493695
args: (66.05033427657882,)

Output: cdf single = x

cdf_single: 0.9998045923446096

===Scipy _CDF _Single===

x: 4.645235361217546
args: (66.05033427657882,)

Output: cdf single = x

cdf_single: 0.999973103248119
_cdf = _cdfvec(x, *args) = [0.00631641 0.01746514 0.04290461 0.09340373 0.17997863 0.30718551
 0.46609452 0.63344882 0.78072035 0.88800548 0.95207253 0.98311225
 0.99518112 0.99890426 0.99980459 0.9999731 ]
prob_less_or_equal: [0.00631641 0.01746514 0.04290461 0.09340373 0.17997863 0.30718551
 0.46609452 0.63344882 0.78072035 0.88800548 0.95207253 0.98311225
 0.99518112 0.99890426 0.999      0.999     ]
cdf_over: [0.99368359 0.98253486 0.95709539 0.90659627 0.82002137 0.69281449
 0.53390548 0.36655118 0.21927965 0.11199452 0.04792747 0.01688775
 0.00481888 0.00109574 0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [ 7  6  7  4  8  5  0  3  2  6  7  7  3  6  9 11 10 11  8  4  6  7  7  6
  8  2  9  6  8 12  6  6 10  2 10  3  5  5  4  6 10  7  6  6  5  8  7  8
 10 11  9  6  7  8  7]
player: myles turner
stat: reb
condition: TJ McConnell PG bench
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.3495519161224365

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-89.31465352287026, 21.681374123673567, 84.20045068581)

===Scipy CDF===

test_argsreduce = goodargs = [array([4.14247972, 4.18860225, 4.23472479, 4.28084733, 4.32696987,
       4.37309241, 4.41921494, 4.46533748, 4.51146002, 4.55758256,
       4.6037051 , 4.64982763, 4.69595017, 4.74207271, 4.78819525,
       4.83431778]), array([84.20045069, 84.20045069, 84.20045069, 84.20045069, 84.20045069,
       84.20045069, 84.20045069, 84.20045069, 84.20045069, 84.20045069,
       84.20045069, 84.20045069, 84.20045069, 84.20045069, 84.20045069,
       84.20045069])]

===Scipy _CDF===

x: [4.14247972 4.18860225 4.23472479 4.28084733 4.32696987 4.37309241
 4.41921494 4.46533748 4.51146002 4.55758256 4.6037051  4.64982763
 4.69595017 4.74207271 4.78819525 4.83431778]
args: (array([84.20045069, 84.20045069, 84.20045069, 84.20045069, 84.20045069,
       84.20045069, 84.20045069, 84.20045069, 84.20045069, 84.20045069,
       84.20045069, 84.20045069, 84.20045069, 84.20045069, 84.20045069,
       84.20045069]),)

===Scipy _CDF _Single===

x: 4.142479716025147
args: (84.20045068581,)

Output: cdf single = x

cdf_single: 0.00608325504086386

===Scipy _CDF _Single===

x: 4.188602253936991
args: (84.20045068581,)

Output: cdf single = x

cdf_single: 0.017023156985070613

===Scipy _CDF _Single===

x: 4.234724791848834
args: (84.20045068581,)

Output: cdf single = x

cdf_single: 0.04217287050986742

===Scipy _CDF _Single===

x: 4.280847329760679
args: (84.20045068581,)

Output: cdf single = x

cdf_single: 0.09231985868604736

===Scipy _CDF _Single===

x: 4.326969867672522
args: (84.20045068581,)

Output: cdf single = x

cdf_single: 0.1784807961833035

===Scipy _CDF _Single===

x: 4.373092405584366
args: (84.20045068581,)

Output: cdf single = x

cdf_single: 0.3051771526012212

===Scipy _CDF _Single===

x: 4.419214943496209
args: (84.20045068581,)

Output: cdf single = x

cdf_single: 0.463486767430226

===Scipy _CDF _Single===

x: 4.465337481408053
args: (84.20045068581,)

Output: cdf single = x

cdf_single: 0.6303273689739797

===Scipy _CDF _Single===

x: 4.511460019319896
args: (84.20045068581,)

Output: cdf single = x

cdf_single: 0.7774782753805205

===Scipy _CDF _Single===

x: 4.557582557231741
args: (84.20045068581,)

Output: cdf single = x

cdf_single: 0.8852121959653334

===Scipy _CDF _Single===

x: 4.603705095143584
args: (84.20045068581,)

Output: cdf single = x

cdf_single: 0.9501309096412859

===Scipy _CDF _Single===

x: 4.649827633055428
args: (84.20045068581,)

Output: cdf single = x

cdf_single: 0.9820421732368869

===Scipy _CDF _Single===

x: 4.695950170967271
args: (84.20045068581,)

Output: cdf single = x

cdf_single: 0.994719363440158

===Scipy _CDF _Single===

x: 4.742072708879115
args: (84.20045068581,)

Output: cdf single = x

cdf_single: 0.9987499129396069

===Scipy _CDF _Single===

x: 4.788195246790958
args: (84.20045068581,)

Output: cdf single = x

cdf_single: 0.9997650458875426

===Scipy _CDF _Single===

x: 4.834317784702803
args: (84.20045068581,)

Output: cdf single = x

cdf_single: 0.9999654192261611
_cdf = _cdfvec(x, *args) = [0.00608326 0.01702316 0.04217287 0.09231986 0.1784808  0.30517715
 0.46348677 0.63032737 0.77747828 0.8852122  0.95013091 0.98204217
 0.99471936 0.99874991 0.99976505 0.99996542]
prob_less_or_equal: [0.00608326 0.01702316 0.04217287 0.09231986 0.1784808  0.30517715
 0.46348677 0.63032737 0.77747828 0.8852122  0.95013091 0.98204217
 0.99471936 0.99874991 0.999      0.999     ]
cdf_over: [0.99391674 0.98297684 0.95782713 0.90768014 0.8215192  0.69482285
 0.53651323 0.36967263 0.22252172 0.1147878  0.04986909 0.01795783
 0.00528064 0.00125009 0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [ 6  7  4  8  6  7  9 10  4 10  4  6  7  6  8  2  9  6  6 10  2 10  3  5
  4  6 10  6  6  5  8  8  9  7]
player: myles turner
stat: reb
condition: 2 before
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.38262486457824707

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-72.92633065818296, 18.99110922588052, 66.32498275705142)

===Scipy CDF===

test_argsreduce = goodargs = [array([3.86635287, 3.91900909, 3.97166531, 4.02432153, 4.07697774,
       4.12963396, 4.18229018, 4.2349464 , 4.28760262, 4.34025884,
       4.39291506, 4.44557128, 4.49822749, 4.55088371, 4.60353993,
       4.65619615]), array([66.32498276, 66.32498276, 66.32498276, 66.32498276, 66.32498276,
       66.32498276, 66.32498276, 66.32498276, 66.32498276, 66.32498276,
       66.32498276, 66.32498276, 66.32498276, 66.32498276, 66.32498276,
       66.32498276])]

===Scipy _CDF===

x: [3.86635287 3.91900909 3.97166531 4.02432153 4.07697774 4.12963396
 4.18229018 4.2349464  4.28760262 4.34025884 4.39291506 4.44557128
 4.49822749 4.55088371 4.60353993 4.65619615]
args: (array([66.32498276, 66.32498276, 66.32498276, 66.32498276, 66.32498276,
       66.32498276, 66.32498276, 66.32498276, 66.32498276, 66.32498276,
       66.32498276, 66.32498276, 66.32498276, 66.32498276, 66.32498276,
       66.32498276]),)

===Scipy _CDF _Single===

x: 3.8663528699060787
args: (66.32498275705142,)

Output: cdf single = x

cdf_single: 0.006343658784493887

===Scipy _CDF _Single===

x: 3.9190090885663995
args: (66.32498275705142,)

Output: cdf single = x

cdf_single: 0.017697494735266685

===Scipy _CDF _Single===

x: 3.9716653072267203
args: (66.32498275705142,)

Output: cdf single = x

cdf_single: 0.04375940084809273

===Scipy _CDF _Single===

x: 4.024321525887041
args: (66.32498275705142,)

Output: cdf single = x

cdf_single: 0.09565316398541307

===Scipy _CDF _Single===

x: 4.076977744547362
args: (66.32498275705142,)

Output: cdf single = x

cdf_single: 0.18461843797757838

===Scipy _CDF _Single===

x: 4.129633963207683
args: (66.32498275705142,)

Output: cdf single = x

cdf_single: 0.31490714450225826

===Scipy _CDF _Single===

x: 4.182290181868003
args: (66.32498275705142,)

Output: cdf single = x

cdf_single: 0.47656000302803597

===Scipy _CDF _Single===

x: 4.234946400528324
args: (66.32498275705142,)

Output: cdf single = x

cdf_single: 0.6450117229205428

===Scipy _CDF _Single===

x: 4.287602619188645
args: (66.32498275705142,)

Output: cdf single = x

cdf_single: 0.7910993872252696

===Scipy _CDF _Single===

x: 4.340258837848966
args: (66.32498275705142,)

Output: cdf single = x

cdf_single: 0.8955287855836473

===Scipy _CDF _Single===

x: 4.3929150565092865
args: (66.32498275705142,)

Output: cdf single = x

cdf_single: 0.9564418877746816

===Scipy _CDF _Single===

x: 4.445571275169607
args: (66.32498275705142,)

Output: cdf single = x

cdf_single: 0.9851268468847418

===Scipy _CDF _Single===

x: 4.498227493829928
args: (66.32498275705142,)

Output: cdf single = x

cdf_single: 0.995910974189333

===Scipy _CDF _Single===

x: 4.550883712490249
args: (66.32498275705142,)

Output: cdf single = x

cdf_single: 0.999109675387545

===Scipy _CDF _Single===

x: 4.60353993115057
args: (66.32498275705142,)

Output: cdf single = x

cdf_single: 0.9998489615205098

===Scipy _CDF _Single===

x: 4.65619614981089
args: (66.32498275705142,)

Output: cdf single = x

cdf_single: 0.9999803620024171
_cdf = _cdfvec(x, *args) = [0.00634366 0.01769749 0.0437594  0.09565316 0.18461844 0.31490714
 0.47656    0.64501172 0.79109939 0.89552879 0.95644189 0.98512685
 0.99591097 0.99910968 0.99984896 0.99998036]
prob_less_or_equal: [0.00634366 0.01769749 0.0437594  0.09565316 0.18461844 0.31490714
 0.47656    0.64501172 0.79109939 0.89552879 0.95644189 0.98512685
 0.99591097 0.999      0.999      0.999     ]
cdf_over: [0.99365634 0.98230251 0.9562406  0.90434684 0.81538156 0.68509286
 0.52344    0.35498828 0.20890061 0.10447121 0.04355811 0.01487315
 0.00408903 0.001      0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [ 4  5  0  7  7  6 11 10 11  4  6  7  7  8  2  9  6  6  2 10  3  5  6  6
  5  8 10 11  9  6]
player: myles turner
stat: reb
condition: home
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.3082890510559082

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-116.75439315487853, 25.694131840625257, 121.96631070510497)

===Scipy CDF===

test_argsreduce = goodargs = [array([4.5634697 , 4.60238909, 4.64130849, 4.68022788, 4.71914727,
       4.75806666, 4.79698606, 4.83590545, 4.87482484, 4.91374423,
       4.95266363, 4.99158302, 5.03050241, 5.0694218 , 5.1083412 ,
       5.14726059]), array([121.96631071, 121.96631071, 121.96631071, 121.96631071,
       121.96631071, 121.96631071, 121.96631071, 121.96631071,
       121.96631071, 121.96631071, 121.96631071, 121.96631071,
       121.96631071, 121.96631071, 121.96631071, 121.96631071])]

===Scipy _CDF===

x: [4.5634697  4.60238909 4.64130849 4.68022788 4.71914727 4.75806666
 4.79698606 4.83590545 4.87482484 4.91374423 4.95266363 4.99158302
 5.03050241 5.0694218  5.1083412  5.14726059]
args: (array([121.96631071, 121.96631071, 121.96631071, 121.96631071,
       121.96631071, 121.96631071, 121.96631071, 121.96631071,
       121.96631071, 121.96631071, 121.96631071, 121.96631071,
       121.96631071, 121.96631071, 121.96631071, 121.96631071]),)

===Scipy _CDF _Single===

x: 4.563469701260208
args: (121.96631070510497,)

Output: cdf single = x

cdf_single: 0.005856866224814617

===Scipy _CDF _Single===

x: 4.602389093680343
args: (121.96631070510497,)

Output: cdf single = x

cdf_single: 0.016966111329959243

===Scipy _CDF _Single===

x: 4.641308486100479
args: (121.96631070510497,)

Output: cdf single = x

cdf_single: 0.043075813745436835

===Scipy _CDF _Single===

x: 4.680227878520615
args: (121.96631070510497,)

Output: cdf single = x

cdf_single: 0.09575985423694133

===Scipy _CDF _Single===

x: 4.719147270940751
args: (121.96631070510497,)

Output: cdf single = x

cdf_single: 0.18649282243422804

===Scipy _CDF _Single===

x: 4.758066663360887
args: (121.96631070510497,)

Output: cdf single = x

cdf_single: 0.31905297143833483

===Scipy _CDF _Single===

x: 4.796986055781022
args: (121.96631070510497,)

Output: cdf single = x

cdf_single: 0.48231129646261195

===Scipy _CDF _Single===

x: 4.835905448201158
args: (121.96631070510497,)

Output: cdf single = x

cdf_single: 0.6506950387871917

===Scipy _CDF _Single===

x: 4.874824840621294
args: (121.96631070510497,)

Output: cdf single = x

cdf_single: 0.7951478323476068

===Scipy _CDF _Single===

x: 4.91374423304143
args: (121.96631070510497,)

Output: cdf single = x

cdf_single: 0.8974951601979733

===Scipy _CDF _Single===

x: 4.9526636254615655
args: (121.96631070510497,)

Output: cdf single = x

cdf_single: 0.9569456338095865

===Scipy _CDF _Single===

x: 4.991583017881701
args: (121.96631070510497,)

Output: cdf single = x

cdf_single: 0.9850413043632524

===Scipy _CDF _Single===

x: 5.030502410301837
args: (121.96631070510497,)

Output: cdf single = x

cdf_single: 0.9957582928128944

===Scipy _CDF _Single===

x: 5.069421802721973
args: (121.96631070510497,)

Output: cdf single = x

cdf_single: 0.9990306398936238

===Scipy _CDF _Single===

x: 5.108341195142109
args: (121.96631070510497,)

Output: cdf single = x

cdf_single: 0.9998236079006384

===Scipy _CDF _Single===

x: 5.147260587562244
args: (121.96631070510497,)

Output: cdf single = x

cdf_single: 0.9999747421352904
_cdf = _cdfvec(x, *args) = [0.00585687 0.01696611 0.04307581 0.09575985 0.18649282 0.31905297
 0.4823113  0.65069504 0.79514783 0.89749516 0.95694563 0.9850413
 0.99575829 0.99903064 0.99982361 0.99997474]
prob_less_or_equal: [0.00585687 0.01696611 0.04307581 0.09575985 0.18649282 0.31905297
 0.4823113  0.65069504 0.79514783 0.89749516 0.95694563 0.9850413
 0.99575829 0.999      0.999      0.999     ]
cdf_over: [0.99414313 0.98303389 0.95692419 0.90424015 0.81350718 0.68094703
 0.5176887  0.34930496 0.20485217 0.10250484 0.04305437 0.0149587
 0.00424171 0.001      0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [ 4  5  0  7  7  6 11 10 11  4  6  7  7  8  2  9  6  6  2 10  3  5  6  6
  5  8 10 11  9  6]
player: myles turner
stat: reb
condition: Indianapolis IN
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.4499547481536865

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-130.4854282056835, 27.72214867188508, 140.80080310714837)

===Scipy CDF===

test_argsreduce = goodargs = [array([4.72493777, 4.76101001, 4.79708225, 4.83315449, 4.86922673,
       4.90529897, 4.94137121, 4.97744345, 5.01351569, 5.04958793,
       5.08566017, 5.12173241, 5.15780465, 5.19387689, 5.22994913,
       5.26602137]), array([140.80080311, 140.80080311, 140.80080311, 140.80080311,
       140.80080311, 140.80080311, 140.80080311, 140.80080311,
       140.80080311, 140.80080311, 140.80080311, 140.80080311,
       140.80080311, 140.80080311, 140.80080311, 140.80080311])]

===Scipy _CDF===

x: [4.72493777 4.76101001 4.79708225 4.83315449 4.86922673 4.90529897
 4.94137121 4.97744345 5.01351569 5.04958793 5.08566017 5.12173241
 5.15780465 5.19387689 5.22994913 5.26602137]
args: (array([140.80080311, 140.80080311, 140.80080311, 140.80080311,
       140.80080311, 140.80080311, 140.80080311, 140.80080311,
       140.80080311, 140.80080311, 140.80080311, 140.80080311,
       140.80080311, 140.80080311, 140.80080311, 140.80080311]),)

===Scipy _CDF _Single===

x: 4.724937765683536
args: (140.80080310714837,)

Output: cdf single = x

cdf_single: 0.005931599222577582

===Scipy _CDF _Single===

x: 4.761010005676036
args: (140.80080310714837,)

Output: cdf single = x

cdf_single: 0.017174413563424012

===Scipy _CDF _Single===

x: 4.797082245668536
args: (140.80080310714837,)

Output: cdf single = x

cdf_single: 0.043537920760984554

===Scipy _CDF _Single===

x: 4.833154485661035
args: (140.80080310714837,)

Output: cdf single = x

cdf_single: 0.09657271170737892

===Scipy _CDF _Single===

x: 4.869226725653536
args: (140.80080310714837,)

Output: cdf single = x

cdf_single: 0.1876009836890174

===Scipy _CDF _Single===

x: 4.905298965646035
args: (140.80080310714837,)

Output: cdf single = x

cdf_single: 0.32015557129850947

===Scipy _CDF _Single===

x: 4.941371205638535
args: (140.80080310714837,)

Output: cdf single = x

cdf_single: 0.4829633603371055

===Scipy _CDF _Single===

x: 4.977443445631035
args: (140.80080310714837,)

Output: cdf single = x

cdf_single: 0.650606764258786

===Scipy _CDF _Single===

x: 5.013515685623535
args: (140.80080310714837,)

Output: cdf single = x

cdf_single: 0.7944215713927852

===Scipy _CDF _Single===

x: 5.049587925616034
args: (140.80080310714837,)

Output: cdf single = x

cdf_single: 0.8965398042042225

===Scipy _CDF _Single===

x: 5.085660165608535
args: (140.80080310714837,)

Output: cdf single = x

cdf_single: 0.956155327245225

===Scipy _CDF _Single===

x: 5.121732405601034
args: (140.80080310714837,)

Output: cdf single = x

cdf_single: 0.9845696791865622

===Scipy _CDF _Single===

x: 5.157804645593535
args: (140.80080310714837,)

Output: cdf single = x

cdf_single: 0.9955468699540178

===Scipy _CDF _Single===

x: 5.193876885586034
args: (140.80080310714837,)

Output: cdf single = x

cdf_single: 0.9989584343430082

===Scipy _CDF _Single===

x: 5.229949125578534
args: (140.80080310714837,)

Output: cdf single = x

cdf_single: 0.9998047528407571

===Scipy _CDF _Single===

x: 5.266021365571034
args: (140.80080310714837,)

Output: cdf single = x

cdf_single: 0.9999709830431094
_cdf = _cdfvec(x, *args) = [0.0059316  0.01717441 0.04353792 0.09657271 0.18760098 0.32015557
 0.48296336 0.65060676 0.79442157 0.8965398  0.95615533 0.98456968
 0.99554687 0.99895843 0.99980475 0.99997098]
prob_less_or_equal: [0.0059316  0.01717441 0.04353792 0.09657271 0.18760098 0.32015557
 0.48296336 0.65060676 0.79442157 0.8965398  0.95615533 0.98456968
 0.99554687 0.99895843 0.999      0.999     ]
cdf_over: [0.9940684  0.98282559 0.95646208 0.90342729 0.81239902 0.67984443
 0.51703664 0.34939324 0.20557843 0.1034602  0.04384467 0.01543032
 0.00445313 0.00104157 0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [5 7]
player: myles turner
stat: reb
condition: hou
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.4498472213745117

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-46.72533894943083, 14.010372351318853, 43.59345495933126)

===Scipy CDF===

test_argsreduce = goodargs = [array([3.3707411 , 3.44211679, 3.51349248, 3.58486817, 3.65624386,
       3.72761955, 3.79899525, 3.87037094, 3.94174663, 4.01312232,
       4.08449801, 4.1558737 , 4.22724939, 4.29862508, 4.37000077,
       4.44137646]), array([43.59345496, 43.59345496, 43.59345496, 43.59345496, 43.59345496,
       43.59345496, 43.59345496, 43.59345496, 43.59345496, 43.59345496,
       43.59345496, 43.59345496, 43.59345496, 43.59345496, 43.59345496,
       43.59345496])]

===Scipy _CDF===

x: [3.3707411  3.44211679 3.51349248 3.58486817 3.65624386 3.72761955
 3.79899525 3.87037094 3.94174663 4.01312232 4.08449801 4.1558737
 4.22724939 4.29862508 4.37000077 4.44137646]
args: (array([43.59345496, 43.59345496, 43.59345496, 43.59345496, 43.59345496,
       43.59345496, 43.59345496, 43.59345496, 43.59345496, 43.59345496,
       43.59345496, 43.59345496, 43.59345496, 43.59345496, 43.59345496,
       43.59345496]),)

===Scipy _CDF _Single===

x: 3.370741102750586
args: (43.59345495933126,)

Output: cdf single = x

cdf_single: 0.007179209134098859

===Scipy _CDF _Single===

x: 3.442116793197947
args: (43.59345495933126,)

Output: cdf single = x

cdf_single: 0.021176414541431553

===Scipy _CDF _Single===

x: 3.513492483645308
args: (43.59345495933126,)

Output: cdf single = x

cdf_single: 0.054532715275816844

===Scipy _CDF _Single===

x: 3.584868174092669
args: (43.59345495933126,)

Output: cdf single = x

cdf_single: 0.12202121233439538

===Scipy _CDF _Single===

x: 3.65624386454003
args: (43.59345495933126,)

Output: cdf single = x

cdf_single: 0.2365993558536533

===Scipy _CDF _Single===

x: 3.727619554987391
args: (43.59345495933126,)

Output: cdf single = x

cdf_single: 0.3977922224130085

===Scipy _CDF _Single===

x: 3.7989952454347518
args: (43.59345495933126,)

Output: cdf single = x

cdf_single: 0.5832036594408345

===Scipy _CDF _Single===

x: 3.870370935882113
args: (43.59345495933126,)

Output: cdf single = x

cdf_single: 0.7550912945138639

===Scipy _CDF _Single===

x: 3.941746626329474
args: (43.59345495933126,)

Output: cdf single = x

cdf_single: 0.8815670689891201

===Scipy _CDF _Single===

x: 4.013122316776835
args: (43.59345495933126,)

Output: cdf single = x

cdf_single: 0.9542269917672087

===Scipy _CDF _Single===

x: 4.084498007224196
args: (43.59345495933126,)

Output: cdf single = x

cdf_single: 0.986250803523003

===Scipy _CDF _Single===

x: 4.155873697671557
args: (43.59345495933126,)

Output: cdf single = x

cdf_single: 0.9968765556945869

===Scipy _CDF _Single===

x: 4.227249388118918
args: (43.59345495933126,)

Output: cdf single = x

cdf_single: 0.9994777727062799

===Scipy _CDF _Single===

x: 4.298625078566279
args: (43.59345495933126,)

Output: cdf single = x

cdf_single: 0.9999374932555654

===Scipy _CDF _Single===

x: 4.37000076901364
args: (43.59345495933126,)

Output: cdf single = x

cdf_single: 0.9999947951391127

===Scipy _CDF _Single===

x: 4.441376459461001
args: (43.59345495933126,)

Output: cdf single = x

cdf_single: 0.999999707366485
_cdf = _cdfvec(x, *args) = [0.00717921 0.02117641 0.05453272 0.12202121 0.23659936 0.39779222
 0.58320366 0.75509129 0.88156707 0.95422699 0.9862508  0.99687656
 0.99947777 0.99993749 0.9999948  0.99999971]
prob_less_or_equal: [0.00717921 0.02117641 0.05453272 0.12202121 0.23659936 0.39779222
 0.58320366 0.75509129 0.88156707 0.95422699 0.9862508  0.99687656
 0.999      0.999      0.999      0.999     ]
cdf_over: [0.99282079 0.97882359 0.94546728 0.87797879 0.76340064 0.60220778
 0.41679634 0.24490871 0.11843293 0.04577301 0.0137492  0.00312344
 0.001      0.001      0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [ 5  0  3  2  6  7  7  7  3  6  9 11 10 11  4  4 10  6  9  8  7  7  6  8
  2  9  6  8  6  6 10  2 10  3  5  5  8  4  6 10  7  6  6  5  8  7  8 10
 11  9  6  7  8  7]
player: myles turner
stat: reb
condition: B Mathurin SG bench
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.30301880836486816

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-183.34962656322998, 35.21553831067824, 221.10663309708576)

===Scipy CDF===

test_argsreduce = goodargs = [array([5.22069616, 5.24909271, 5.27748927, 5.30588583, 5.33428238,
       5.36267894, 5.39107549, 5.41947205, 5.4478686 , 5.47626516,
       5.50466172, 5.53305827, 5.56145483, 5.58985138, 5.61824794,
       5.6466445 ]), array([221.1066331, 221.1066331, 221.1066331, 221.1066331, 221.1066331,
       221.1066331, 221.1066331, 221.1066331, 221.1066331, 221.1066331,
       221.1066331, 221.1066331, 221.1066331, 221.1066331, 221.1066331,
       221.1066331])]

===Scipy _CDF===

x: [5.22069616 5.24909271 5.27748927 5.30588583 5.33428238 5.36267894
 5.39107549 5.41947205 5.4478686  5.47626516 5.50466172 5.53305827
 5.56145483 5.58985138 5.61824794 5.6466445 ]
args: (array([221.1066331, 221.1066331, 221.1066331, 221.1066331, 221.1066331,
       221.1066331, 221.1066331, 221.1066331, 221.1066331, 221.1066331,
       221.1066331, 221.1066331, 221.1066331, 221.1066331, 221.1066331,
       221.1066331]),)

===Scipy _CDF _Single===

x: 5.220696158078666
args: (221.10663309708576,)

Output: cdf single = x

cdf_single: 0.005431188613778062

===Scipy _CDF _Single===

x: 5.249092713916541
args: (221.10663309708576,)

Output: cdf single = x

cdf_single: 0.015895567685265757

===Scipy _CDF _Single===

x: 5.277489269754416
args: (221.10663309708576,)

Output: cdf single = x

cdf_single: 0.040645011181119586

===Scipy _CDF _Single===

x: 5.305885825592291
args: (221.10663309708576,)

Output: cdf single = x

cdf_single: 0.09082196709946107

===Scipy _CDF _Single===

x: 5.3342823814301665
args: (221.10663309708576,)

Output: cdf single = x

cdf_single: 0.17765053694705477

===Scipy _CDF _Single===

x: 5.362678937268041
args: (221.10663309708576,)

Output: cdf single = x

cdf_single: 0.3053300590837521

===Scipy _CDF _Single===

x: 5.391075493105916
args: (221.10663309708576,)

Output: cdf single = x

cdf_single: 0.46415081116286594

===Scipy _CDF _Single===

x: 5.419472048943791
args: (221.10663309708576,)

Output: cdf single = x

cdf_single: 0.6304890406012862

===Scipy _CDF _Single===

x: 5.447868604781666
args: (221.10663309708576,)

Output: cdf single = x

cdf_single: 0.7764676576244269

===Scipy _CDF _Single===

x: 5.476265160619541
args: (221.10663309708576,)

Output: cdf single = x

cdf_single: 0.8832875182014305

===Scipy _CDF _Single===

x: 5.504661716457416
args: (221.10663309708576,)

Output: cdf single = x

cdf_single: 0.948131670662093

===Scipy _CDF _Single===

x: 5.533058272295291
args: (221.10663309708576,)

Output: cdf single = x

cdf_single: 0.9806157589551618

===Scipy _CDF _Single===

x: 5.561454828133166
args: (221.10663309708576,)

Output: cdf single = x

cdf_single: 0.9939727411527303

===Scipy _CDF _Single===

x: 5.589851383971041
args: (221.10663309708576,)

Output: cdf single = x

cdf_single: 0.9984557479242688

===Scipy _CDF _Single===

x: 5.618247939808916
args: (221.10663309708576,)

Output: cdf single = x

cdf_single: 0.9996768873301093

===Scipy _CDF _Single===

x: 5.6466444956467905
args: (221.10663309708576,)

Output: cdf single = x

cdf_single: 0.999945254949548
_cdf = _cdfvec(x, *args) = [0.00543119 0.01589557 0.04064501 0.09082197 0.17765054 0.30533006
 0.46415081 0.63048904 0.77646766 0.88328752 0.94813167 0.98061576
 0.99397274 0.99845575 0.99967689 0.99994525]
prob_less_or_equal: [0.00543119 0.01589557 0.04064501 0.09082197 0.17765054 0.30533006
 0.46415081 0.63048904 0.77646766 0.88328752 0.94813167 0.98061576
 0.99397274 0.99845575 0.999      0.999     ]
cdf_over: [0.99456881 0.98410443 0.95935499 0.90917803 0.82234946 0.69466994
 0.53584919 0.36951096 0.22353234 0.11671248 0.05186833 0.01938424
 0.00602726 0.00154425 0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [5 7]
player: myles turner
stat: reb
condition: J Smith Jr PF opp starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.3994028568267822

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-113.01586587022481, 24.402901282647292, 131.75910347220787)

===Scipy CDF===

test_argsreduce = goodargs = [array([4.65173643, 4.69271516, 4.7336939 , 4.77467263, 4.81565136,
       4.8566301 , 4.89760883, 4.93858757, 4.9795663 , 5.02054503,
       5.06152377, 5.1025025 , 5.14348124, 5.18445997, 5.2254387 ,
       5.26641744]), array([131.75910347, 131.75910347, 131.75910347, 131.75910347,
       131.75910347, 131.75910347, 131.75910347, 131.75910347,
       131.75910347, 131.75910347, 131.75910347, 131.75910347,
       131.75910347, 131.75910347, 131.75910347, 131.75910347])]

===Scipy _CDF===

x: [4.65173643 4.69271516 4.7336939  4.77467263 4.81565136 4.8566301
 4.89760883 4.93858757 4.9795663  5.02054503 5.06152377 5.1025025
 5.14348124 5.18445997 5.2254387  5.26641744]
args: (array([131.75910347, 131.75910347, 131.75910347, 131.75910347,
       131.75910347, 131.75910347, 131.75910347, 131.75910347,
       131.75910347, 131.75910347, 131.75910347, 131.75910347,
       131.75910347, 131.75910347, 131.75910347, 131.75910347]),)

===Scipy _CDF _Single===

x: 4.651736429018177
args: (131.75910347220787,)

Output: cdf single = x

cdf_single: 0.006123149943505953

===Scipy _CDF _Single===

x: 4.692715162998104
args: (131.75910347220787,)

Output: cdf single = x

cdf_single: 0.01942572000454208

===Scipy _CDF _Single===

x: 4.733693896978029
args: (131.75910347220787,)

Output: cdf single = x

cdf_single: 0.052541119052886755

===Scipy _CDF _Single===

x: 4.774672630957956
args: (131.75910347220787,)

Output: cdf single = x

cdf_single: 0.12106649580425309

===Scipy _CDF _Single===

x: 4.815651364937882
args: (131.75910347220787,)

Output: cdf single = x

cdf_single: 0.23806112124521858

===Scipy _CDF _Single===

x: 4.856630098917808
args: (131.75910347220787,)

Output: cdf single = x

cdf_single: 0.4015965082123274

===Scipy _CDF _Single===

x: 4.897608832897734
args: (131.75910347220787,)

Output: cdf single = x

cdf_single: 0.5872457463587137

===Scipy _CDF _Single===

x: 4.9385875668776595
args: (131.75910347220787,)

Output: cdf single = x

cdf_single: 0.756981496731222

===Scipy _CDF _Single===

x: 4.979566300857586
args: (131.75910347220787,)

Output: cdf single = x

cdf_single: 0.8808800932558307

===Scipy _CDF _Single===

x: 5.020545034837512
args: (131.75910347220787,)

Output: cdf single = x

cdf_single: 0.9524332743644703

===Scipy _CDF _Single===

x: 5.061523768817438
args: (131.75910347220787,)

Output: cdf single = x

cdf_single: 0.9848187672589631

===Scipy _CDF _Single===

x: 5.102502502797364
args: (131.75910347220787,)

Output: cdf single = x

cdf_single: 0.9961935531240366

===Scipy _CDF _Single===

x: 5.143481236777291
args: (131.75910347220787,)

Output: cdf single = x

cdf_single: 0.9992620869075342

===Scipy _CDF _Single===

x: 5.184459970757216
args: (131.75910347220787,)

Output: cdf single = x

cdf_single: 0.9998910678485877

===Scipy _CDF _Single===

x: 5.225438704737142
args: (131.75910347220787,)

Output: cdf single = x

cdf_single: 0.999987934692097

===Scipy _CDF _Single===

x: 5.266417438717069
args: (131.75910347220787,)

Output: cdf single = x

cdf_single: 0.9999990119523678
_cdf = _cdfvec(x, *args) = [0.00612315 0.01942572 0.05254112 0.1210665  0.23806112 0.40159651
 0.58724575 0.7569815  0.88088009 0.95243327 0.98481877 0.99619355
 0.99926209 0.99989107 0.99998793 0.99999901]
prob_less_or_equal: [0.00612315 0.01942572 0.05254112 0.1210665  0.23806112 0.40159651
 0.58724575 0.7569815  0.88088009 0.95243327 0.98481877 0.99619355
 0.999      0.999      0.999      0.999     ]
cdf_over: [0.99387685 0.98057428 0.94745888 0.8789335  0.76193888 0.59840349
 0.41275425 0.2430185  0.11911991 0.04756673 0.01518123 0.00380645
 0.001      0.001      0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [5 7]
player: myles turner
stat: reb
condition: A Sengun C opp starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.3478829860687256

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-99.02402927866251, 22.343578350018163, 110.49888783875896)

===Scipy CDF===

test_argsreduce = goodargs = [array([4.45425646, 4.49901205, 4.54376764, 4.58852323, 4.63327882,
       4.67803441, 4.72278999, 4.76754558, 4.81230117, 4.85705676,
       4.90181235, 4.94656794, 4.99132353, 5.03607911, 5.0808347 ,
       5.12559029]), array([110.49888784, 110.49888784, 110.49888784, 110.49888784,
       110.49888784, 110.49888784, 110.49888784, 110.49888784,
       110.49888784, 110.49888784, 110.49888784, 110.49888784,
       110.49888784, 110.49888784, 110.49888784, 110.49888784])]

===Scipy _CDF===

x: [4.45425646 4.49901205 4.54376764 4.58852323 4.63327882 4.67803441
 4.72278999 4.76754558 4.81230117 4.85705676 4.90181235 4.94656794
 4.99132353 5.03607911 5.0808347  5.12559029]
args: (array([110.49888784, 110.49888784, 110.49888784, 110.49888784,
       110.49888784, 110.49888784, 110.49888784, 110.49888784,
       110.49888784, 110.49888784, 110.49888784, 110.49888784,
       110.49888784, 110.49888784, 110.49888784, 110.49888784]),)

===Scipy _CDF _Single===

x: 4.454256463293025
args: (110.49888783875896,)

Output: cdf single = x

cdf_single: 0.006248595488199055

===Scipy _CDF _Single===

x: 4.499012051871307
args: (110.49888783875896,)

Output: cdf single = x

cdf_single: 0.019638510967056565

===Scipy _CDF _Single===

x: 4.5437676404495875
args: (110.49888783875896,)

Output: cdf single = x

cdf_single: 0.05278518302330878

===Scipy _CDF _Single===

x: 4.588523229027868
args: (110.49888783875896,)

Output: cdf single = x

cdf_single: 0.12117991653393367

===Scipy _CDF _Single===

x: 4.63327881760615
args: (110.49888783875896,)

Output: cdf single = x

cdf_single: 0.2378706768388354

===Scipy _CDF _Single===

x: 4.67803440618443
args: (110.49888783875896,)

Output: cdf single = x

cdf_single: 0.40111628833008045

===Scipy _CDF _Single===

x: 4.722789994762712
args: (110.49888783875896,)

Output: cdf single = x

cdf_single: 0.5867427946892034

===Scipy _CDF _Single===

x: 4.7675455833409925
args: (110.49888783875896,)

Output: cdf single = x

cdf_single: 0.7567501011446216

===Scipy _CDF _Single===

x: 4.812301171919273
args: (110.49888783875896,)

Output: cdf single = x

cdf_single: 0.8809679462766034

===Scipy _CDF _Single===

x: 4.857056760497555
args: (110.49888783875896,)

Output: cdf single = x

cdf_single: 0.9526585683356603

===Scipy _CDF _Single===

x: 4.901812349075835
args: (110.49888783875896,)

Output: cdf single = x

cdf_single: 0.9850013683383115

===Scipy _CDF _Single===

x: 4.946567937654117
args: (110.49888783875896,)

Output: cdf single = x

cdf_single: 0.9962835689219027

===Scipy _CDF _Single===

x: 4.991323526232398
args: (110.49888783875896,)

Output: cdf single = x

cdf_single: 0.9992920707886611

===Scipy _CDF _Single===

x: 5.036079114810678
args: (110.49888783875896,)

Output: cdf single = x

cdf_single: 0.9998980350617586

===Scipy _CDF _Single===

x: 5.08083470338896
args: (110.49888783875896,)

Output: cdf single = x

cdf_single: 0.9999890744647818

===Scipy _CDF _Single===

x: 5.1255902919672405
args: (110.49888783875896,)

Output: cdf single = x

cdf_single: 0.9999991431415433
_cdf = _cdfvec(x, *args) = [0.0062486  0.01963851 0.05278518 0.12117992 0.23787068 0.40111629
 0.58674279 0.7567501  0.88096795 0.95265857 0.98500137 0.99628357
 0.99929207 0.99989804 0.99998907 0.99999914]
prob_less_or_equal: [0.0062486  0.01963851 0.05278518 0.12117992 0.23787068 0.40111629
 0.58674279 0.7567501  0.88096795 0.95265857 0.98500137 0.99628357
 0.999      0.999      0.999      0.999     ]
cdf_over: [0.9937514  0.98036149 0.94721482 0.87882008 0.76212932 0.59888371
 0.41325721 0.2432499  0.11903205 0.04734143 0.01499863 0.00371643
 0.001      0.001      0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [6 6 6]
player: myles turner
stat: reb
condition: tue
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.35935306549072266

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-38.84005778689947, 12.62075159352507, 35.41583964534409)

===Scipy CDF===

test_argsreduce = goodargs = [array([3.11709303, 3.19632761, 3.27556219, 3.35479678, 3.43403136,
       3.51326595, 3.59250053, 3.67173511, 3.7509697 , 3.83020428,
       3.90943887, 3.98867345, 4.06790803, 4.14714262, 4.2263772 ,
       4.30561178]), array([35.41583965, 35.41583965, 35.41583965, 35.41583965, 35.41583965,
       35.41583965, 35.41583965, 35.41583965, 35.41583965, 35.41583965,
       35.41583965, 35.41583965, 35.41583965, 35.41583965, 35.41583965,
       35.41583965])]

===Scipy _CDF===

x: [3.11709303 3.19632761 3.27556219 3.35479678 3.43403136 3.51326595
 3.59250053 3.67173511 3.7509697  3.83020428 3.90943887 3.98867345
 4.06790803 4.14714262 4.2263772  4.30561178]
args: (array([35.41583965, 35.41583965, 35.41583965, 35.41583965, 35.41583965,
       35.41583965, 35.41583965, 35.41583965, 35.41583965, 35.41583965,
       35.41583965, 35.41583965, 35.41583965, 35.41583965, 35.41583965,
       35.41583965]),)

===Scipy _CDF _Single===

x: 3.117093026938462
args: (35.41583964534409,)

Output: cdf single = x

cdf_single: 0.007472021124949216

===Scipy _CDF _Single===

x: 3.1963276107577836
args: (35.41583964534409,)

Output: cdf single = x

cdf_single: 0.021647961432401823

===Scipy _CDF _Single===

x: 3.2755621945771054
args: (35.41583964534409,)

Output: cdf single = x

cdf_single: 0.05506532029931217

===Scipy _CDF _Single===

x: 3.3547967783964268
args: (35.41583964534409,)

Output: cdf single = x

cdf_single: 0.12229191306078974

===Scipy _CDF _Single===

x: 3.4340313622157486
args: (35.41583964534409,)

Output: cdf single = x

cdf_single: 0.23625191611140905

===Scipy _CDF _Single===

x: 3.5132659460350704
args: (35.41583964534409,)

Output: cdf single = x

cdf_single: 0.3968255842315606

===Scipy _CDF _Single===

x: 3.592500529854392
args: (35.41583964534409,)

Output: cdf single = x

cdf_single: 0.5821434893708812

===Scipy _CDF _Single===

x: 3.6717351136737135
args: (35.41583964534409,)

Output: cdf single = x

cdf_single: 0.7545682339848515

===Scipy _CDF _Single===

x: 3.7509696974930353
args: (35.41583964534409,)

Output: cdf single = x

cdf_single: 0.8817155387854896

===Scipy _CDF _Single===

x: 3.830204281312357
args: (35.41583964534409,)

Output: cdf single = x

cdf_single: 0.9546697780585974

===Scipy _CDF _Single===

x: 3.909438865131679
args: (35.41583964534409,)

Output: cdf single = x

cdf_single: 0.9866009169334755

===Scipy _CDF _Single===

x: 3.9886734489510007
args: (35.41583964534409,)

Output: cdf single = x

cdf_single: 0.9970361086178501

===Scipy _CDF _Single===

x: 4.0679080327703225
args: (35.41583964534409,)

Output: cdf single = x

cdf_single: 0.9995241716644172

===Scipy _CDF _Single===

x: 4.147142616589644
args: (35.41583964534409,)

Output: cdf single = x

cdf_single: 0.9999462818696221

===Scipy _CDF _Single===

x: 4.226377200408965
args: (35.41583964534409,)

Output: cdf single = x

cdf_single: 0.9999958740269618

===Scipy _CDF _Single===

x: 4.3056117842282875
args: (35.41583964534409,)

Output: cdf single = x

cdf_single: 0.9999997917865537
_cdf = _cdfvec(x, *args) = [0.00747202 0.02164796 0.05506532 0.12229191 0.23625192 0.39682558
 0.58214349 0.75456823 0.88171554 0.95466978 0.98660092 0.99703611
 0.99952417 0.99994628 0.99999587 0.99999979]
prob_less_or_equal: [0.00747202 0.02164796 0.05506532 0.12229191 0.23625192 0.39682558
 0.58214349 0.75456823 0.88171554 0.95466978 0.98660092 0.99703611
 0.999      0.999      0.999      0.999     ]
cdf_over: [0.99252798 0.97835204 0.94493468 0.87770809 0.76374808 0.60317442
 0.41785651 0.24543177 0.11828446 0.04533022 0.01339908 0.00296389
 0.001      0.001      0.001      0.001     ]

===Test Distribute All Probs===

cond_data: [ 7  6  9 11 10  4  6  6  2  8  6  2  6  5  7  8 10 11  7]
player: myles turner
stat: reb
condition: 10-14 prev
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 0.44472694396972656

===Test Generate CDF Over===

vals: [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
model_name: loggamma
sample_fit_params: (-118.62979550720343, 26.394275269884712, 116.75781435726141)

===Scipy CDF===

test_argsreduce = goodargs = [array([4.51347094, 4.55135795, 4.58924495, 4.62713195, 4.66501896,
       4.70290596, 4.74079296, 4.77867997, 4.81656697, 4.85445398,
       4.89234098, 4.93022798, 4.96811499, 5.00600199, 5.04388899,
       5.081776  ]), array([116.75781436, 116.75781436, 116.75781436, 116.75781436,
       116.75781436, 116.75781436, 116.75781436, 116.75781436,
       116.75781436, 116.75781436, 116.75781436, 116.75781436,
       116.75781436, 116.75781436, 116.75781436, 116.75781436])]

===Scipy _CDF===

x: [4.51347094 4.55135795 4.58924495 4.62713195 4.66501896 4.70290596
 4.74079296 4.77867997 4.81656697 4.85445398 4.89234098 4.93022798
 4.96811499 5.00600199 5.04388899 5.081776  ]
args: (array([116.75781436, 116.75781436, 116.75781436, 116.75781436,
       116.75781436, 116.75781436, 116.75781436, 116.75781436,
       116.75781436, 116.75781436, 116.75781436, 116.75781436,
       116.75781436, 116.75781436, 116.75781436, 116.75781436]),)

===Scipy _CDF _Single===

x: 4.513470943569643
args: (116.75781435726141,)

Output: cdf single = x

cdf_single: 0.005730578773007155

===Scipy _CDF _Single===

x: 4.551357947087446
args: (116.75781435726141,)

Output: cdf single = x

cdf_single: 0.015841579358666636

===Scipy _CDF _Single===

x: 4.5892449506052495
args: (116.75781435726141,)

Output: cdf single = x

cdf_single: 0.03888302222456608

===Scipy _CDF _Single===

x: 4.627131954123053
args: (116.75781435726141,)

Output: cdf single = x

cdf_single: 0.08464894082749055

===Scipy _CDF _Single===

x: 4.665018957640857
args: (116.75781435726141,)

Output: cdf single = x

cdf_single: 0.16347101922580784

===Scipy _CDF _Single===

x: 4.7029059611586606
args: (116.75781435726141,)

Output: cdf single = x

cdf_single: 0.28055577243329016

===Scipy _CDF _Single===

x: 4.740792964676464
args: (116.75781435726141,)

Output: cdf single = x

cdf_single: 0.4297277423864009

===Scipy _CDF _Single===

x: 4.778679968194268
args: (116.75781435726141,)

Output: cdf single = x

cdf_single: 0.5917992703995076

===Scipy _CDF _Single===

x: 4.816566971712072
args: (116.75781435726141,)

Output: cdf single = x

cdf_single: 0.7410662768679982

===Scipy _CDF _Single===

x: 4.854453975229875
args: (116.75781435726141,)

Output: cdf single = x

cdf_single: 0.8568816453039114

===Scipy _CDF _Single===

x: 4.892340978747679
args: (116.75781435726141,)

Output: cdf single = x

cdf_single: 0.9320993104877845

===Scipy _CDF _Single===

x: 4.930227982265483
args: (116.75781435726141,)

Output: cdf single = x

cdf_single: 0.9727178622345762

===Scipy _CDF _Single===

x: 4.968114985783286
args: (116.75781435726141,)

Output: cdf single = x

cdf_single: 0.9908299363629661

===Scipy _CDF _Single===

x: 5.006001989301089
args: (116.75781435726141,)

Output: cdf single = x

cdf_single: 0.9974509203582804

===Scipy _CDF _Single===

x: 5.043888992818894
args: (116.75781435726141,)

Output: cdf single = x

cdf_single: 0.999420331445132

===Scipy _CDF _Single===

x: 5.081775996336697
args: (116.75781435726141,)

Output: cdf single = x

cdf_single: 0.9998932975175525
_cdf = _cdfvec(x, *args) = [0.00573058 0.01584158 0.03888302 0.08464894 0.16347102 0.28055577
 0.42972774 0.59179927 0.74106628 0.85688165 0.93209931 0.97271786
 0.99082994 0.99745092 0.99942033 0.9998933 ]
prob_less_or_equal: [0.00573058 0.01584158 0.03888302 0.08464894 0.16347102 0.28055577
 0.42972774 0.59179927 0.74106628 0.85688165 0.93209931 0.97271786
 0.99082994 0.99745092 0.999      0.999     ]
cdf_over: [0.99426942 0.98415842 0.96111698 0.91535106 0.83652898 0.71944423
 0.57027226 0.40820073 0.25893372 0.14311835 0.06790069 0.02728214
 0.00917006 0.00254908 0.001      0.001     ]

stat_name: ast
player_stat_model_name: skewnorm
player_stat_model_avg: 1.36
player_stat_model_max: 6.5

===Test Distribute All Probs===

cond_data: [0 3 5 2 3 1 0 1 3 1 1 1 1 2 1 0 0 1 3 1 0 1 0 2 0 0 1 0 2 1 1 2 2 1 0 2 3
 1 0 3 1 2 0 0 2 1 0 3 0 2 2 1 0 1 3 0 2 1 1 3 2 2]
player: myles turner
stat: ast
condition: all
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.7220532894134521

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.0182963496156171, 1.6636093777541054, 240.74051562075738)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.31154871, 0.91265135, 1.513754  , 2.11485665, 2.71595929,
       3.31706194, 3.91816459]), array([240.74051562, 240.74051562, 240.74051562, 240.74051562,
       240.74051562, 240.74051562, 240.74051562])]

===Scipy _CDF===

x: [0.31154871 0.91265135 1.513754   2.11485665 2.71595929 3.31706194
 3.91816459]
args: (array([240.74051562, 240.74051562, 240.74051562, 240.74051562,
       240.74051562, 240.74051562, 240.74051562]),)

===Scipy _CDF _Single===

x: 0.3115487064128736
args: (240.74051562075738,)

Output: cdf single = x

cdf_single: 0.24461647847360893

===Scipy _CDF _Single===

x: 0.9126513530870665
args: (240.74051562075738,)

Output: cdf single = x

cdf_single: 0.638574063332811

===Scipy _CDF _Single===

x: 1.5137539997612595
args: (240.74051562075738,)

Output: cdf single = x

cdf_single: 0.8699117565100065

===Scipy _CDF _Single===

x: 2.1148566464354523
args: (240.74051562075738,)

Output: cdf single = x

cdf_single: 0.9655578328336042

===Scipy _CDF _Single===

x: 2.7159592931096452
args: (240.74051562075738,)

Output: cdf single = x

cdf_single: 0.9933915957175282

===Scipy _CDF _Single===

x: 3.317061939783838
args: (240.74051562075738,)

Output: cdf single = x

cdf_single: 0.9990903055345385

===Scipy _CDF _Single===

x: 3.918164586458031
args: (240.74051562075738,)

Output: cdf single = x

cdf_single: 0.9999107742231053
_cdf = _cdfvec(x, *args) = [0.24461648 0.63857406 0.86991176 0.96555783 0.9933916  0.99909031
 0.99991077]
prob_less_or_equal: [0.24461648 0.63857406 0.86991176 0.96555783 0.9933916  0.999
 0.999     ]
cdf_over: [0.75538352 0.36142594 0.13008824 0.03444217 0.0066084  0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [0 3 5 2 1 0 1 1 1 2 1 0 0 1 3 0 1 0 0 2 1 1 2 2 1 2 3 1 0 3 1 2 0 2 2 1 0
 3 0 2 1 1 3 2]
player: myles turner
stat: ast
condition: 0 lag
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.2602899074554443

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.01532707349220449, 1.7319357029325015, 110.36572483067495)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.29754342, 0.87493206, 1.4523207 , 2.02970934, 2.60709798,
       3.18448662, 3.76187526]), array([110.36572483, 110.36572483, 110.36572483, 110.36572483,
       110.36572483, 110.36572483, 110.36572483])]

===Scipy _CDF===

x: [0.29754342 0.87493206 1.4523207  2.02970934 2.60709798 3.18448662
 3.76187526]
args: (array([110.36572483, 110.36572483, 110.36572483, 110.36572483,
       110.36572483, 110.36572483, 110.36572483]),)

===Scipy _CDF _Single===

x: 0.29754342070531714
args: (110.36572483067495,)

Output: cdf single = x

cdf_single: 0.23394833679488752

===Scipy _CDF _Single===

x: 0.8749320606570238
args: (110.36572483067495,)

Output: cdf single = x

cdf_single: 0.6183891267205271

===Scipy _CDF _Single===

x: 1.4523207006087302
args: (110.36572483067495,)

Output: cdf single = x

cdf_single: 0.8535875457820238

===Scipy _CDF _Single===

x: 2.0297093405604367
args: (110.36572483067495,)

Output: cdf single = x

cdf_single: 0.9576139071035936

===Scipy _CDF _Single===

x: 2.6070979805121435
args: (110.36572483067495,)

Output: cdf single = x

cdf_single: 0.9908686772996017

===Scipy _CDF _Single===

x: 3.18448662046385
args: (110.36572483067495,)

Output: cdf single = x

cdf_single: 0.9985498898577636

===Scipy _CDF _Single===

x: 3.7618752604155565
args: (110.36572483067495,)

Output: cdf single = x

cdf_single: 0.999831355843868
_cdf = _cdfvec(x, *args) = [0.23394834 0.61838913 0.85358755 0.95761391 0.99086868 0.99854989
 0.99983136]
prob_less_or_equal: [0.23394834 0.61838913 0.85358755 0.95761391 0.99086868 0.99854989
 0.999     ]
cdf_over: [0.76605166 0.38161087 0.14641245 0.04238609 0.00913132 0.00145011
 0.001     ]

===Test Distribute All Probs===

cond_data: [0 5 2 1 0 1 1 1 2 1 1 3 0 1 0 2 1 1 2 3 1 2 0 2 1 0 3 0 2 1]
player: myles turner
stat: ast
condition: 7:00
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.303924798965454

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.01834261700286678, 1.6974826228011315, 220.34230220902396)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.30535901, 0.89446666, 1.48357431, 2.07268196, 2.66178961,
       3.25089727, 3.84000492]), array([220.34230221, 220.34230221, 220.34230221, 220.34230221,
       220.34230221, 220.34230221, 220.34230221])]

===Scipy _CDF===

x: [0.30535901 0.89446666 1.48357431 2.07268196 2.66178961 3.25089727
 3.84000492]
args: (array([220.34230221, 220.34230221, 220.34230221, 220.34230221,
       220.34230221, 220.34230221, 220.34230221]),)

===Scipy _CDF _Single===

x: 0.30535901224574313
args: (220.34230220902396,)

Output: cdf single = x

cdf_single: 0.23990726461824313

===Scipy _CDF _Single===

x: 0.8944666629325184
args: (220.34230220902396,)

Output: cdf single = x

cdf_single: 0.6289277411947423

===Scipy _CDF _Single===

x: 1.4835743136192934
args: (220.34230220902396,)

Output: cdf single = x

cdf_single: 0.8620781119902945

===Scipy _CDF _Single===

x: 2.0726819643060685
args: (220.34230220902396,)

Output: cdf single = x

cdf_single: 0.9617981126467792

===Scipy _CDF _Single===

x: 2.661789614992844
args: (220.34230220902396,)

Output: cdf single = x

cdf_single: 0.9922273557119397

===Scipy _CDF _Single===

x: 3.2508972656796193
args: (220.34230220902396,)

Output: cdf single = x

cdf_single: 0.9988495858011938

===Scipy _CDF _Single===

x: 3.8400049163663947
args: (220.34230220902396,)

Output: cdf single = x

cdf_single: 0.9998769681534813
_cdf = _cdfvec(x, *args) = [0.23990726 0.62892774 0.86207811 0.96179811 0.99222736 0.99884959
 0.99987697]
prob_less_or_equal: [0.23990726 0.62892774 0.86207811 0.96179811 0.99222736 0.99884959
 0.999     ]
cdf_over: [0.76009274 0.37107226 0.13792189 0.03820189 0.00777264 0.00115041
 0.001     ]

===Test Distribute All Probs===

cond_data: [0 3 5 2 3 1 1 0 1 0 0 0 0 2 1 1 2 2 2 1 0 3 1 0 2 1 0 0 2 2 1 1 2 2]
player: myles turner
stat: ast
condition: 2 after
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.3794169425964355

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.01782843090018651, 1.6475788218998175, 221.84090872418142)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.314296  , 0.92124723, 1.52819847, 2.1351497 , 2.74210094,
       3.34905217, 3.95600341]), array([221.84090872, 221.84090872, 221.84090872, 221.84090872,
       221.84090872, 221.84090872, 221.84090872])]

===Scipy _CDF===

x: [0.314296   0.92124723 1.52819847 2.1351497  2.74210094 3.34905217
 3.95600341]
args: (array([221.84090872, 221.84090872, 221.84090872, 221.84090872,
       221.84090872, 221.84090872, 221.84090872]),)

===Scipy _CDF _Single===

x: 0.3142959984779857
args: (221.84090872418142,)

Output: cdf single = x

cdf_single: 0.24670376048335743

===Scipy _CDF _Single===

x: 0.9212472330458734
args: (221.84090872418142,)

Output: cdf single = x

cdf_single: 0.6430786366260361

===Scipy _CDF _Single===

x: 1.5281984676137608
args: (221.84090872418142,)

Output: cdf single = x

cdf_single: 0.8735367308397052

===Scipy _CDF _Single===

x: 2.135149702181648
args: (221.84090872418142,)

Output: cdf single = x

cdf_single: 0.967251216115288

===Scipy _CDF _Single===

x: 2.742100936749536
args: (221.84090872418142,)

Output: cdf single = x

cdf_single: 0.9938952421028532

===Scipy _CDF _Single===

x: 3.3490521713174233
args: (221.84090872418142,)

Output: cdf single = x

cdf_single: 0.9991891147480902

===Scipy _CDF _Single===

x: 3.956003405885311
args: (221.84090872418142,)

Output: cdf single = x

cdf_single: 0.9999237859254109
_cdf = _cdfvec(x, *args) = [0.24670376 0.64307864 0.87353673 0.96725122 0.99389524 0.99918911
 0.99992379]
prob_less_or_equal: [0.24670376 0.64307864 0.87353673 0.96725122 0.99389524 0.999
 0.999     ]
cdf_over: [0.75329624 0.35692136 0.12646327 0.03274878 0.00610476 0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [0 5 2 3 1 0 1 3 1 1 1 1 2 1 0 0 1 3 1 0 1 0 2 0 0 1 0 2 1 1 2 2 1 0 2 3 1
 0 3 1 2 0 0 2 1 0 3 0 2 2 1 0 1 3 0 2 1 1 3 2 2]
player: myles turner
stat: ast
condition: 0-4 prev
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.4204530715942383

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.016284484767294733, 1.6264091746407237, 160.31963008525705)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.31743764, 0.93228906, 1.54714049, 2.16199191, 2.77684334,
       3.39169477, 4.00654619]), array([160.31963009, 160.31963009, 160.31963009, 160.31963009,
       160.31963009, 160.31963009, 160.31963009])]

===Scipy _CDF===

x: [0.31743764 0.93228906 1.54714049 2.16199191 2.77684334 3.39169477
 4.00654619]
args: (array([160.31963009, 160.31963009, 160.31963009, 160.31963009,
       160.31963009, 160.31963009, 160.31963009]),)

===Scipy _CDF _Single===

x: 0.3174376367382105
args: (160.31963008525705,)

Output: cdf single = x

cdf_single: 0.24908844721229248

===Scipy _CDF _Single===

x: 0.932289062561544
args: (160.31963008525705,)

Output: cdf single = x

cdf_single: 0.6488128413753838

===Scipy _CDF _Single===

x: 1.5471404883848776
args: (160.31963008525705,)

Output: cdf single = x

cdf_single: 0.8781706274217516

===Scipy _CDF _Single===

x: 2.161991914208211
args: (160.31963008525705,)

Output: cdf single = x

cdf_single: 0.9693812005503499

===Scipy _CDF _Single===

x: 2.776843340031544
args: (160.31963008525705,)

Output: cdf single = x

cdf_single: 0.9945110371864264

===Scipy _CDF _Single===

x: 3.391694765854878
args: (160.31963008525705,)

Output: cdf single = x

cdf_single: 0.9993053822502795

===Scipy _CDF _Single===

x: 4.006546191678211
args: (160.31963008525705,)

Output: cdf single = x

cdf_single: 0.9999383869196989
_cdf = _cdfvec(x, *args) = [0.24908845 0.64881284 0.87817063 0.9693812  0.99451104 0.99930538
 0.99993839]
prob_less_or_equal: [0.24908845 0.64881284 0.87817063 0.9693812  0.99451104 0.999
 0.999     ]
cdf_over: [0.75091155 0.35118716 0.12182937 0.0306188  0.00548896 0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [0 5 2 3 1 3 1 1 1 1 2 1 0 0 1 3 1 0 1 0 2 0 0 1 0 2 1 1 2 2 1 0 3 1 3 1 0
 2 3 0 2 2 1 2 2]
player: myles turner
stat: ast
condition: A Nesmith SF starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.2380998134613037

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.01899474873068838, 1.7261541807104943, 241.440010868799)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.30066477, 0.8799873 , 1.45930982, 2.03863235, 2.61795487,
       3.1972774 , 3.77659992]), array([241.44001087, 241.44001087, 241.44001087, 241.44001087,
       241.44001087, 241.44001087, 241.44001087])]

===Scipy _CDF===

x: [0.30066477 0.8799873  1.45930982 2.03863235 2.61795487 3.1972774
 3.77659992]
args: (array([241.44001087, 241.44001087, 241.44001087, 241.44001087,
       241.44001087, 241.44001087, 241.44001087]),)

===Scipy _CDF _Single===

x: 0.30066476942231646
args: (241.440010868799,)

Output: cdf single = x

cdf_single: 0.23632986369676143

===Scipy _CDF _Single===

x: 0.8799872952863703
args: (241.440010868799,)

Output: cdf single = x

cdf_single: 0.6211338079097134

===Scipy _CDF _Single===

x: 1.459309821150424
args: (241.440010868799,)

Output: cdf single = x

cdf_single: 0.8555201465046006

===Scipy _CDF _Single===

x: 2.038632347014478
args: (241.440010868799,)

Output: cdf single = x

cdf_single: 0.9585132656306271

===Scipy _CDF _Single===

x: 2.617954872878532
args: (241.440010868799,)

Output: cdf single = x

cdf_single: 0.9911541497391143

===Scipy _CDF _Single===

x: 3.1972773987425853
args: (241.440010868799,)

Output: cdf single = x

cdf_single: 0.9986126855816411

===Scipy _CDF _Single===

x: 3.7765999246066393
args: (241.440010868799,)

Output: cdf single = x

cdf_single: 0.9998410162060928
_cdf = _cdfvec(x, *args) = [0.23632986 0.62113381 0.85552015 0.95851327 0.99115415 0.99861269
 0.99984102]
prob_less_or_equal: [0.23632986 0.62113381 0.85552015 0.95851327 0.99115415 0.99861269
 0.999     ]
cdf_over: [0.76367014 0.37886619 0.14447985 0.04148673 0.00884585 0.00138731
 0.001     ]

===Test Distribute All Probs===

cond_data: [0 3 5 2 3 1 0 1 3 1 1 1 1 2 1 0 0 1 3 1 0 1 0 2 0 0 1 0 2 1 1 2 2 1 0 2 3
 1 0 3 1 2 0 0 2 1 0 3 0 2 2 1 0 1 3 0 2 1 1 3 2 2]
player: myles turner
stat: ast
condition: M Turner C starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.312258005142212

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.017638100915723782, 1.6628789237660895, 202.12698480924794)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.31128971, 0.91265641, 1.5140231 , 2.11538979, 2.71675649,
       3.31812318, 3.91948987]), array([202.12698481, 202.12698481, 202.12698481, 202.12698481,
       202.12698481, 202.12698481, 202.12698481])]

===Scipy _CDF===

x: [0.31128971 0.91265641 1.5140231  2.11538979 2.71675649 3.31812318
 3.91948987]
args: (array([202.12698481, 202.12698481, 202.12698481, 202.12698481,
       202.12698481, 202.12698481, 202.12698481]),)

===Scipy _CDF _Single===

x: 0.3112897117869405
args: (202.12698480924794,)

Output: cdf single = x

cdf_single: 0.24441961140721755

===Scipy _CDF _Single===

x: 0.9126564052412055
args: (202.12698480924794,)

Output: cdf single = x

cdf_single: 0.6385767212819086

===Scipy _CDF _Single===

x: 1.5140230986954704
args: (202.12698480924794,)

Output: cdf single = x

cdf_single: 0.8699800188674193

===Scipy _CDF _Single===

x: 2.115389792149735
args: (202.12698480924794,)

Output: cdf single = x

cdf_single: 0.9656032609103331

===Scipy _CDF _Single===

x: 2.7167564856040003
args: (202.12698480924794,)

Output: cdf single = x

cdf_single: 0.9934074907223546

===Scipy _CDF _Single===

x: 3.318123179058265
args: (202.12698480924794,)

Output: cdf single = x

cdf_single: 0.9990937549043142

===Scipy _CDF _Single===

x: 3.9194898725125302
args: (202.12698480924794,)

Output: cdf single = x

cdf_single: 0.9999112634102637
_cdf = _cdfvec(x, *args) = [0.24441961 0.63857672 0.86998002 0.96560326 0.99340749 0.99909375
 0.99991126]
prob_less_or_equal: [0.24441961 0.63857672 0.86998002 0.96560326 0.99340749 0.999
 0.999     ]
cdf_over: [0.75558039 0.36142328 0.13001998 0.03439674 0.00659251 0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [0 3 5 2 3 1 0 1 3 1 1 1 2 1 0 0 1 3 2 0 0 1 0 2 1 1 2 2 1 0 2 3 1 0 3 1 2
 0 0 2 1 0 0 1 3 0 2 1]
player: myles turner
stat: ast
condition: A Nembhard PG starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.2617220878601074

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.017600443299988933, 1.6442428646674792, 210.7121690711707)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.31479501, 0.92297767, 1.53116033, 2.13934299, 2.74752565,
       3.35570831, 3.96389097]), array([210.71216907, 210.71216907, 210.71216907, 210.71216907,
       210.71216907, 210.71216907, 210.71216907])]

===Scipy _CDF===

x: [0.31479501 0.92297767 1.53116033 2.13934299 2.74752565 3.35570831
 3.96389097]
args: (array([210.71216907, 210.71216907, 210.71216907, 210.71216907,
       210.71216907, 210.71216907, 210.71216907]),)

===Scipy _CDF _Single===

x: 0.3147950065178874
args: (210.7121690711707,)

Output: cdf single = x

cdf_single: 0.2470826966463628

===Scipy _CDF _Single===

x: 0.9229776670533999
args: (210.7121690711707,)

Output: cdf single = x

cdf_single: 0.6439811562832716

===Scipy _CDF _Single===

x: 1.5311603275889123
args: (210.7121690711707,)

Output: cdf single = x

cdf_single: 0.8742702269740087

===Scipy _CDF _Single===

x: 2.1393429881244246
args: (210.7121690711707,)

Output: cdf single = x

cdf_single: 0.9675920994294374

===Scipy _CDF _Single===

x: 2.747525648659937
args: (210.7121690711707,)

Output: cdf single = x

cdf_single: 0.9939953187860262

===Scipy _CDF _Single===

x: 3.355708309195449
args: (210.7121690711707,)

Output: cdf single = x

cdf_single: 0.9992083798565314

===Scipy _CDF _Single===

x: 3.963890969730962
args: (210.7121690711707,)

Output: cdf single = x

cdf_single: 0.9999262620593299
_cdf = _cdfvec(x, *args) = [0.2470827  0.64398116 0.87427023 0.9675921  0.99399532 0.99920838
 0.99992626]
prob_less_or_equal: [0.2470827  0.64398116 0.87427023 0.9675921  0.99399532 0.999
 0.999     ]
cdf_over: [0.7529173  0.35601884 0.12572977 0.0324079  0.00600468 0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [0 1 0 1 1 1 1 1 2 1 0 0 1 3 0 2 1 1 2 2 1 0 2 3 1 0 3 1 2 0 0 1 0 3 0 2 2
 1 0 1 3 0 2 1 1 3 2 2]
player: myles turner
stat: ast
condition: T Haliburton PG starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.4253339767456055

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.015913600678105377, 1.5375369367033744, 182.07306762512587)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.33554485, 0.98593573, 1.63632661, 2.28671749, 2.93710837,
       3.58749925, 4.23789012]), array([182.07306763, 182.07306763, 182.07306763, 182.07306763,
       182.07306763, 182.07306763, 182.07306763])]

===Scipy _CDF===

x: [0.33554485 0.98593573 1.63632661 2.28671749 2.93710837 3.58749925
 4.23789012]
args: (array([182.07306763, 182.07306763, 182.07306763, 182.07306763,
       182.07306763, 182.07306763, 182.07306763]),)

===Scipy _CDF _Single===

x: 0.33554484992358696
args: (182.07306762512587,)

Output: cdf single = x

cdf_single: 0.2627858817296201

===Scipy _CDF _Single===

x: 0.985935729081323
args: (182.07306762512587,)

Output: cdf single = x

cdf_single: 0.6758353473627573

===Scipy _CDF _Single===

x: 1.6363266082390588
args: (182.07306762512587,)

Output: cdf single = x

cdf_single: 0.8982287498351884

===Scipy _CDF _Single===

x: 2.286717487396795
args: (182.07306762512587,)

Output: cdf single = x

cdf_single: 0.977787681690026

===Scipy _CDF _Single===

x: 2.937108366554531
args: (182.07306762512587,)

Output: cdf single = x

cdf_single: 0.9966871168350805

===Scipy _CDF _Single===

x: 3.587499245712267
args: (182.07306762512587,)

Output: cdf single = x

cdf_single: 0.9996661353016061

===Scipy _CDF _Single===

x: 4.237890124870003
args: (182.07306762512587,)

Output: cdf single = x

cdf_single: 0.9999774369864414
_cdf = _cdfvec(x, *args) = [0.26278588 0.67583535 0.89822875 0.97778768 0.99668712 0.99966614
 0.99997744]
prob_less_or_equal: [0.26278588 0.67583535 0.89822875 0.97778768 0.99668712 0.999
 0.999     ]
cdf_over: [0.73721412 0.32416465 0.10177125 0.02221232 0.00331288 0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [0 3 5 2 3 1 0 1 1 1 2 1 0 0 0 2 0 1 0 1 1 2 2 1 0 2 3 1 3 1]
player: myles turner
stat: ast
condition: J Smith PF bench
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.2440590858459473

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.01872674972396025, 1.69790584254531, 244.33541786204174)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.30550914, 0.89446995, 1.48343076, 2.07239157, 2.66135238,
       3.25031319, 3.839274  ]), array([244.33541786, 244.33541786, 244.33541786, 244.33541786,
       244.33541786, 244.33541786, 244.33541786])]

===Scipy _CDF===

x: [0.30550914 0.89446995 1.48343076 2.07239157 2.66135238 3.25031319
 3.839274  ]
args: (array([244.33541786, 244.33541786, 244.33541786, 244.33541786,
       244.33541786, 244.33541786, 244.33541786]),)

===Scipy _CDF _Single===

x: 0.3055091376247017
args: (244.33541786204174,)

Output: cdf single = x

cdf_single: 0.24002158838302295

===Scipy _CDF _Single===

x: 0.8944699474308052
args: (244.33541786204174,)

Output: cdf single = x

cdf_single: 0.6289294978046889

===Scipy _CDF _Single===

x: 1.4834307572369083
args: (244.33541786204174,)

Output: cdf single = x

cdf_single: 0.862039999334148

===Scipy _CDF _Single===

x: 2.0723915670430118
args: (244.33541786204174,)

Output: cdf single = x

cdf_single: 0.9617710608294398

===Scipy _CDF _Single===

x: 2.661352376849115
args: (244.33541786204174,)

Output: cdf single = x

cdf_single: 0.9922172539828051

===Scipy _CDF _Single===

x: 3.2503131866552186
args: (244.33541786204174,)

Output: cdf single = x

cdf_single: 0.9988472202101477

===Scipy _CDF _Single===

x: 3.839273996461322
args: (244.33541786204174,)

Output: cdf single = x

cdf_single: 0.9998766013403502
_cdf = _cdfvec(x, *args) = [0.24002159 0.6289295  0.86204    0.96177106 0.99221725 0.99884722
 0.9998766 ]
prob_less_or_equal: [0.24002159 0.6289295  0.86204    0.96177106 0.99221725 0.99884722
 0.999     ]
cdf_over: [0.75997841 0.3710705  0.13796    0.03822894 0.00778275 0.00115278
 0.001     ]

===Test Distribute All Probs===

cond_data: [0 3 5 3 1 0 1 3 1 2 1 0 3 1 1 0 0 0 1 2 1 0 1 0 2 0 2 1 0 3 0 2 1 0 1 3 0
 2 1 1 3 2 2]
player: myles turner
stat: ast
condition: I Jackson SF bench
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.424989938735962

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.01802119033989008, 1.6581146768313002, 226.67261933964033)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.31241518, 0.91550977, 1.51860437, 2.12169896, 2.72479356,
       3.32788815, 3.93098275]), array([226.67261934, 226.67261934, 226.67261934, 226.67261934,
       226.67261934, 226.67261934, 226.67261934])]

===Scipy _CDF===

x: [0.31241518 0.91550977 1.51860437 2.12169896 2.72479356 3.32788815
 3.93098275]
args: (array([226.67261934, 226.67261934, 226.67261934, 226.67261934,
       226.67261934, 226.67261934, 226.67261934]),)

===Scipy _CDF _Single===

x: 0.31241517705508765
args: (226.67261933964033,)

Output: cdf single = x

cdf_single: 0.2452749821621562

===Scipy _CDF _Single===

x: 0.9155097723643976
args: (226.67261933964033,)

Output: cdf single = x

cdf_single: 0.6400759254138675

===Scipy _CDF _Single===

x: 1.518604367673707
args: (226.67261933964033,)

Output: cdf single = x

cdf_single: 0.8711378889064347

===Scipy _CDF _Single===

x: 2.121698962983017
args: (226.67261933964033,)

Output: cdf single = x

cdf_single: 0.9661369742270186

===Scipy _CDF _Single===

x: 2.7247935582923266
args: (226.67261933964033,)

Output: cdf single = x

cdf_single: 0.9935658296301451

===Scipy _CDF _Single===

x: 3.3278881536016365
args: (226.67261933964033,)

Output: cdf single = x

cdf_single: 0.9991249300901756

===Scipy _CDF _Single===

x: 3.9309827489109463
args: (226.67261933964033,)

Output: cdf single = x

cdf_single: 0.9999154006571768
_cdf = _cdfvec(x, *args) = [0.24527498 0.64007593 0.87113789 0.96613697 0.99356583 0.99912493
 0.9999154 ]
prob_less_or_equal: [0.24527498 0.64007593 0.87113789 0.96613697 0.99356583 0.999
 0.999     ]
cdf_over: [0.75472502 0.35992407 0.12886211 0.03386303 0.00643417 0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [0 3 5 2 3 1 0 1 3 1 1 1 2 1 0 0 1 3 0 0 1 0 2 1 1 2 2 1 0 2 3 1 0 3 1 2 0
 0 1 0 3 0 2 2 1 0 1 3 0 2 1 1 3 2 2]
player: myles turner
stat: ast
condition: TJ McConnell PG bench
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.6012589931488037

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.01837799634266876, 1.7127621763725276, 213.08250332779485)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.30265556, 0.88650778, 1.47036   , 2.05421222, 2.63806444,
       3.22191666, 3.80576888]), array([213.08250333, 213.08250333, 213.08250333, 213.08250333,
       213.08250333, 213.08250333, 213.08250333])]

===Scipy _CDF===

x: [0.30265556 0.88650778 1.47036    2.05421222 2.63806444 3.22191666
 3.80576888]
args: (array([213.08250333, 213.08250333, 213.08250333, 213.08250333,
       213.08250333, 213.08250333, 213.08250333]),)

===Scipy _CDF _Single===

x: 0.3026555604120961
args: (213.08250332779485,)

Output: cdf single = x

cdf_single: 0.23784763211739132

===Scipy _CDF _Single===

x: 0.8865077809917844
args: (213.08250332779485,)

Output: cdf single = x

cdf_single: 0.6246560368781919

===Scipy _CDF _Single===

x: 1.4703600015714728
args: (213.08250332779485,)

Output: cdf single = x

cdf_single: 0.858535721650028

===Scipy _CDF _Single===

x: 2.054212222151161
args: (213.08250332779485,)

Output: cdf single = x

cdf_single: 0.9600448440200938

===Scipy _CDF _Single===

x: 2.6380644427308493
args: (213.08250332779485,)

Output: cdf single = x

cdf_single: 0.9916619264865237

===Scipy _CDF _Single===

x: 3.221916663310538
args: (213.08250332779485,)

Output: cdf single = x

cdf_single: 0.9987266383369056

===Scipy _CDF _Single===

x: 3.805768883890226
args: (213.08250332779485,)

Output: cdf single = x

cdf_single: 0.999858635657254
_cdf = _cdfvec(x, *args) = [0.23784763 0.62465604 0.85853572 0.96004484 0.99166193 0.99872664
 0.99985864]
prob_less_or_equal: [0.23784763 0.62465604 0.85853572 0.96004484 0.99166193 0.99872664
 0.999     ]
cdf_over: [0.76215237 0.37534396 0.14146428 0.03995516 0.00833807 0.00127336
 0.001     ]

===Test Distribute All Probs===

cond_data: [3 5 2 3 1 1 0 1 0 1 0 1 2 1 1 2 2 1 3 0 3 1 2 0 1 0 3 2 2 1 0 3 1 2]
player: myles turner
stat: ast
condition: 2 before
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.1660268306732178

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.017992322591783134, 1.9065773861269568, 131.7366747253372)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.27168649, 0.79618658, 1.32068666, 1.84518675, 2.36968683,
       2.89418691, 3.418687  ]), array([131.73667473, 131.73667473, 131.73667473, 131.73667473,
       131.73667473, 131.73667473, 131.73667473])]

===Scipy _CDF===

x: [0.27168649 0.79618658 1.32068666 1.84518675 2.36968683 2.89418691
 3.418687  ]
args: (array([131.73667473, 131.73667473, 131.73667473, 131.73667473,
       131.73667473, 131.73667473, 131.73667473]),)

===Scipy _CDF _Single===

x: 0.27168649243450677
args: (131.7366747253372,)

Output: cdf single = x

cdf_single: 0.21413691176087443

===Scipy _CDF _Single===

x: 0.7961865768666481
args: (131.7366747253372,)

Output: cdf single = x

cdf_single: 0.5740764016319025

===Scipy _CDF _Single===

x: 1.320686661298789
args: (131.7366747253372,)

Output: cdf single = x

cdf_single: 0.8133941364867573

===Scipy _CDF _Single===

x: 1.8451867457309303
args: (131.7366747253372,)

Output: cdf single = x

cdf_single: 0.9349896221087074

===Scipy _CDF _Single===

x: 2.369686830163072
args: (131.7366747253372,)

Output: cdf single = x

cdf_single: 0.982196842186238

===Scipy _CDF _Single===

x: 2.894186914595213
args: (131.7366747253372,)

Output: cdf single = x

cdf_single: 0.9961985820150525

===Scipy _CDF _Single===

x: 3.4186869990273543
args: (131.7366747253372,)

Output: cdf single = x

cdf_single: 0.999370759362598
_cdf = _cdfvec(x, *args) = [0.21413691 0.5740764  0.81339414 0.93498962 0.98219684 0.99619858
 0.99937076]
prob_less_or_equal: [0.21413691 0.5740764  0.81339414 0.93498962 0.98219684 0.99619858
 0.999     ]
cdf_over: [0.78586309 0.4259236  0.18660586 0.06501038 0.01780316 0.00380142
 0.001     ]

===Test Distribute All Probs===

cond_data: [2 1 0 1 1 1 0 1 3 0 0 0 2 1 2 2 1 1 3 1 2 0 2 2 1 0 0 2 1 1]
player: myles turner
stat: ast
condition: home
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.4291179180145264

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.015050923736002144, 1.442246723781823, 188.3813441090831)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.35711638, 1.05047902, 1.74384166, 2.4372043 , 3.13056695,
       3.82392959, 4.51729223]), array([188.38134411, 188.38134411, 188.38134411, 188.38134411,
       188.38134411, 188.38134411, 188.38134411])]

===Scipy _CDF===

x: [0.35711638 1.05047902 1.74384166 2.4372043  3.13056695 3.82392959
 4.51729223]
args: (array([188.38134411, 188.38134411, 188.38134411, 188.38134411,
       188.38134411, 188.38134411, 188.38134411]),)

===Scipy _CDF _Single===

x: 0.35711637630588705
args: (188.3813441090831,)

Output: cdf single = x

cdf_single: 0.2789953153458068

===Scipy _CDF _Single===

x: 1.05047901912599
args: (188.3813441090831,)

Output: cdf single = x

cdf_single: 0.7065020677472656

===Scipy _CDF _Single===

x: 1.743841661946093
args: (188.3813441090831,)

Output: cdf single = x

cdf_single: 0.9188132964892942

===Scipy _CDF _Single===

x: 2.437204304766196
args: (188.3813441090831,)

Output: cdf single = x

cdf_single: 0.9851986859020968

===Scipy _CDF _Single===

x: 3.1305669475862987
args: (188.3813441090831,)

Output: cdf single = x

cdf_single: 0.9982553077289826

===Scipy _CDF _Single===

x: 3.823929590406402
args: (188.3813441090831,)

Output: cdf single = x

cdf_single: 0.9998686585632954

===Scipy _CDF _Single===

x: 4.517292233226505
args: (188.3813441090831,)

Output: cdf single = x

cdf_single: 0.9999937364564488
_cdf = _cdfvec(x, *args) = [0.27899532 0.70650207 0.9188133  0.98519869 0.99825531 0.99986866
 0.99999374]
prob_less_or_equal: [0.27899532 0.70650207 0.9188133  0.98519869 0.99825531 0.999
 0.999     ]
cdf_over: [0.72100468 0.29349793 0.0811867  0.01480131 0.00174469 0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [2 1 0 1 1 1 0 1 3 0 0 0 2 1 2 2 1 1 3 1 2 0 2 2 1 0 0 2 1 1]
player: myles turner
stat: ast
condition: Indianapolis IN
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.508004903793335

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.014637396602689964, 1.4417671367864668, 168.78837552139814)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.35694835, 1.05054163, 1.74413491, 2.43772819, 3.13132147,
       3.82491476, 4.51850804]), array([168.78837552, 168.78837552, 168.78837552, 168.78837552,
       168.78837552, 168.78837552, 168.78837552])]

===Scipy _CDF===

x: [0.35694835 1.05054163 1.74413491 2.43772819 3.13132147 3.82491476
 4.51850804]
args: (array([168.78837552, 168.78837552, 168.78837552, 168.78837552,
       168.78837552, 168.78837552, 168.78837552]),)

===Scipy _CDF _Single===

x: 0.3569483472551298
args: (168.78837552139814,)

Output: cdf single = x

cdf_single: 0.2788695253246295

===Scipy _CDF _Single===

x: 1.0505416290585181
args: (168.78837552139814,)

Output: cdf single = x

cdf_single: 0.7065308381336893

===Scipy _CDF _Single===

x: 1.744134910861906
args: (168.78837552139814,)

Output: cdf single = x

cdf_single: 0.9188644321887872

===Scipy _CDF _Single===

x: 2.4377281926652943
args: (168.78837552139814,)

Output: cdf single = x

cdf_single: 0.9852201174829598

===Scipy _CDF _Single===

x: 3.1313214744686824
args: (168.78837552139814,)

Output: cdf single = x

cdf_single: 0.9982597844637622

===Scipy _CDF _Single===

x: 3.8249147562720704
args: (168.78837552139814,)

Output: cdf single = x

cdf_single: 0.999869182657798

===Scipy _CDF _Single===

x: 4.518508038075459
args: (168.78837552139814,)

Output: cdf single = x

cdf_single: 0.9999937723090407
_cdf = _cdfvec(x, *args) = [0.27886953 0.70653084 0.91886443 0.98522012 0.99825978 0.99986918
 0.99999377]
prob_less_or_equal: [0.27886953 0.70653084 0.91886443 0.98522012 0.99825978 0.999
 0.999     ]
cdf_over: [0.72113047 0.29346916 0.08113557 0.01477988 0.00174022 0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [1 1]
player: myles turner
stat: ast
condition: hou
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.44746994972229

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.013422669566483861, 1.272732967289735, 197.07467609457933)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.40340094, 1.18911171, 1.97482248, 2.76053325, 3.54624402,
       4.33195479, 5.11766556]), array([197.07467609, 197.07467609, 197.07467609, 197.07467609,
       197.07467609, 197.07467609, 197.07467609])]

===Scipy _CDF===

x: [0.40340094 1.18911171 1.97482248 2.76053325 3.54624402 4.33195479
 5.11766556]
args: (array([197.07467609, 197.07467609, 197.07467609, 197.07467609,
       197.07467609, 197.07467609, 197.07467609]),)

===Scipy _CDF _Single===

x: 0.40340093543723266
args: (197.07467609457933,)

Output: cdf single = x

cdf_single: 0.31334670129209896

===Scipy _CDF _Single===

x: 1.1891117056465441
args: (197.07467609457933,)

Output: cdf single = x

cdf_single: 0.7656042873050442

===Scipy _CDF _Single===

x: 1.9748224758558552
args: (197.07467609457933,)

Output: cdf single = x

cdf_single: 0.9517117025187372

===Scipy _CDF _Single===

x: 2.7605332460651666
args: (197.07467609457933,)

Output: cdf single = x

cdf_single: 0.9942292915817229

===Scipy _CDF _Single===

x: 3.5462440162744784
args: (197.07467609457933,)

Output: cdf single = x

cdf_single: 0.9996092356579066

===Scipy _CDF _Single===

x: 4.33195478648379
args: (197.07467609457933,)

Output: cdf single = x

cdf_single: 0.9999852208704033

===Scipy _CDF _Single===

x: 5.117665556693101
args: (197.07467609457933,)

Output: cdf single = x

cdf_single: 0.9999996906795402
_cdf = _cdfvec(x, *args) = [0.3133467  0.76560429 0.9517117  0.99422929 0.99960924 0.99998522
 0.99999969]
prob_less_or_equal: [0.3133467  0.76560429 0.9517117  0.99422929 0.999      0.999
 0.999     ]
cdf_over: [0.6866533  0.23439571 0.0482883  0.00577071 0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [1 0 1 3 1 1 1 1 2 1 0 0 1 3 1 0 1 0 2 0 0 2 1 1 2 2 1 0 3 1 0 3 1 2 0 0 2
 1 0 3 0 2 2 1 0 1 3 0 2 1 1 3 2 2]
player: myles turner
stat: ast
condition: B Mathurin SG bench
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.3769140243530273

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.016227330828455292, 1.5320728331468834, 200.83631690869404)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.33694634, 0.98965682, 1.64236731, 2.29507779, 2.94778827,
       3.60049876, 4.25320924]), array([200.83631691, 200.83631691, 200.83631691, 200.83631691,
       200.83631691, 200.83631691, 200.83631691])]

===Scipy _CDF===

x: [0.33694634 0.98965682 1.64236731 2.29507779 2.94778827 3.60049876
 4.25320924]
args: (array([200.83631691, 200.83631691, 200.83631691, 200.83631691,
       200.83631691, 200.83631691, 200.83631691]),)

===Scipy _CDF _Single===

x: 0.3369463380981207
args: (200.83631690869404,)

Output: cdf single = x

cdf_single: 0.2638426470720749

===Scipy _CDF _Single===

x: 0.9896568218066505
args: (200.83631690869404,)

Output: cdf single = x

cdf_single: 0.6776581136058706

===Scipy _CDF _Single===

x: 1.6423673055151804
args: (200.83631690869404,)

Output: cdf single = x

cdf_single: 0.8994860933604302

===Scipy _CDF _Single===

x: 2.2950777892237104
args: (200.83631690869404,)

Output: cdf single = x

cdf_single: 0.9782713333001648

===Scipy _CDF _Single===

x: 2.94778827293224
args: (200.83631690869404,)

Output: cdf single = x

cdf_single: 0.996799438114473

===Scipy _CDF _Single===

x: 3.6004987566407696
args: (200.83631690869404,)

Output: cdf single = x

cdf_single: 0.9996823926535459

===Scipy _CDF _Single===

x: 4.2532092403493
args: (200.83631690869404,)

Output: cdf single = x

cdf_single: 0.999978927149799
_cdf = _cdfvec(x, *args) = [0.26384265 0.67765811 0.89948609 0.97827133 0.99679944 0.99968239
 0.99997893]
prob_less_or_equal: [0.26384265 0.67765811 0.89948609 0.97827133 0.99679944 0.999
 0.999     ]
cdf_over: [0.73615735 0.32234189 0.10051391 0.02172867 0.00320056 0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [1 1]
player: myles turner
stat: ast
condition: J Smith Jr PF opp starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.4533360004425049

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.00940993970382591, 1.26777444485189, 77.81897984276509)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.40181354, 1.19059739, 1.97938123, 2.76816507, 3.55694892,
       4.34573276, 5.13451661]), array([77.81897984, 77.81897984, 77.81897984, 77.81897984, 77.81897984,
       77.81897984, 77.81897984])]

===Scipy _CDF===

x: [0.40181354 1.19059739 1.97938123 2.76816507 3.55694892 4.34573276
 5.13451661]
args: (array([77.81897984, 77.81897984, 77.81897984, 77.81897984, 77.81897984,
       77.81897984, 77.81897984]),)

===Scipy _CDF _Single===

x: 0.4018135416535696
args: (77.81897984276509,)

Output: cdf single = x

cdf_single: 0.3121787445962751

===Scipy _CDF _Single===

x: 1.1905973857046515
args: (77.81897984276509,)

Output: cdf single = x

cdf_single: 0.7661883215756663

===Scipy _CDF _Single===

x: 1.9793812297557332
args: (77.81897984276509,)

Output: cdf single = x

cdf_single: 0.9522268997987927

===Scipy _CDF _Single===

x: 2.768165073806815
args: (77.81897984276509,)

Output: cdf single = x

cdf_single: 0.9943627105439325

===Scipy _CDF _Single===

x: 3.5569489178578966
args: (77.81897984276509,)

Output: cdf single = x

cdf_single: 0.9996248129236264

===Scipy _CDF _Single===

x: 4.3457327619089785
args: (77.81897984276509,)

Output: cdf single = x

cdf_single: 0.9999861188513762

===Scipy _CDF _Single===

x: 5.13451660596006
args: (77.81897984276509,)

Output: cdf single = x

cdf_single: 0.9999997171298817
_cdf = _cdfvec(x, *args) = [0.31217874 0.76618832 0.9522269  0.99436271 0.99962481 0.99998612
 0.99999972]
prob_less_or_equal: [0.31217874 0.76618832 0.9522269  0.99436271 0.999      0.999
 0.999     ]
cdf_over: [0.68782126 0.23381168 0.0477731  0.00563729 0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [1 1]
player: myles turner
stat: ast
condition: A Sengun C opp starters
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.5706970691680908

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.013386115694298976, 1.27269127505557, 194.78071447710576)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.40338543, 1.18912194, 1.97485845, 2.76059496, 3.54633147,
       4.33206798, 5.11780449]), array([194.78071448, 194.78071448, 194.78071448, 194.78071448,
       194.78071448, 194.78071448, 194.78071448])]

===Scipy _CDF===

x: [0.40338543 1.18912194 1.97485845 2.76059496 3.54633147 4.33206798
 5.11780449]
args: (array([194.78071448, 194.78071448, 194.78071448, 194.78071448,
       194.78071448, 194.78071448, 194.78071448]),)

===Scipy _CDF _Single===

x: 0.4033854287811338
args: (194.78071447710576,)

Output: cdf single = x

cdf_single: 0.31333529557219947

===Scipy _CDF _Single===

x: 1.1891219381764204
args: (194.78071447710576,)

Output: cdf single = x

cdf_single: 0.765608313336291

===Scipy _CDF _Single===

x: 1.974858447571707
args: (194.78071447710576,)

Output: cdf single = x

cdf_single: 0.9517157859767506

===Scipy _CDF _Single===

x: 2.7605949569669934
args: (194.78071447710576,)

Output: cdf single = x

cdf_single: 0.9942303817283143

===Scipy _CDF _Single===

x: 3.54633146636228
args: (194.78071447710576,)

Output: cdf single = x

cdf_single: 0.999609365251533

===Scipy _CDF _Single===

x: 4.332067975757567
args: (194.78071447710576,)

Output: cdf single = x

cdf_single: 0.9999852284682427

===Scipy _CDF _Single===

x: 5.1178044851528535
args: (194.78071447710576,)

Output: cdf single = x

cdf_single: 0.9999996908872496
_cdf = _cdfvec(x, *args) = [0.3133353  0.76560831 0.95171579 0.99423038 0.99960937 0.99998523
 0.99999969]
prob_less_or_equal: [0.3133353  0.76560831 0.95171579 0.99423038 0.999      0.999
 0.999     ]
cdf_over: [0.6866647  0.23439169 0.04828421 0.00576962 0.001      0.001
 0.001     ]

===Test Distribute All Probs===

cond_data: [1 0 1]
player: myles turner
stat: ast
condition: tue
Input: player_stat_model = {model name, sim data, sim avg, sim max}

Output: all_probs = [p1,...]

duration: 1.5060019493103027

===Test Generate CDF Over===

vals: [0 1 2 3 4 5 6]
model_name: skewnorm
sample_fit_params: (-0.009177301292290588, 0.848747134952328, 220.99127961056934)

===Scipy CDF===

test_argsreduce = goodargs = [array([0.59991519, 1.77812241, 2.95632963, 4.13453684, 5.31274406,
       6.49095128, 7.6691585 ]), array([220.99127961, 220.99127961, 220.99127961, 220.99127961,
       220.99127961, 220.99127961, 220.99127961])]

===Scipy _CDF===

x: [0.59991519 1.77812241 2.95632963 4.13453684 5.31274406 6.49095128
 7.6691585 ]
args: (array([220.99127961, 220.99127961, 220.99127961, 220.99127961,
       220.99127961, 220.99127961, 220.99127961]),)

===Scipy _CDF _Single===

x: 0.5999151930225836
args: (220.99127961056934,)

Output: cdf single = x

cdf_single: 0.4514372435191766

===Scipy _CDF _Single===

x: 1.7781224102477322
args: (220.99127961056934,)

Output: cdf single = x

cdf_single: 0.9246162474457635

===Scipy _CDF _Single===

x: 2.95632962747288
args: (220.99127961056934,)

Output: cdf single = x

cdf_single: 0.9968867582392629

===Scipy _CDF _Single===

x: 4.134536844698029
args: (220.99127961056934,)

Output: cdf single = x

cdf_single: 0.999964432880841

===Scipy _CDF _Single===

x: 5.312744061923178
args: (220.99127961056934,)

Output: cdf single = x

cdf_single: 0.999999892013346

===Scipy _CDF _Single===

x: 6.490951279148327
args: (220.99127961056934,)

Output: cdf single = x

cdf_single: 0.9999999999147045

===Scipy _CDF _Single===

x: 7.669158496373475
args: (220.99127961056934,)

Output: cdf single = x

cdf_single: 0.9999999999999828
_cdf = _cdfvec(x, *args) = [0.45143724 0.92461625 0.99688676 0.99996443 0.99999989 1.
 1.        ]
prob_less_or_equal: [0.45143724 0.92461625 0.99688676 0.999      0.999      0.999
 0.999     ]
cdf_over: [0.54856276 0.07538375 0.00311324 0.001      0.001      0.001
 0.001     ]
low_avg_stats: []

===Generate All Distrib Probs Dict===

Input: all_distrib_probs = {player: {condition: {year: {season part: {stat name: [prob over, ... = {'kyle kuzma': {'all': {'2024': {'regular': {'pts': {0: 0.0, ...}, ... 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'2023': {'regular': {'pts': {0: 0.0, ...

Output: all_distrib_probs_dict = {player: {stat name: {stat val: {'condition year part': prob, ... = {'kyle kuzma': {'pts': {1: {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...


===Generate All True Probs Dict===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']

Input: all_stat_probs_dict = {player: {stat name: {stat val: {'condition year part': prob, ... = {'kyle kuzma': {'pts': {0: {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: all_player_stat_dicts = {player: {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'kyle kuzma': {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-MEM': 'jaren jackson jr',...
Input: all_players_teams = {player:{year:{team:{GP:gp, MIN:min},... = {'bam adebayo': {'2018': {'mia': {GP:69, MIN:30}, ...
Input: rosters = {team:[players],..., {'nyk': [jalen brunson, ...], ...}
Input: all_box_scores = {year:{game key:{away:{starters:[],bench:[]},home:{starters:[],bench:[]}},... = {'2024': {'mem okc 12/18/2023': {'away': {'starters': ['J Jackson Jr PF', ...], 'bench': ['S Aldama PF', ...]}, 'home': ...
Input: all_cur_conds_dicts = {p1:{loc:away, start:start, dow:5, ...},... = {christian braun: {loc: away, start: bench, ...
Input: all_game_player_cur_conds = {p1: {teammates: {starters:[],...}, opp: {...}}, ... = {christian braun: {teammates: {out: [...], starters: [jamal murray,...], ...
Input: all_prev_vals = {player:{stat name:prev val,...}, ... = {jalen brunson:{pts:20,...},...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_true_probs_dict = {player: {stat: {val: {conditions: {prob, ... = {'nikola jokic': {'pts': {1: {'all 2024 regular prob': 0.0, ..., 'A Gordon PF, J Murray PG,... starters 2024 regular prob': 0.0, ...


===Generate All Conditions Weights: Myles Turner===

Settings: Season Part, Player
Setting: Player Team to match player abbrevs in all years = 'ind'

Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ... = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: player_prev_vals = {stat name: prev stat val, ...} = {'pts': 16, 'ast': 2, 'reb': 10}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...

Output: all_conditions_weights = {cond_key: w1, ... = {teammates:15, opp:10, loc:2, prev:x, ... 
Output: all_gp_conds_weights = {team condition:{player1: weight1, ... = {teammates: {p1:10,p2:5,...}, opp:{...}, ...
Output: all_prev_val_weights = {stat name:prev val weight, ...}


===Generate Game Players Condition Sample Weight: Myles Turner===

Settings: Season Part, Player

Input: cond_key = teammates
Input: lineup_team = ind
Input: team_gp_cur_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ... = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: game_players_cond_weight = x

game_players_cond_weight: 20.41

===Generate Game Players Condition Sample Weight: Myles Turner===

Settings: Season Part, Player

Input: cond_key = starters
Input: lineup_team = ind
Input: team_gp_cur_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ... = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: game_players_cond_weight = x

game_players_cond_weight: 20.33

===Generate Game Players Condition Sample Weight: Myles Turner===

Settings: Season Part, Player

Input: cond_key = bench
Input: lineup_team = ind
Input: team_gp_cur_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ... = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: game_players_cond_weight = x

game_players_cond_weight: 4.08

===Generate Game Players Condition Sample Weight: Myles Turner===

Settings: Season Part, Player

Input: cond_key = out
Input: lineup_team = ind
Input: team_gp_cur_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ... = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: game_players_cond_weight = x

game_players_cond_weight: None

===Generate Game Players Condition Sample Weight: Myles Turner===

Settings: Season Part, Player

Input: cond_key = opp
Input: lineup_team = hou
Input: team_gp_cur_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ... = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: game_players_cond_weight = x

game_players_cond_weight: 9.03

===Generate Game Players Condition Sample Weight: Myles Turner===

Settings: Season Part, Player

Input: cond_key = starters
Input: lineup_team = hou
Input: team_gp_cur_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ... = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: game_players_cond_weight = x

game_players_cond_weight: 7.78

===Generate Game Players Condition Sample Weight: Myles Turner===

Settings: Season Part, Player

Input: cond_key = bench
Input: lineup_team = hou
Input: team_gp_cur_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ... = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: game_players_cond_weight = x

game_players_cond_weight: 0.6

===Generate Game Players Condition Sample Weight: Myles Turner===

Settings: Season Part, Player

Input: cond_key = out
Input: lineup_team = hou
Input: team_gp_cur_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ... = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: game_players_cond_weight = x

game_players_cond_weight: 0.0

stat: pts

===Generate True Prob: Myles Turner, PTS, 1===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 1===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 1.0

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 1.0

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 1.0

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 1.0

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 1.0

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 1.0

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 1.0

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 1.0

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 1.0

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 1.0

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 1.0

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 1.0

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 1.0

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 1.0

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 1.0

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 1.0

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 1.0

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 1.0

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 1.0

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 1.0

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 1.0
true_prob: 1.0

===Generate True Prob: Myles Turner, PTS, 2===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 2===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 1.0

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 1.0

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 1.0

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 1.0

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 1.0

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 1.0

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 1.0

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 1.0

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 1.0

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 1.0

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 1.0

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 1.0

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 1.0

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 1.0

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 1.0

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 1.0

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 1.0

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 1.0

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 1.0

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 1.0

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 1.0
true_prob: 1.0

===Generate True Prob: Myles Turner, PTS, 3===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 3===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.99

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.99

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.99

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.99

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.99

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.99

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99
true_prob: 0.99

===Generate True Prob: Myles Turner, PTS, 4===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 4===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.99

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.99

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.99

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.99

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.99

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.99

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99
true_prob: 0.99

===Generate True Prob: Myles Turner, PTS, 5===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 5===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.98

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.98

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.98

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.98

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.98

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.98

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.98

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.98

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.98

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.98

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.99

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.98

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.98

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.98

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.98

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.98

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.99

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.99

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.99

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.98
true_prob: 0.98

===Generate True Prob: Myles Turner, PTS, 6===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 6===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.98

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.97

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.98

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.97

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.98

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.97

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.97

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.97

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.97

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.97

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.97

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.98

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.97

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.97

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.97

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.97

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.97

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.98

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.98

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.98

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.97
true_prob: 0.97

===Generate True Prob: Myles Turner, PTS, 7===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 7===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.96

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.96

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.96

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.96

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.97

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.96

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.96

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.96

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.96

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.96

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.95

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.97

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.96

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.96

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.96

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.96

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.96

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.98

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.97

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.97

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.96
true_prob: 0.96

===Generate True Prob: Myles Turner, PTS, 8===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 8===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.95

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.94

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.95

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.94

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.96

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.94

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.94

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.94

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.94

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.94

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.93

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.95

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.94

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.94

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.94

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.94

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.94

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.97

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.96

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.96

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.94
true_prob: 0.94

===Generate True Prob: Myles Turner, PTS, 9===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 9===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.93

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.92

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.93

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.91

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.94

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.91

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.91

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.92

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.91

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.92

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.89

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.93

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.91

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.91

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.91

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.92

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.91

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.96

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.94

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.94

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.91
true_prob: 0.92

===Generate True Prob: Myles Turner, PTS, 10===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 10===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.9

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.89

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.9

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.88

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.92

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.88

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.88

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.89

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.88

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.89

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.86

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.91

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.88

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.88

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.87

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.89

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.88

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.94

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.92

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.92

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.88
true_prob: 0.89

===Generate True Prob: Myles Turner, PTS, 11===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 11===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.86

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.86

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.86

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.84

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.89

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.84

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.83

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.85

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.84

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.85

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.81

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.88

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.84

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.84

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.83

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.85

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.84

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.92

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.9

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.9

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.84
true_prob: 0.85

===Generate True Prob: Myles Turner, PTS, 12===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 12===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.82

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.82

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.82

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.79

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.85

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.79

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.78

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.81

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.79

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.8

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.75

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.84

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.79

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.79

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.78

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.81

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.8

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.9

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.87

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.87

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.79
true_prob: 0.8

===Generate True Prob: Myles Turner, PTS, 13===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 13===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.77

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.77

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.77

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.74

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.81

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.73

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.73

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.76

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.74

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.75

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.68

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.8

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.74

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.74

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.72

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.76

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.74

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.87

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.83

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.83

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.74
true_prob: 0.75

===Generate True Prob: Myles Turner, PTS, 14===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 14===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.72

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.71

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.72

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.68

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.77

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.67

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.66

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.7

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.68

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.69

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.61

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.75

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.67

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.67

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.66

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.7

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.68

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.84

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.79

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.79

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.68
true_prob: 0.69

===Generate True Prob: Myles Turner, PTS, 15===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 15===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.66

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.65

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.66

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.61

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.71

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.6

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.59

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.63

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.61

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.62

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.53

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.7

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.6

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.6

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.59

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.64

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.61

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.8

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.74

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.74

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.61
true_prob: 0.62

===Generate True Prob: Myles Turner, PTS, 16===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 16===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.59

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.59

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.59

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.54

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.66

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.53

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.52

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.56

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.54

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.55

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.46

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.64

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.53

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.53

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.52

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.57

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.54

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.76

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.68

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.68

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.54
true_prob: 0.56

===Generate True Prob: Myles Turner, PTS, 17===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 17===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.52

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.52

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.52

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.47

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.6

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.46

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.44

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.49

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.47

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.48

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.38

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.57

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.46

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.46

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.44

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.5

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.47

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.72

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.62

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.62

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.46
true_prob: 0.48

===Generate True Prob: Myles Turner, PTS, 18===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 18===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.45

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.45

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.45

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.4

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.53

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.38

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.37

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.42

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.4

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.41

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.31

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.51

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.39

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.39

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.37

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.43

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.39

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.67

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.56

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.56

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.39
true_prob: 0.41

===Generate True Prob: Myles Turner, PTS, 19===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 19===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.38

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.39

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.38

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.33

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.47

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.32

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.3

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.35

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.33

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.34

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.25

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.44

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.32

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.32

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.3

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.36

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.33

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.61

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.5

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.5

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.33
true_prob: 0.34

===Generate True Prob: Myles Turner, PTS, 20===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 20===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.32

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.32

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.32

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.27

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.41

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.26

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.24

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.29

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.27

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.28

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.19

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.38

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.26

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.26

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.24

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.3

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.26

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.56

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.44

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.44

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.26
true_prob: 0.28

===Generate True Prob: Myles Turner, PTS, 21===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 21===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.26

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.27

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.26

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.21

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.35

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.2

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.19

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.23

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.21

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.22

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.14

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.31

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.2

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.2

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.19

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.24

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.21

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.5

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.38

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.38

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.21
true_prob: 0.23

===Generate True Prob: Myles Turner, PTS, 22===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 22===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.21

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.21

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.21

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.16

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.29

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.16

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.14

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.18

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.16

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.17

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.1

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.26

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.15

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.16

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.14

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.19

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.16

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.44

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.32

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.32

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.16
true_prob: 0.18

===Generate True Prob: Myles Turner, PTS, 23===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 23===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.16

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.17

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.16

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.12

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.24

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.12

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.1

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.14

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.12

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.13

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.07

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.21

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.12

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.12

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.1

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.15

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.12

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.39

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.26

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.26

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.12
true_prob: 0.13

===Generate True Prob: Myles Turner, PTS, 24===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 24===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.12

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.13

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.12

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.09

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.19

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.08

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.07

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.1

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.09

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.1

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.05

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.16

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.08

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.08

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.07

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.11

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.09

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.33

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.21

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.21

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.09
true_prob: 0.1

===Generate True Prob: Myles Turner, PTS, 25===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 25===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.09

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.1

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.09

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.06

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.15

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.06

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.05

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.08

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.06

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.07

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.03

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.13

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.06

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.06

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.05

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.08

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.06

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.28

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.17

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.17

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.06
true_prob: 0.07

===Generate True Prob: Myles Turner, PTS, 26===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 26===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.06

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.07

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.06

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.04

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.12

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.04

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.03

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.05

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.04

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.05

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.02

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.09

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.04

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.04

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.04

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.06

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.04

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.24

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.13

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.13

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.04
true_prob: 0.05

===Generate True Prob: Myles Turner, PTS, 27===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 27===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.05

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.05

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.05

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.03

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.09

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.03

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.02

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.04

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.03

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.03

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.01

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.07

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.03

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.03

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.02

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.04

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.03

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.2

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.1

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.1

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.03
true_prob: 0.04

===Generate True Prob: Myles Turner, PTS, 28===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 28===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.03

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.04

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.03

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.02

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.07

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.02

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.03

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.02

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.02

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.01

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.05

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.02

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.02

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.03

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.02

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.16

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.08

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.08

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.02
true_prob: 0.02

===Generate True Prob: Myles Turner, PTS, 29===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 29===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.02

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.02

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.02

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.05

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.02

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.03

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.02

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.01

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.13

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.06

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.06

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01
true_prob: 0.01

===Generate True Prob: Myles Turner, PTS, 30===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 30===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.02

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.04

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.02

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.01

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.1

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.04

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.04

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01
true_prob: 0.01

===Generate True Prob: Myles Turner, PTS, 31===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 31===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.03

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.02

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.08

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.03

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.03

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0
true_prob: 0.0

===Generate True Prob: Myles Turner, PTS, 32===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 32===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.02

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.01

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.06

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.02

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.02

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0
true_prob: 0.0

===Generate True Prob: Myles Turner, PTS, 33===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 33===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.01

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.04

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.01

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.01

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0
true_prob: 0.0

===Generate True Prob: Myles Turner, PTS, 34===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 34===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.03

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.01

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.01

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0
true_prob: 0.0

===Generate True Prob: Myles Turner, PTS, 35===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 35===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.02

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.01

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.01

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0
true_prob: 0.0

===Generate True Prob: Myles Turner, PTS, 36===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 36===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.02

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0
true_prob: 0.0

===Generate True Prob: Myles Turner, PTS, 37===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 16
Input: prev_val_weight = 6.99
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, PTS, 37===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 16
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = pts

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.01

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-19 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0
true_prob: 0.0

stat: reb

===Generate True Prob: Myles Turner, REB, 1===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 10
Input: prev_val_weight = 5.79
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 6.99}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, REB, 1===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 10
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.99

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.99

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.99

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.99

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.99

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.99

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-14 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99
true_prob: 0.99

===Generate True Prob: Myles Turner, REB, 2===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 10
Input: prev_val_weight = 5.79
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 5.79}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, REB, 2===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 10
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.98

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.98

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.98

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.98

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.98

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.98

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.98

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.98

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.98

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.98

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.98

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.98

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.98

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.98

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.98

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.98

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.98

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.99

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.98

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.98

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-14 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.99
true_prob: 0.98

===Generate True Prob: Myles Turner, REB, 3===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 10
Input: prev_val_weight = 5.79
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 5.79}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, REB, 3===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 10
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.96

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.96

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.96

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.96

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.94

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.95

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.96

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.96

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.96

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.96

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.95

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.96

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.96

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.96

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.96

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.96

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.94

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.97

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.95

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.95

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-14 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.97
true_prob: 0.96

===Generate True Prob: Myles Turner, REB, 4===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 10
Input: prev_val_weight = 5.79
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 5.79}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, REB, 4===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 10
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.92

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.91

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.92

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.92

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.85

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.89

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.91

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.92

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.91

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.9

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.88

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.92

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.91

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.91

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.91

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.92

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.87

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.95

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.88

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.88

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-14 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.93
true_prob: 0.91

===Generate True Prob: Myles Turner, REB, 5===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 10
Input: prev_val_weight = 5.79
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 5.79}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, REB, 5===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 10
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.84

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.83

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.84

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.85

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.7

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.78

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.83

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.84

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.82

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.81

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.76

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.85

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.82

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.82

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.83

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.84

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.74

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.9

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.76

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.76

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-14 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.88
true_prob: 0.83

===Generate True Prob: Myles Turner, REB, 6===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 10
Input: prev_val_weight = 5.79
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 5.79}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, REB, 6===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 10
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.73

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.71

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.73

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.73

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.51

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.63

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.7

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.72

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.69

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.68

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.6

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.74

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.69

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.7

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.71

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.73

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.57

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.84

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.6

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.6

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-14 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.79
true_prob: 0.71

===Generate True Prob: Myles Turner, REB, 7===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 10
Input: prev_val_weight = 5.79
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 5.79}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, REB, 7===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 10
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.59

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.56

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.58

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.59

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.31

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.46

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.54

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.57

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.53

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.51

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.41

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.6

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.54

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.54

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.56

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.58

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.38

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.75

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.41

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.41

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-14 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.68
true_prob: 0.57

===Generate True Prob: Myles Turner, REB, 8===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 10
Input: prev_val_weight = 5.79
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 5.79}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, REB, 8===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 10
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.43

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.39

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.42

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.43

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.16

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.29

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.38

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.41

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.36

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.34

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.24

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.44

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.37

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.38

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.4

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.42

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.21

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.64

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.24

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.24

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-14 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.55
true_prob: 0.41

===Generate True Prob: Myles Turner, REB, 9===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 10
Input: prev_val_weight = 5.79
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 5.79}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, REB, 9===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 10
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.28

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.24

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.28

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.28

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.06

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.16

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.23

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.26

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.22

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.2

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.12

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.29

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.22

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.23

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.25

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.28

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.1

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.51

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.12

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.12

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-14 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.41
true_prob: 0.27

===Generate True Prob: Myles Turner, REB, 10===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 10
Input: prev_val_weight = 5.79
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 5.79}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, REB, 10===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 10
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.16

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.13

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.16

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.16

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.02

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.07

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.12

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.14

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.11

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.1

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.05

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.17

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.12

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.12

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.14

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.16

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.03

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.38

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.05

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.05

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-14 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.29
true_prob: 0.16

===Generate True Prob: Myles Turner, REB, 11===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 10
Input: prev_val_weight = 5.79
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 5.79}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, REB, 11===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 10
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.08

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.06

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.08

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.08

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.03

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.06

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.07

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.05

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.04

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.02

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.09

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.05

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.05

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.06

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.08

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.01

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.26

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.02

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.01

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-14 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.19
true_prob: 0.09

===Generate True Prob: Myles Turner, REB, 12===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 10
Input: prev_val_weight = 5.79
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 5.79}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, REB, 12===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 10
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.03

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.02

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.03

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.03

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.02

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.03

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.02

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.04

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.02

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.02

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.02

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.04

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.16

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-14 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.12
true_prob: 0.04

===Generate True Prob: Myles Turner, REB, 13===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 10
Input: prev_val_weight = 5.79
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 5.79}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, REB, 13===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 10
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.01

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.09

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-14 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.07
true_prob: 0.02

===Generate True Prob: Myles Turner, REB, 14===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 10
Input: prev_val_weight = 5.79
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 5.79}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, REB, 14===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 10
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.04

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-14 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.03
true_prob: 0.01

===Generate True Prob: Myles Turner, REB, 15===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 10
Input: prev_val_weight = 5.79
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 5.79}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, REB, 15===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 10
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.02

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-14 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.02
true_prob: 0.0

===Generate True Prob: Myles Turner, REB, 16===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 10
Input: prev_val_weight = 5.79
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 5.79}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, REB, 16===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 10
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = reb

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.01

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 10-14 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01
true_prob: 0.0

stat: ast

===Generate True Prob: Myles Turner, AST, 1===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 2
Input: prev_val_weight = 8.15
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 5.79}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, AST, 1===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 2
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.77

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.77

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.77

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.78

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.6

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.76

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.78

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = ast

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.73

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.77

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.78

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.77

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.81

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.77

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.75

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.76

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.72

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.78

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = ast

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.79

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.69

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.69

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 0-4 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.75
true_prob: 0.76

===Generate True Prob: Myles Turner, AST, 2===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 2
Input: prev_val_weight = 8.15
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 8.15}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, AST, 2===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 2
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.38

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.39

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.38

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.41

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.13

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.37

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.42

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = ast

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.31

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.39

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.42

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.39

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.48

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.38

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.34

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.38

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.29

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.4

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = ast

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.43

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.23

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.23

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 0-4 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.35
true_prob: 0.37

===Generate True Prob: Myles Turner, AST, 3===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 2
Input: prev_val_weight = 8.15
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 8.15}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, AST, 3===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 2
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.15

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.15

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.15

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.17

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.14

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.18

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = ast

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.09

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.16

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.19

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.15

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.24

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.15

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.11

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.15

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.09

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.17

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = ast

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.19

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.05

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.05

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 0-4 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.12
true_prob: 0.14

===Generate True Prob: Myles Turner, AST, 4===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 2
Input: prev_val_weight = 8.15
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 8.15}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, AST, 4===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 2
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.05

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.05

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.05

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.06

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.04

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.06

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = ast

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.02

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.05

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.07

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.04

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.1

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.04

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.03

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.04

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.02

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.05

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = ast

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.07

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.01

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.01

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 0-4 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.03
true_prob: 0.04

===Generate True Prob: Myles Turner, AST, 5===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 2
Input: prev_val_weight = 8.15
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 8.15}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, AST, 5===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 2
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.02

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.02

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = ast

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.02

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.01

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.03

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.01

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = ast

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.02

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 0-4 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.01
true_prob: 0.01

===Generate True Prob: Myles Turner, AST, 6===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 2
Input: prev_val_weight = 8.15
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 8.15}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, AST, 6===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 2
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = ast

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.01

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = ast

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 0-4 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0
true_prob: 0.0

===Generate True Prob: Myles Turner, AST, 7===

Setting: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Setting: Season Part = regular

Input: player_team = abbrev = ind
Input: prev_val = 2
Input: prev_val_weight = 8.15
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc:away, start:start, prev:5, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_conditions_weights_dict = {cond_key: w1, ... = {teammates: 15, opp:10, loc:2, ... = {'loc': 6.9, 'tod': 1.72, 'city': 1.72, 'timelag': 1.9, 'dow': 0.9, 'time after': 5.12, 'time before': 5.33, 'teammates': 20.41, 'opp': 9.03, 'prev': 8.15}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: true_prob = x


===Generate All Conditions Mean Probs: Myles Turner, AST, 7===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular

Input: player team = abbrev = ind
Input: prev_val = 2
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_current_conditions = {loc: away, start: bench, ... = {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}
Input: all_gp_conds = {team condition:{gp condition:cond type,... = {teammates:{'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'teammates': {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}, 'opp': {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}}
Input: all_gp_conds_weights = {team condition:{cond_key: w1, ... = {teammates: {starters:10,bench:5,...}, opp:{...}, ... = {'teammates': {'starters': 20.33, 'bench': 4.08, 'out': 0}, 'opp': {'starters': 7.78, 'bench': 0.6, 'out': 0.0}}
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: all_conditions_mean_probs = [p1,...]


===Generate Condition Mean Prob: home===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 7:00===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: local===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: Indianapolis IN===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 0 lag===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: tue===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: weekday===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Condition Mean Prob: 2 after===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: 2 before===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: nf===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: None

===Generate Game Players Condition Mean Prob: teammates===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = ast

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Haliburton PG starters': 'starters', 'A Nembhard PG starters': 'starters', 'A Nesmith SF starters': 'starters', 'P Siakam PF starters': 'starters', 'A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters': 'starters', 'B Hield SG bench': 'bench', 'I Jackson SF bench': 'bench', 'B Mathurin SG bench': 'bench', 'TJ McConnell PG bench': 'bench', 'J Smith PF bench': 'bench', 'J Smith Jr PF bench': 'bench', 'O Toppin PF bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith PF, O Toppin PF, TJ McConnell PG bench': 'bench', 'B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 20.33, 'bench': 4.08, 'out': 0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nembhard PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nesmith SF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: P Siakam PF starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! P Siakam PF starters 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: B Hield SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG bench 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: I Jackson SF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: B Mathurin SG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith Jr PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith Jr PF bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: O Toppin PF bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! O Toppin PF bench 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Nembhard PG, A Nesmith SF, M Turner C, P Siakam PF, T Haliburton PG starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2024 regular prob
Warning: Current Conditions not in val probs dict! B Hield SG, B Mathurin SG, I Jackson SF, J Smith Jr PF, O Toppin PF, TJ McConnell PG bench 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Game Players Condition Mean Prob: opp===

Settings: Current Year = 2024
Settings: Season Years = ['2024', '2023']
Settings: Season Part = regular
Settings: Stat Name = ast

Input: player team = abbrev = ind
Input: team_gp_conds = {gp condition:cond type,... = {'A Gordon PF, J Murray PG,... out':out, 'A Gordon PF out':out, ...}, opp:{...} = {'T Eason F opp out': 'out', 'F VanVleet PG opp out': 'out', 'F VanVleet PG, T Eason F opp out': 'out', 'A Thompson F opp starters': 'starters', 'Ja Green SG opp starters': 'starters', 'D Brooks SF opp starters': 'starters', 'J Smith Jr PF opp starters': 'starters', 'J Smith PF opp starters': 'starters', 'A Sengun C opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith Jr PF, Ja Green SG opp starters': 'starters', 'A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters': 'starters', 'Je Green PF opp bench': 'bench', 'A Holiday G opp bench': 'bench', 'C Whitmore F opp bench': 'bench'}
Input: team_gp_conds_weights_dict = {cond_key: w1, ... = {starters:10,bench:5,... = {'starters': 7.78, 'bench': 0.6, 'out': 0.0}
Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: all_players_abbrevs = {year:{player abbrev-team abbrev:player, ... = {'2024': {'J Jackson Jr PF-mem': 'jaren jackson jr',...
Input: all_players_cur_avg_playtimes = {player:playtime, ....

Output: gp_condition_mean_prob = x


===Generate Condition Mean Prob: T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Thompson F opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Thompson F opp starters 2023 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: D Brooks SF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! D Brooks SF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: J Smith Jr PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith Jr PF opp starters 2024 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: J Smith PF opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! J Smith PF opp starters 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C opp starters 2024 regular prob
condition_mean_prob: 0.0

===Generate Condition Mean Prob: Je Green PF opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! Je Green PF opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Holiday G opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! A Holiday G opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: C Whitmore F opp bench===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2024 regular prob
Warning: Current Conditions not in val probs dict! C Whitmore F opp bench 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: F VanVleet PG, T Eason F opp out===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2024 regular prob
Warning: Current Conditions not in val probs dict! F VanVleet PG, T Eason F opp out 2023 regular prob
condition_mean_prob: None

===Generate Condition Mean Prob: A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2024 regular prob
Warning: Current Conditions not in val probs dict! A Sengun C, A Thompson F, D Brooks SF, J Smith PF, Ja Green SG opp starters 2023 regular prob
condition_mean_prob: None

===Generate Weighted Stats===

Input: all_conditions_mean_stats = {cond1:p1,... = {}
Input: all_conditions_stats = {cond1:w1,... = {}

Output: weighted_stats = [ws1,...]

gp_condition_mean_prob: None

===Generate Condition Mean Prob: 0-4 prev===

Settings: Season Years, Season Part

Input: val_probs_dict = {'condition year part': prob, ... = {'all 2024 regular prob': 0.0, ..., 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters 2023 regular prob': 0.0, ...
Input: player_stat_dict = {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...

Output: condition_mean_prob = x

condition_mean_prob: 0.0
true_prob: 0.0

===Generate All True Prob Dicts===

Input: all_cur_conds_dicts = {p1:{'p1, p2 out':'out', 'away':'loc', ...},... = {'nikola jokic': ['away':'loc', 'V Cancar SF, J Murray PG,... out':'out', ... = {'myles turner': {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}}
Input: all_game_player_cur_conds = {p1: {teammates: {starters:[],...}, opp: {...}}, ...
Input: all_true_probs_dict = {player: {stat: {val: {conditions: {prob, ... = {'nikola jokic': {'pts': {0: {'all 2024 regular prob': 0.0, ..., 'A Gordon PF, J Murray PG,... starters 2024 regular prob': 0.0, ...
Input: all_players_teams = {player:{year:{team:{GP:gp, MIN:min},... = {'bam adebayo': {'2018': {'mia': {GP:69, MIN:30}, ...
Input: all_player_stat_dicts = {player: {year: {season part: {stat name: {condition: {game idx: stat val, ... = {'kyle kuzma': {'2023': {'regular': {'pts': {'all': {'0': 33, ... }, 'B Beal SG, D Gafford C, K Kuzma SF, K Porzingis C, M Morris PG starters': {'1': 7, ...
Input: game_teams = [(away team, home team), ...] = [('nyk', 'bkn'), ...]
Input: teams_current_rosters = {team:[players],..., {'nyk': [jalen brunson, ...], ...}
Input: Current Year to get current team

Output: all_true_prob_dicts = [{player:p1, team:t1, stat:s1, val:v1, condition prob:prob1, ... = [{'player': 'nikola jokic', 'team': 'den', 'stat': 'pts', 'val': '0', 'all 2024 regular prob': 0, ..., 'A Gordon PF, J Murray PG,... starters 2024 regular prob': 0, ...


===Generate Conditions Order===

Input: all_cur_conds_dicts = {player: {cond_key:cond_val, ... = {'myles turner': {'loc': 'home', 'tod': '7:00', 'coverage': 'local', 'city': 'Indianapolis IN', 'timelag': '0 lag', 'dow': 'tue', 'weekend': 'weekday', 'time after': '2 after', 'time before': '2 before', 'former': 'nf', 'opp team': 'hou'}}
Input: all_game_player_cur_conds = {p1: {teammates: {starters:[],...}, opp: {...}}, ... = {'myles turner': {'teammates': {'out': [], 'starters': ['tyrese haliburton', 'andrew nembhard', 'aaron nesmith', 'pascal siakam', 'myles turner'], 'bench': ['buddy hield', 'isaiah jackson', 'bennedict mathurin', 'tj mcconnell', 'jalen smith', 'obi toppin']}, 'opp': {'out': ['tari eason', 'fred vanvleet'], 'starters': ['amen thompson', 'jalen green', 'dillon brooks', 'jabari smith jr', 'alperen sengun'], 'bench': ['jeff green', 'aaron holiday', "jae'sean tate", 'cam whitmore']}}}

===Determine All Current GP Conds===

Input: all_game_player_cur_conds = {p1: {teammates: {starters:[],...}, opp: {...}}, ... = {'myles turner': {'teammates': {'out': [], 'starters': ['tyrese haliburton', 'andrew nembhard', 'aaron nesmith', 'pascal siakam', 'myles turner'], 'bench': ['buddy hield', 'isaiah jackson', 'bennedict mathurin', 'tj mcconnell', 'jalen smith', 'obi toppin']}, 'opp': {'out': ['tari eason', 'fred vanvleet'], 'starters': ['amen thompson', 'jalen green', 'dillon brooks', 'jabari smith jr', 'alperen sengun'], 'bench': ['jeff green', 'aaron holiday', "jae'sean tate", 'cam whitmore']}}}

Output: all_cur_conds = ['all','teammates','opp','J Giddey F, C Wallace G,... starters',...]


===After Injury Players===


==============================


===Write Prop Tables===

book_name: data/prop tables - 02-06-24.xlsx
